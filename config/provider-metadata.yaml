name: opentelekomcloud/opentelekomcloud
resources:
    opentelekomcloud__er_propagation_v3:
        subCategory: Enterprise Router (ER)
        description: Manages an Enterprise Router Propagation resource within OpenTelekomCloud.
        name: opentelekomcloud__er_propagation_v3
        title: opentelekomcloud_er_propagation_v3
        examples:
            - name: test
              manifest: |-
                {
                  "attachment_id": "${var.attachment_id}",
                  "instance_id": "${var.instance_id}",
                  "route_table_id": "${var.route_table_id}"
                }
              references:
                attachment_id: var.attachment_id
                instance_id: var.instance_id
                route_table_id: var.route_table_id
        argumentDocs:
            attachment_id: '- (Required, String, ForceNew) Specifies the ID of the attachment corresponding to the propagation.'
            attachment_type: '- The type of the attachment corresponding to the propagation.'
            create: '- Default is 5 minutes.'
            created_at: '- The creation time.'
            delete: '- Default is 2 minutes.'
            id: '- The resource ID.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies the ID of the ER instance to which the route table and the
                attachment belongs.
            region: '- The region where the ER instance and route table are located.'
            route_table_id: |-
                - (Required, String, ForceNew) Specifies the ID of the route table to which the propagation
                belongs.
            status: '- The current status of the propagation.'
            updated_at: '- The latest update time.'
        importStatements: []
    opentelekomcloud_antiddos_v1:
        subCategory: Anti-DDoS
        description: Manages a Anti-DDoS resource within OpenTelekomCloud.
        name: opentelekomcloud_antiddos_v1
        title: opentelekomcloud_antiddos_v1
        examples:
            - name: myantiddos
              manifest: |-
                {
                  "app_type_id": 0,
                  "cleaning_access_pos_id": 2,
                  "enable_l7": true,
                  "floating_ip_id": "${var.eip_id}",
                  "http_request_pos_id": 3,
                  "traffic_pos_id": 1
                }
              references:
                floating_ip_id: var.eip_id
        argumentDocs:
            app_type_id: '- (Required) The application type ID.'
            cleaning_access_pos_id: '- (Required) The position ID of access limit during cleaning. The value ranges from 1 to 8.'
            enable_l7: '- (Required) Specifies whether to enable L7 defense.'
            floating_ip_id: '- (Required) The ID corresponding to the Elastic IP Address (EIP) of a user.'
            http_request_pos_id: '- (Required) The position ID of number of HTTP requests. The value ranges from 1 to 15.'
            traffic_pos_id: '- (Required) The position ID of traffic. The value ranges from 1 to 9.'
        importStatements: []
    opentelekomcloud_apigw_acl_policy_associate_v2:
        subCategory: APIGW
        description: Manages a APIGW ACL policy association resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_acl_policy_associate_v2
        title: opentelekomcloud_apigw_acl_policy_associate_v2
        examples:
            - name: test
              manifest: |-
                {
                  "gateway_id": "${var.gateway_id}",
                  "policy_id": "${var.policy_id}",
                  "publish_ids": "${var.api_publish_ids}"
                }
              references:
                gateway_id: var.gateway_id
                policy_id: var.policy_id
                publish_ids: var.api_publish_ids
        argumentDocs:
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated gateway instance to which the APIs and the
                ACL policy belong. Changing this will create a new resource.
            id: '- Resource ID. The format is <gateway_id>/<policy_id>.'
            policy_id: |-
                - (Required, String, ForceNew) Specifies the ACL Policy ID for APIs binding.
                Changing this will create a new resource.
            publish_ids: '- (Required, List) Specifies the publishing IDs corresponding to the APIs bound by the ACL policy.'
            region: '- Specifies the region where the dedicated instance and the throttling policy are located.'
        importStatements: []
    opentelekomcloud_apigw_acl_policy_v2:
        subCategory: APIGW
        description: Manages a APIGW ACL policy resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_acl_policy_v2
        title: opentelekomcloud_apigw_acl_policy_v2
        examples:
            - name: ip_rule
              manifest: |-
                {
                  "entity_type": "IP",
                  "gateway_id": "${var.gateway_id}",
                  "name": "${var.policy_name}",
                  "type": "PERMIT",
                  "value": "${join(\",\", var.ip_addresses)}"
                }
              references:
                gateway_id: var.gateway_id
                name: var.policy_name
            - name: domain_rule
              manifest: |-
                {
                  "entity_type": "DOMAIN",
                  "gateway_id": "${var.gateway_id}",
                  "name": "${var.policy_name}",
                  "type": "PERMIT",
                  "value": "${join(\",\", var.domain_names)}"
                }
              references:
                gateway_id: var.gateway_id
                name: var.policy_name
            - name: domain_id_rule
              manifest: |-
                {
                  "entity_type": "DOMAIN_ID",
                  "gateway_id": "${var.gateway_id}",
                  "name": "${var.policy_name}",
                  "type": "PERMIT",
                  "value": "${join(\",\", var.domain_ids)}"
                }
              references:
                gateway_id: var.gateway_id
                name: var.policy_name
        argumentDocs:
            DENY: ': Forbid specific IPs or accounts to access API.'
            DOMAIN: ': This rule is specified to control access to the API for specific accounts (specified by domain name).'
            DOMAIN_ID: |-
                : This rule is specified to control access to the API for specific accounts (specified by domain ID).
                Changing this will create a new resource.
            IP: ': This rule is specified to control access to the API for specific IPs.'
            PERMIT: ': Allow specific IPs or accounts to access API.'
            entity_type: |-
                - (Required, String, ForceNew) Specifies the entity type of the ACL policy.
                The valid values are as follows:
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated gateway instance to which the ACL
                policy belongs.
                Changing this will create a new resource.
            id: '- The ID of the ACL policy.'
            name: |-
                - (Required, String) Specifies the name of the ACL policy.
                The valid length is limited from 3 to 64, only English letters, Chinese characters, digits and underscores (_) are
                allowed. The name must start with an letter.
            region: '- The region where the ACL policy is located.'
            type: |-
                - (Required, String) Specifies the type of the ACL policy.
                The valid values are as follows:
            updated_at: '- The latest update time of the ACL policy.'
            value: |-
                - (Required, String) Specifies one or more objects from which the access will be controlled.
                Separate multiple objects with commas (,).
        importStatements: []
    opentelekomcloud_apigw_api_publishment_v2:
        subCategory: APIGW
        description: Manages a APIGW API publishment resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_api_publishment_v2
        title: opentelekomcloud_apigw_api_publishment_v2
        examples:
            - name: default
              manifest: |-
                {
                  "api_id": "${var.api_id}",
                  "environment_id": "${var.environment_id}",
                  "gateway_id": "${var.gateway_id}"
                }
              references:
                api_id: var.api_id
                environment_id: var.environment_id
                gateway_id: var.gateway_id
            - name: default
              manifest: |-
                {
                  "api_id": "${var.api_id}",
                  "environment_id": "${var.environment_id}",
                  "gateway_id": "${var.gateway_id}",
                  "version_id": "${var.version_id}"
                }
              references:
                api_id: var.api_id
                environment_id: var.environment_id
                gateway_id: var.gateway_id
                version_id: var.version_id
        argumentDocs:
            api_id: |-
                - (Required, String, ForceNew) Specifies the ID of the API to be published or already published.
                Changing this will create a new resource.
            description: '- (Optional, String) Specifies the description of the current publish.'
            environment_id: |-
                - (Required, String, ForceNew) Specifies the ID of the environment to which the current version of the API
                will be published or has been published.
                Changing this will create a new resource.
            environment_name: '- The name of the environment to which the current version of the API is published.'
            history: |-
                - All publish history of the API.
                The object structure is documented below.
            history.description: '- The version description of the API publish.'
            history.version_id: '- The version ID of the API publish.'
            id: '- The resource ID, which is constructed from the instance ID, environment ID, and API ID, separated by slashes.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies an ID of the APIGW dedicated instance to which the API belongs
                to. Changing this will create a new resource.
            publish_id: '- The publishing ID of the API in current environment.'
            published_at: '- Time when the current version was published.'
            region: '- The region in which to APIs was published.'
            version_id: '- (Optional, String) Specifies the version ID of the current publish.'
        importStatements:
            - $ terraform import opentelekomcloud_apigw_api_publishment_v2.pub <instance_id>/<environment_id>/<api_id>
    opentelekomcloud_apigw_api_v2:
        subCategory: APIGW
        description: Manages a APIGW API resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_api_v2
        title: opentelekomcloud_apigw_api_v2
        examples:
            - name: api
              manifest: |-
                {
                  "backend_params": [
                    {
                      "location": "PATH",
                      "name": "userAge",
                      "type": "REQUEST",
                      "value": "user_age"
                    }
                  ],
                  "description": "Created by script",
                  "failure_response": "Failed response",
                  "gateway_id": "${opentelekomcloud_apigw_gateway_v2.gateway.id}",
                  "group_id": "${opentelekomcloud_apigw_group_v2.group.id}",
                  "http": [
                    {
                      "request_method": "GET",
                      "request_protocol": "HTTP",
                      "request_uri": "/getUserAge/{userAge}",
                      "retry_count": 1,
                      "timeout": 30000,
                      "url_domain": "opentelekomcloud.my.com"
                    }
                  ],
                  "http_policy": [
                    {
                      "backend_params": [
                        {
                          "location": "PATH",
                          "name": "userAge",
                          "type": "REQUEST",
                          "value": "user_age"
                        },
                        {
                          "location": "HEADER",
                          "name": "%[2]s",
                          "system_param_type": "internal",
                          "type": "SYSTEM",
                          "value": "serverName"
                        }
                      ],
                      "conditions": [
                        {
                          "origin": "param",
                          "param_name": "user_age",
                          "type": "EXACT",
                          "value": "28"
                        }
                      ],
                      "effective_mode": "ANY",
                      "name": "my_policy1",
                      "request_method": "GET",
                      "request_protocol": "HTTP",
                      "request_uri": "/getUserAge/{userAge}",
                      "retry_count": 1,
                      "timeout": 30000,
                      "url_domain": "opentelekomcloud.my.com"
                    }
                  ],
                  "match_mode": "EXACT",
                  "name": "my_api",
                  "request_method": "GET",
                  "request_params": [
                    {
                      "location": "PATH",
                      "maximum": 200,
                      "minimum": 0,
                      "name": "user_age",
                      "required": true,
                      "type": "NUMBER"
                    },
                    {
                      "enumeration": "ACC_TEST_A,ACC_TEST_B",
                      "location": "HEADER",
                      "maximum": 20,
                      "minimum": 10,
                      "name": "X-TEST-ENUM",
                      "passthrough": true,
                      "sample": "ACC_TEST_XXX",
                      "type": "STRING"
                    }
                  ],
                  "request_protocol": "HTTP",
                  "request_uri": "/user_info/{user_age}",
                  "security_authentication_type": "APP",
                  "success_response": "Success response",
                  "type": "Public"
                }
              references:
                gateway_id: opentelekomcloud_apigw_gateway_v2.gateway.id
                group_id: opentelekomcloud_apigw_group_v2.group.id
              dependencies:
                opentelekomcloud_apigw_environment_v2.env: |-
                    {
                      "description": "test description",
                      "instance_id": "${opentelekomcloud_apigw_gateway_v2.gateway.id}",
                      "name": "my_env"
                    }
                opentelekomcloud_apigw_gateway_v2.gateway: |-
                    {
                      "availability_zones": [
                        "eu-de-01",
                        "eu-de-02"
                      ],
                      "description": "test gateway 2",
                      "ingress_bandwidth_charging_mode": "bandwidth",
                      "ingress_bandwidth_size": 5,
                      "maintain_begin": "02:00:00",
                      "name": "my_gw",
                      "security_group_id": "${var.secgroup_id}",
                      "spec_id": "BASIC",
                      "subnet_id": "${var.subnet_id}",
                      "vpc_id": "${var.vpc_id}"
                    }
                opentelekomcloud_apigw_group_v2.group: |-
                    {
                      "description": "test description",
                      "environment": [
                        {
                          "environment_id": "${opentelekomcloud_apigw_environment_v2.env.id}",
                          "variable": [
                            {
                              "name": "test-name",
                              "value": "test-value"
                            }
                          ]
                        }
                      ],
                      "instance_id": "${opentelekomcloud_apigw_gateway_v2.gateway.id}",
                      "name": "my_group"
                    }
        argumentDocs:
            "3": to 32 characters.
            ENUM: ', separate condition values with commas.'
            PATTERN: ', enter a regular expression compatible with PERL.'
            authorizer_id: |-
                - (Optional, String) Specifies the ID of the authorizer to which the API request used.
                It is Required when security_authentication_type is AUTHORIZER.
            backend_params: |-
                - (Optional, List) Specifies the configurations of the backend parameters.
                The object structure is documented below.
            backend_params.description: |-
                - (Optional, String) Specifies the description of the constant or system parameter.
                The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            backend_params.location: |-
                - (Required, String) Specifies the location of the backend parameter.
                The valid values are PATH, QUERY and HEADER.
            backend_params.name: |-
                - (Required, String) Specifies the backend parameter name, which contain of 1 to 32 characters and start with a
                letter. Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed. The parameter name is not
                case-sensitive. It cannot start with x-apig- or x-sdk- and cannot be x-stage. If the location is specified as
                HEADER, the name cannot contain underscores.
            backend_params.system_param_type: |-
                - (Optional, String) Specifies the type of the system parameter.
                The valid values are frontend, backend and internal, defaults to internal.
            backend_params.type: |-
                - (Required, String) Specifies the backend parameter type.
                The valid values are REQUEST, CONSTANT and SYSTEM.
            backend_params.value: '- (Required, String) Specifies the request parameter name corresponding to the back-end request parameter.'
            body_description: |-
                - (Optional, String) Specifies the description of the API request body, which can be an example
                request body, media type or parameters.
                The request body does not exceed 20,480 characters.
            conditions.origin: |-
                - (Optional, String) Specifies the backend policy type.
                The valid values are param, source, defaults to source.
            conditions.param_name: |-
                - (Optional, String) Specifies the request parameter name.
                This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
            conditions.type: |-
                - (Optional, String) Specifies the condition type of the backend policy.
                The valid values are EXACT, ENUM and PATTERN, defaults to EXACT.
            conditions.value: |-
                - (Required, String) Specifies the value of the backend policy.
                For a condition with the input parameter source:
            cors: '- (Optional, Bool) Specifies whether CORS is supported, defaults to false.'
            description: |-
                - (Optional, String) Specifies the API description.
                The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            failure_response: |-
                - (Optional, String) Specifies the example response for a failure request.
                The response contains a maximum of 20,480 characters.
            func_graph: |-
                - (Optional, List, ForceNew) Specifies the function graph backend details.
                The object structure is documented below.
                Changing this will create a new API resource.
            func_graph.authorizer_id: '- (Optional, String) Specifies the ID of the backend custom authorization.'
            func_graph.description: |-
                - (Optional, String) Specifies the description of the constant or system parameter.
                The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            func_graph.function_urn: '- (Required, String) Specifies the URN of the FunctionGraph function.'
            func_graph.invocation_type: |-
                - (Optional, String) Specifies the invocation type.
                The valid values are async and sync, defaults to sync.
            func_graph.network_type: |-
                - (Optional, String) Function network architecture.
                The valid values are VPC and NON-VPC, defaults to NON-VPC.
            func_graph.timeout: |-
                - (Optional, Int) Specifies the timeout for API requests to backend service.
                The valid value is range form 1 to 600,000, defaults to 5,000.
            func_graph.version: '- (Required, String) Specifies the function version.'
            func_graph_policy: |-
                - (Optional, List) Specifies the Mock policy backends.
                The maximum blocks of the policy is 5.
                The object structure is documented below.
            func_graph_policy.authorizer_id: '- (Optional, String) Specifies the ID of the backend custom authorization.'
            func_graph_policy.backend_params: |-
                - (Optional, List) Specifies the configuration list of the backend parameters.
                The maximum of request parameters is 50.
                The object structure is documented above.
            func_graph_policy.conditions: |-
                - (Required, List) Specifies an array of one or more policy conditions.
                Up to five conditions can be set.
                The object structure is documented below.
            func_graph_policy.effective_mode: |-
                - (Optional, String) Specifies the effective mode of the backend policy.
                The valid values are ALL and ANY, defaults to ANY.
            func_graph_policy.function_urn: '- (Required, String) Specifies the URN of the FunctionGraph function.'
            func_graph_policy.invocation_mode: |-
                - (Optional, String) Specifies the invocation mode of the FunctionGraph function.
                The valid values are async and sync, defaults to sync.
            func_graph_policy.name: |-
                - (Required, String) Specifies the backend policy name.
                The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
            func_graph_policy.network_type: |-
                - (Optional, String) Function network architecture.
                The valid values are VPC and NON-VPC, defaults to NON-VPC.
            func_graph_policy.timeout: |-
                - (Optional, Int) Specifies the timeout for API requests to backend service, the unit is ms.
                The valid value ranges from 1 to 600,000, defaults to 5,000.
            func_graph_policy.version: '- (Optional, String) Specifies the version of the FunctionGraph function.'
            gateway_id: |-
                - (Required, String, ForceNew) Specifies an ID of the APIG dedicated instance to which the API belongs
                to. Changing this will create a new API resource.
            group_id: '- (Required, String) Specifies an ID of the APIG group to which the API belongs to.'
            http: |-
                - (Optional, List, ForceNew) Specifies the web backend details.
                The object structure is documented below. Changing this will create a new API resource.
            http.authorizer_id: '- (Optional, String) Specifies the ID of the backend custom authorization.'
            http.description: |-
                - (Optional, String) Specifies the description of the constant or system parameter.
                The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            http.request_method: |-
                - (Optional, String) Specifies the backend request method of the API.
                The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
            http.request_protocol: |-
                - (Optional, String) Specifies the backend request protocol.
                The valid values are HTTP and HTTPS, defaults to HTTPS.
            http.request_uri: |-
                - (Required, String) Specifies the backend request address, which can contain a maximum of 512 characters and
                must comply with URI specifications.
            http.retry_count: |-
                - (Optional, Int) Specifies the number of retry attempts to request the backend service.
                The valid value ranges from -1 to 10, defaults to -1.
                -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
                POST and PATCH are not-idempotent.
                GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
            http.ssl_enable: '- (Optional, Bool) Specifies whether to enable two-way authentication, defaults to false.'
            http.timeout: |-
                - (Optional, Int) Specifies the timeout for API requests to backend service, the unit is ms.
                The valid value ranges from 1 to 600,000, defaults to 5,000.
            http.url_domain: |-
                - (Optional, String) Backend service address.
                A backend service address consists of a domain name or IP address and a port number,
                with not more than 255 characters. It must be in the format Host name:Port number,
                for example, apig.example.com:7443. If the port number is not specified, the default HTTPS port 443 or the default HTTP port 80 is used.
            http.version: '- (Required, String) Specifies the function version.'
            http.vpc_channel_id: |-
                - (Optional, String) Specifies the VPC channel ID. This parameter and url_domain are
                alternative.
            http.vpc_channel_proxy_host: |-
                - (Optional, String) Specifies the proxy host header.
                The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
                By default, the original host header of the request is used.
            http_policy: |-
                - (Optional, List) Specifies the example response for a failed request.
                The maximum blocks of the policy is 5.
                The object structure is documented below.
            http_policy.authorizer_id: '- (Optional, String) Specifies the ID of the backend custom authorization.'
            http_policy.backend_params: |-
                - (Optional, List) Specifies an array of one or more backend parameters. The maximum of request
                parameters is 50. The object structure is documented above.
            http_policy.conditions: |-
                - (Required, List) Specifies an array of one or more policy conditions.
                Up to five conditions can be set.
                The object structure is documented below.
            http_policy.effective_mode: |-
                - (Optional, String) Specifies the effective mode of the backend policy. The valid values are ALL
                and ANY, defaults to ANY.
            http_policy.name: |-
                - (Required, String) Specifies the backend policy name.
                The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
            http_policy.request_method: |-
                - (Optional, String) Specifies the backend request method of the API.
                The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
            http_policy.request_protocol: |-
                - (Optional, String) Specifies the backend request protocol. The valid values are HTTP and
                HTTPS, defaults to HTTPS.
            http_policy.request_uri: |-
                - (Required, String) Specifies the backend request address, which can contain a maximum of 512 characters and
                must comply with URI specifications.
            http_policy.retry_count: |-
                - (Optional, Int) Specifies the number of retry attempts to request the backend service.
                The valid value ranges from -1 to 10, defaults to -1.
                -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
                POST and PATCH are not-idempotent.
                GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
            http_policy.timeout: |-
                - (Optional, Int) Specifies the timeout, in ms, which allowed for APIGW to request the backend service. The
                valid value is range from 1 to 600,000, defaults to 5,000.
            http_policy.url_domain: |-
                - (Optional, String) Specifies the backend service address.
                The value which consists of a domain name or IP address, and a port number, with not more than 255 characters.
                The backend service address must be in the format "{host name}:{Port number}", for example, apig.example.com:7443.
                If the port number is not specified, the default HTTPS port 443, or the default HTTP port 80 is used.
                The backend service address can contain environment variables, each starting with a letter and consisting of 3 to
                32 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
            http_policy.vpc_channel_id: |-
                - (Optional, String) Specifies the VPC channel ID.
                This parameter and url_domain are alternative.
            http_policy.vpc_channel_proxy_host: |-
                - (Optional, String) Specifies the proxy host header.
                The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
                By default, the original host header of the request is used.
            id: '- The ID of the API.'
            match_mode: |-
                - (Optional, String) Specifies the route matching mode.
                The valid values are EXACT and PREFIX, defaults to EXACT.
            mock: |-
                - (Optional, List, ForceNew) Specifies the mock backend details.
                The object structure is documented below.
                Changing this will create a new API resource.
            mock.authorizer_id: '- (Optional, String) Specifies the ID of the backend custom authorization.'
            mock.description: |-
                - (Optional, String) Specifies the description of the constant or system parameter.
                The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            mock.response: |-
                - (Required, String) Specifies the response of the backend policy.
                The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
            mock.version: '- (Optional, String) Specifies the mock version. It cannot exceed 64 characters.'
            mock_policy: |-
                - (Optional, List) Specifies the Mock policy backends.
                The maximum blocks of the policy is 5.
                The object structure is documented below.
            mock_policy.authorizer_id: '- (Optional, String) Specifies the ID of the backend custom authorization.'
            mock_policy.backend_params: |-
                - (Optional, List) Specifies an array of one or more backend parameters.
                The maximum of request parameters is 50.
                The object structure is documented above.
            mock_policy.conditions: |-
                - (Required, List) Specifies an array of one or more policy conditions.
                Up to five conditions can be set.
                The object structure is documented below.
            mock_policy.effective_mode: |-
                - (Optional, String) Specifies the effective mode of the backend policy.
                The valid values are ALL and ANY, defaults to ANY.
            mock_policy.name: |-
                - (Required, String) Specifies the backend policy name.
                The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
            mock_policy.response: |-
                - (Optional, String) Specifies the response of the backend policy.
                The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
            name: |-
                - (Required, String) Specifies the API name.
                The valid length is limited from can contain 3 to 255, only Chinese and English letters, digits and
                following special characters are allowed: -_./（()）:：、.
                The name must start with a digit, Chinese or English letter.
            region: |-
                - (Optional, String, ForceNew) Specifies the region where the API is located.
                If omitted, the provider-level region will be used. Changing this will create a new API resource.
            registered_at: '- Time when the API is registered.'
            request_method: |-
                - (Required, String) Specifies the request method of the API.
                The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
            request_params: |-
                - (Optional, List) Specifies the configurations of the front-end parameters.
                The object structure is documented below.
            request_params.default: |-
                - (Optional, String) Specifies the default value of the request parameter.
                The value contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            request_params.description: |-
                - (Optional, String) Specifies the description of the request parameter.
                The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            request_params.enumeration: |-
                - (Optional, String) Specifies the enumerated value(s).
                Use commas to separate multiple enumeration values, such as VALUE_A,VALUE_B.
            request_params.location: |-
                - (Optional, String) Specifies the location of the request parameter.
                The valid values are PATH, QUERY and HEADER, defaults to PATH.
            request_params.maximum: '- (Optional, Int) Specifies the maximum value or size of the request parameter.'
            request_params.minimum: '- (Optional, Int) Specifies the minimum value or size of the request parameter.'
            request_params.name: |-
                - (Required, String) Specifies the request parameter name.
                The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
                periods (.) are allowed.
                If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
                cannot be Authorization (case-insensitive) and cannot contain underscores.
            request_params.passthrough: '- (Optional, Bool) Specifies whether to transparently transfer the parameter.'
            request_params.required: '- (Optional, Bool) Specifies whether the request parameter is required.'
            request_params.sample: |-
                - (Optional, String) Specifies the example value of the request parameter.
                The example contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            request_params.type: |-
                - (Optional, String) Specifies the request parameter type.
                The valid values are STRING and NUMBER, defaults to STRING.
            request_protocol: |-
                - (Required, String) Specifies the request protocol of the API.
                The valid values are HTTP, HTTPS and BOTH.
            request_uri: |-
                - (Required, String) Specifies the request address, which can contain a maximum of 512 characters,
                the request parameters enclosed with brackets ({}).
            response_id: '- (Optional, String) Specifies the APIG group response ID.'
            security_authentication_enabled: |-
                - (Optional, Bool) Specifies whether the authentication of the application code is enabled.
                The application code must located in the header when security_authentication_enabled is true.
            security_authentication_type: |-
                - (Optional, String) Specifies the security authentication mode of the API request.
                The valid values are NONE, APP, IAM and AUTHORIZER, defaults to NONE.
            success_response: |-
                - (Optional, String) Specifies the example response for a successful request.
                The response contains a maximum of 20,480 characters.
            tags: |-
                - (Optional, List) Tags. Use letters, digits, and special characters (-*#%.:_) and start with a letter.
                By default, 10 tags are supported. To increase the quota, contact technical support to modify the API_TAG_NUM_LIMIT configuration.
            type: |-
                - (Required, String) Specifies the API type.
                The valid values are Public and Private.
            updated_at: '- Time when the API was last modified.'
            version: '- (Optional, String) Specifies the API version.'
        importStatements: []
    opentelekomcloud_apigw_appcode_v2:
        subCategory: APIGW
        description: Manages a APIGW AppCode resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_appcode_v2
        title: opentelekomcloud_apigw_appcode_v2
        examples:
            - name: code
              manifest: |-
                {
                  "application_id": "${var.application_id}",
                  "gateway_id": "${var.gateway_id}"
                }
              references:
                application_id: var.application_id
                gateway_id: var.gateway_id
            - name: code
              manifest: |-
                {
                  "application_id": "${var.application_id}",
                  "gateway_id": "${var.gateway_id}",
                  "value": "${var.app_code}"
                }
              references:
                application_id: var.application_id
                gateway_id: var.gateway_id
                value: var.app_code
        argumentDocs:
            application_id: |-
                - (Required, String, ForceNew) Specifies the ID of application to which the AppCode belongs.
                Changing this will create a new resource.
            created_at: '- The creation time of the AppCode.'
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated instance to which the application
                and AppCode belong. Changing this will create a new resource.
            id: '- The AppCode ID.'
            region: '- The region where the application and AppCode are located.'
            value: |-
                - (Optional, String, ForceNew) Specifies the AppCode value (content).
                The value can contain 64 to 180 characters, starting with a letter, plus sign +, or slash /, or digit.
                Only letters, digit and the following special characters are allowed: +_!@#$%/=.
                If omitted, a random value will be generated. Changing this will create a new resource.
        importStatements: []
    opentelekomcloud_apigw_application_authorization_v2:
        subCategory: APIGW
        description: Manages a APIGW Application authorization resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_application_authorization_v2
        title: opentelekomcloud_apigw_application_authorization_v2
        examples:
            - name: auth
              manifest: |-
                {
                  "api_ids": "${var.published_api_ids}",
                  "application_id": "${var.application_id}",
                  "env_id": "${var.published_env_id}",
                  "gateway_id": "${var.gateway_id}"
                }
              references:
                api_ids: var.published_api_ids
                application_id: var.application_id
                env_id: var.published_env_id
                gateway_id: var.gateway_id
        argumentDocs:
            api_ids: '- (Required, List) Specifies the authorized API IDs.'
            application_id: |-
                - (Required, String, ForceNew) Specifies the ID of the application authorized to access the APIs.
                Changing this will create a new resource.
            create: '- Default is 3 minutes.'
            delete: '- Default is 3 minutes.'
            env_id: |-
                - (Required, String, ForceNew) Specifies the environment ID where the APIs were published.
                Changing this will create a new resource.
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated gateway instance to which the application
                and APIs belong.
                Changing this will create a new resource.
            id: '- The resource ID, also <env_id>/<application_id>.'
            region: '- Region where the application and APIs are located.'
            update: '- Default is 3 minutes.'
        importStatements: []
    opentelekomcloud_apigw_application_v2:
        subCategory: APIGW
        description: Manages a APIGW Application resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_application_v2
        title: opentelekomcloud_apigw_application_v2
        examples:
            - name: test
              manifest: |-
                {
                  "app_codes": [
                    "${var.app_code}"
                  ],
                  "description": "Created by script",
                  "gateway_id": "${var.gateway_id}",
                  "name": "${var.app_name}"
                }
              references:
                app_codes: var.app_code
                gateway_id: var.gateway_id
                name: var.app_name
        argumentDocs:
            app_codes: |-
                - (Optional, List) Specifies an array of one or more application codes that the application has.
                Up to five application codes can be created.
                The valid length of each application code is limited from can contain 64 to 180.
                The application code must start with a letter, digit, plus sign + or slash /.
                Only letters, digits and following special characters are allowed: !@#$%+-_/=.
            app_key: '- App key.'
            app_secret: '- App secret.'
            description: |-
                - (Optional, String) Specifies the application description.
                The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated instance to which the application
                belongs.
                Changing this will create a new resource.
            id: '- The application ID.'
            name: |-
                - (Required, String) Specifies the application name.
                The valid length is limited from can contain 3 to 64, only letters, digits and hyphens - are allowed.
                The name must start with a letter.
            region: '- The region where the application is located.'
            registration_time: '- The registration time.'
            secret_action: |-
                - (Optional, String) Specifies the secret action to be done for the application.
                The valid action is RESET.
            updated_at: '- The latest update time of the application.'
        importStatements:
            - $ terraform import opentelekomcloud_apigw_application_v2.app <gateway_id>/<id>
    opentelekomcloud_apigw_custom_authorizer_v2:
        subCategory: APIGW
        description: Manages a APIGW Custom Authorizer resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_custom_authorizer_v2
        title: opentelekomcloud_apigw_custom_authorizer_v2
        examples:
            - name: test
              manifest: |-
                {
                  "cache_age": 60,
                  "function_urn": "${var.function_urn}",
                  "gateway_id": "${var.gateway_id}",
                  "identity": [
                    {
                      "location": "QUERY",
                      "name": "user_name"
                    }
                  ],
                  "name": "${var.authorizer_name}",
                  "type": "FRONTEND"
                }
              references:
                function_urn: var.function_urn
                gateway_id: var.gateway_id
                name: var.authorizer_name
        argumentDocs:
            created_at: '- The creation time of the custom authorizer.'
            function_urn: '- (Required, String) Specifies the uniform function URN of the function graph resource.'
            gateway_id: |-
                - (Required, String, ForceNew) Specifies an ID of the APIGW dedicated instance to which the
                custom authorizer belongs to.
                Changing this will create a new custom authorizer resource.
            id: '- ID of the custom authorizer.'
            identity: |-
                - (Optional, List) Specifies an array of one or more parameter identities of the custom authorizer.
                The object structure is documented below.
            identity.location: '- (Required, String) Specifies the parameter location, which support HEADER and QUERY.'
            identity.name: |-
                - (Required, String) Specifies the name of the parameter to be verified.
                The parameter includes front-end and back-end parameters.
            identity.validation: |-
                - (Optional, String) Specifies the parameter verification expression.
                If omitted, the custom authorizer will not perform verification.
                The valid value is range form 1 to 2,048.
            is_body_send: '- (Optional, Bool) Specifies whether to send the body.'
            name: |-
                - (Required, String) Specifies the name of the custom authorizer.
                The custom authorizer name consists of 3 to 64 characters, starting with a letter.
                Only letters, digits and underscores _ are allowed.
            region: '- The region in which to create the custom authorizer resource.'
            ttl: '- (Optional, Int) Specifies the maximum cache age.'
            type: |-
                - (Optional, String, ForceNew) Specifies the custom authorize type.
                The valid values are FRONTEND and BACKEND. Defaults to FRONTEND.
                Changing this will create a new custom authorizer resource.
            user_data: |-
                - (Optional, String) Specifies the user data, which can contain a maximum of 2,048 characters.
                The user data is used by APIGW to invoke the specified authentication function when accessing the backend service.
        importStatements:
            - $ terraform import opentelekomcloud_apigw_custom_authorizer_v2.test <gateway_id>/<name>
    opentelekomcloud_apigw_environment_v2:
        subCategory: APIGW
        description: Manages a APIGW Environment resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_environment_v2
        title: opentelekomcloud_apigw_environment_v2
        examples:
            - name: test
              manifest: |-
                {
                  "description": "${var.description}",
                  "instance_id": "${var.instance_id}",
                  "name": "${var.environment_name}"
                }
              references:
                description: var.description
                instance_id: var.instance_id
                name: var.environment_name
        argumentDocs:
            created_at: '- The time when the environment was created.'
            description: |-
                - (Optional, String) Specifies the environment description.
                The value can contain a maximum of 255 characters, and the angle brackets (< and >) are not allowed.
            id: '- The ID of the dedicated environment.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated instance to which the environment
                belongs.
                Changing this will create a new resource.
            name: |-
                - (Required, String) Specifies the environment name.
                The valid length is limited from 3 to 64, only letters, digits and underscores (_) are allowed.
                The name must start with a letter.
            region: |-
                - (Optional, String, ForceNew) Specifies the region where the dedicated instance is located.
                If omitted, the provider-level region will be used. Changing this will create a new resource.
        importStatements: []
    opentelekomcloud_apigw_environment_variable_v2:
        subCategory: APIGW
        description: Manages a APIGW Environment variable resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_environment_variable_v2
        title: opentelekomcloud_apigw_environment_variable_v2
        examples:
            - name: var
              manifest: |-
                {
                  "environment_id": "${var.environment_id}",
                  "gateway_id": "${var.gateway_id}",
                  "group_id": "${var.group_id}",
                  "name": "${var.variable_name}",
                  "value": "${var.variable_value}"
                }
              references:
                environment_id: var.environment_id
                gateway_id: var.gateway_id
                group_id: var.group_id
                name: var.variable_name
                value: var.variable_value
        argumentDocs:
            environment_id: |-
                - (Required, String, ForceNew) Specifies the ID of the environment to which the environment variable belongs.
                Changing this creates a new resource.
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated gateway instance to which the environment
                variable belongs. Changing this creates a new resource.
            group_id: |-
                - (Required, String, ForceNew) Specifies the ID of the group to which the environment variable belongs.
                Changing this creates a new resource.
            id: '- The resource ID.'
            name: |-
                - (Required, String, ForceNew) Specifies the name of the environment variable.
                The valid length is limited from 3 to 32 characters.
                Only letters, digits, hyphens -, and underscores _ are allowed, and must start with a letter.
                In the definition of an API, the name (case-sensitive) indicates a variable, for example, #Name#.
                It is replaced by the actual value when the API is published in an environment. The variable name must be unique.
                Changing this creates a new resource.
            region: '- The region where the dedicated instance is located.'
            value: |-
                - (Required, String, ForceNew) Specifies the value of the environment variable.
                The valid length is limited from 1 to 255 characters. Only letters, digits and special characters _-/.: are allowed.
                Changing this creates a new resource.
        importStatements: []
    opentelekomcloud_apigw_gateway_v2:
        subCategory: APIGW
        description: Manages a API Gateway resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_gateway_v2
        title: opentelekomcloud_apigw_gateway_v2
        examples:
            - name: gateway
              manifest: |-
                {
                  "availability_zones": [
                    "eu-de-01",
                    "eu-de-02"
                  ],
                  "bandwidth_size": 5,
                  "description": "test gateway",
                  "ingress_bandwidth_charging_mode": "bandwidth",
                  "ingress_bandwidth_size": 5,
                  "maintain_begin": "22:00:00",
                  "name": "test-gateway",
                  "security_group_id": "${var.default_secgroup.id}",
                  "spec_id": "BASIC",
                  "subnet_id": "${var.network_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                security_group_id: var.default_secgroup.id
                subnet_id: var.network_id
                vpc_id: var.vpc_id
        argumentDocs:
            availability_zones: '- (Optional, List) Specifies gateway description.'
            bandwidth_charging_mode: |-
                - (Optional, String, ForceNew) Billing type of the public outbound access bandwidth.
                The valid values are as follows:
            bandwidth_size: |-
                - (Optional, String) Specifies outbound access bandwidth. This parameter is required if public outbound
                access is enabled for the gateway. After you configure the bandwidth for the gateway,
                users can access resources on public networks.
            description: '- (Optional, String) Specifies gateway description.'
            ingress_bandwidth_charging_mode: |-
                - (Optional, String, ForceNew) Specifies the ingress bandwidth billing type of the dedicated instance.
                The valid values are as follows:
            ingress_bandwidth_size: |-
                - (Optional, String, ForceNew) Specifies public inbound access bandwidth. This parameter is required if public
                inbound access is enabled for the gateway and loadbalancer_provider is set to elb.
                After you bind an EIP to the gateway, users can access APIs in the gateway from public networks using the EIP.
            loadbalancer_provider: |-
                - (Optional, String) Specifies type of the load balancer used by the gateway.
                This resource provides the following timeouts configuration options:
            maintain_begin: |-
                - (Optional, String) Specifies start time of the maintenance time window.
                It must be in the format "xx:00:00". The value of xx can be 02, 06, 10, 14, 18, or 22.
            maintain_end: |-
                - End time of the maintenance time window. It must be in the format "xx:00:00".
                There is a 4-hour difference between the start time and end time.
            name: '- (Required, String) Specifies gateway name.'
            private_egress_addresses: '- List of private egress addresses.'
            project_id: '- Instance project id.'
            public_egress_address: '- IP address for public outbound access.'
            region: '- Instance region.'
            security_group_id: '- (Required, String) Specifies ID of the security group to which the gateway belongs.'
            spec_id: |-
                - (Required, ForceNew, String) Gateway edition. Options:
                This resource provides the following timeouts configuration options:
            status: '- Instance status.'
            subnet_id: '- (Required, ForceNew, String) Specifies network ID.'
            supported_features: '- Supported features.'
            vpc_id: '- (Required, ForceNew, String) Specifies VPC ID.'
            vpc_ingress_address: '- VPC ingress address.'
            vpcep_service_name: '- Name of a VPC endpoint service.'
        importStatements:
            - $ terraform import opentelekomcloud_apigw_gateway_v2.gateway c1881895-cdcb-4d23-96cb-032e6a3ee667
    opentelekomcloud_apigw_group_v2:
        subCategory: APIGW
        description: Manages a APIGW Group resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_group_v2
        title: opentelekomcloud_apigw_group_v2
        examples:
            - name: group
              manifest: |-
                {
                  "description": "test description",
                  "environment": [
                    {
                      "environment_id": "${var.env_id}",
                      "variable": [
                        {
                          "name": "test-name",
                          "value": "test-value"
                        }
                      ]
                    }
                  ],
                  "instance_id": "${var.gateway_id}",
                  "name": "group-name"
                }
              references:
                environment.environment_id: var.env_id
                instance_id: var.gateway_id
        argumentDocs:
            description: '- (Optional, String) Specifies the group description.'
            environment: |-
                - (Optional, List) Specifies an array of one or more environments of the associated group.
                The environment structure is documented below.
            environment.environment_id: '- (Required, String) Specifies the environment ID of the associated group.'
            environment.variable: |-
                - (Required, List) Specifies an array of one or more environment variables.
                The variable structure is documented below.
            environment.variable.id: '- The variable ID.'
            id: '- The group ID.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated instance to which the group belongs.
                Changing this will create a new resource.
            name: |-
                - (Required, String) Specifies the group name.
                The valid length is limited from 3 to 64, only letters, digits and hyphens (-) are
                allowed.
            region: |-
                - (Optional, String, ForceNew) Specifies the region where the APIGW group is located.
                If omitted, the provider-level region will be used. Changing this will create a new resource.
            registration_time: '- The registration time, in RFC-3339 format.'
            updated_at: '- The time when the API group was last modified, in RFC-3339 format.'
            variable.name: |-
                - (Required, String) Specifies the variable name.
                The valid length is limited from 3 to 32 characters.
                Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
            variable.value: |-
                - (Required, String) Specifies the variable value.
                The valid length is limited from 1 to 255 characters.
                Only letters, digits and special characters (_-/.:) are allowed.
        importStatements:
            - $ terraform import opentelekomcloud_apigw_group_v2.test <instance_id>/<id>
    opentelekomcloud_apigw_response_v2:
        subCategory: APIGW
        description: Manages a APIGW Custom Response resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_response_v2
        title: opentelekomcloud_apigw_response_v2
        examples:
            - name: test
              manifest: |-
                {
                  "gateway_id": "${var.gateway_id}",
                  "group_id": "${var.group_id}",
                  "name": "${var.response_name}",
                  "rule": [
                    {
                      "body": "{\"code\":\"$context.authorizer.frontend.code\",\"message\":\"$context.authorizer.frontend.message\"}",
                      "error_type": "AUTHORIZER_FAILURE",
                      "status_code": 401
                    }
                  ]
                }
              references:
                gateway_id: var.gateway_id
                group_id: var.group_id
                name: var.response_name
        argumentDocs:
            ACCESS_DENIED: ': (403) Access denied.'
            AUTH_FAILURE: ': (401) Authentication failed.'
            AUTH_HEADER_MISSING: ': (401) The identity source is missing.'
            AUTHORIZER_CONF_FAILURE: ': (500) There has been a custom authorizer error.'
            AUTHORIZER_FAILURE: ': (500) Custom authentication failed.'
            AUTHORIZER_IDENTITIES_FAILURE: ': (401) The identity source of the custom authorizer is invalid.'
            BACKEND_TIMEOUT: ': (504) Communication with the backend service timed out.'
            BACKEND_UNAVAILABLE: ': (502) The backend service is unavailable.'
            DEFAULT_4XX: ': (NONE) Another 4XX error occurred.'
            DEFAULT_5XX: ': (NONE) Another 5XX error occurred.'
            NOT_FOUND: ': (404) No API is found.'
            REQUEST_PARAMETERS_FAILURE: ': (400) The request parameters are incorrect.'
            THIRD_AUTH_CONF_FAILURE: ': (500) Third-party authorizer configuration error.'
            THIRD_AUTH_FAILURE: ': (401) Third-party authentication failed.'
            THIRD_AUTH_IDENTITIES_FAILURE: ': (401) Identity source of the third-party authorizer is invalid.'
            THROTTLED: ': (429) The request was rejected due to request throttling.'
            UNAUTHORIZED: ': (401) The app you are using has not been authorized to call the API.'
            created_at: '- The creation time of the API custom response.'
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated instance to which the API group and the
                API custom response belong.
                Changing this will create a new resource.
            group_id: |-
                - (Required, String, ForceNew) Specifies the ID of the API group to which the API custom response
                belongs.
                Changing this will create a new resource.
            id: '- ID of the API custom response.'
            name: |-
                - (Required, String) Specifies the name of the API custom response.
                The valid length is limited from 1 to 64, letters, digits, hyphens (-) and underscores (_) are allowed.
            region: '-  The region where the API custom response is located.'
            rule: |-
                - (Optional, List) Specifies the API custom response rules definition.
                The object structure is documented below.
            rule.body: |-
                - (Required, String) Specifies the body template of the API response rule, e.g.
                {\"code\":\"$context.authorizer.frontend.code\",\"message\":\"$context.authorizer.frontend.message\"}
            rule.error_type: |-
                - (Required, String) Specifies the error type of the API response rule.
                The valid values and the related default status code are as follows:
            rule.status_code: '- (Optional, Int) Specifies the HTTP status code of the API response rule.'
            updated_at: '- The latest update time of the API custom response.'
        importStatements:
            - $ terraform import opentelekomcloud_apigw_response_v2.test <gateway_id>/<group_id>/<name>
    opentelekomcloud_apigw_signature_associate_v2:
        subCategory: APIGW
        description: Manages a APIGW Signature Associate resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_signature_associate_v2
        title: opentelekomcloud_apigw_signature_associate_v2
        examples:
            - name: test
              manifest: |-
                {
                  "instance_id": "${var.gateway_id}",
                  "publish_ids": "${var.api_publish_ids}",
                  "signature_id": "${var.signature_id}"
                }
              references:
                instance_id: var.gateway_id
                publish_ids: var.api_publish_ids
                signature_id: var.signature_id
        argumentDocs:
            create: '- Default is 3 minutes.'
            delete: '- Default is 3 minutes.'
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated instance to which the APIs and the
                signature belong.
                Changing this will create a new resource.
            id: '- Resource ID. The format is <gateway_id>/<signature_id>.'
            publish_ids: '- (Required, List) Specifies the publish IDs corresponding to the APIs bound by the signature.'
            region: '- Region where the signature and the APIs are located.'
            signature_id: |-
                - (Required, String, ForceNew) Specifies the signature ID for APIs binding.
                Changing this will create a new resource.
            update: '- Default is 3 minutes.'
        importStatements: []
    opentelekomcloud_apigw_signature_v2:
        subCategory: APIGW
        description: Manages a APIGW Signature resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_signature_v2
        title: opentelekomcloud_apigw_signature_v2
        examples:
            - name: hmac
              manifest: |-
                {
                  "instance_id": "${var.gateway_id}",
                  "key": "${var.signature_key}",
                  "name": "${var.signature_name}",
                  "secret": "${var.signature_secret}",
                  "type": "hmac"
                }
              references:
                instance_id: var.gateway_id
                key: var.signature_key
                name: var.signature_name
                secret: var.signature_secret
            - name: hmac
              manifest: |-
                {
                  "instance_id": "${var.gateway_id}",
                  "name": "${var.signature_name}",
                  "type": "hmac"
                }
              references:
                instance_id: var.gateway_id
                name: var.signature_name
            - name: aes
              manifest: |-
                {
                  "algorithm": "aes-128-cfb",
                  "instance_id": "${var.gateway_id}",
                  "key": "${var.signature_key}",
                  "name": "${var.signature_name}",
                  "secret": "${var.signature_secret}",
                  "type": "aes"
                }
              references:
                instance_id: var.gateway_id
                key: var.signature_key
                name: var.signature_name
                secret: var.signature_secret
        argumentDocs:
            aes: |-
                : AES type
                Changing this will create a new resource.
            aes-256-cfb: Changing this will create a new resource.
            algorithm: |-
                - (Optional, String) Specifies the signature algorithm.
                This parameter is required and only available when signature type is aes.
                The valid values are as follows:
            basic: ': Basic auth type.'
            created_at: '- The creation time of the signature.'
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated gateway to which the signature
                belongs. Changing this will create a new resource.
            hmac: ': HMAC type.'
            id: '- The ID of the signature.'
            key: '- (Optional, String) Specifies the signature key.'
            name: |-
                - (Required, String) Specifies the signature name.
                The valid length is limited from 3 to 64, only English letters, Chinese characters, digits and underscores _ are
                allowed. The name must start with an English letter or Chinese character.
            region: '- Region where the signature is located.'
            secret: |-
                - (Optional, String) Specifies the signature secret.
                If not specified, the secret will automatically generated. The auto-generation is only supported on first creation.
                Changing this will create a new resource.
            type: |-
                - (Required, String) Specifies the type of signature.
                The valid values are as follows:
            updated_at: '- The latest update time of the signature.'
        importStatements: []
    opentelekomcloud_apigw_throttling_policy_associate_v2:
        subCategory: APIGW
        description: Manages a APIGW Throttling Policy Associate resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_throttling_policy_associate_v2
        title: opentelekomcloud_apigw_throttling_policy_associate_v2
        examples:
            - name: tpa
              manifest: |-
                {
                  "gateway_id": "${var.gateway_id}",
                  "policy_id": "${var.policy_id}",
                  "publish_ids": "${var.publish_ids}"
                }
              references:
                gateway_id: var.gateway_id
                policy_id: var.policy_id
                publish_ids: var.publish_ids
        argumentDocs:
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated gateway to which the APIs and the
                throttling policy belongs.
                Changing this will create a new resource.
            id: '- Resource ID. The format is <gateway_id>/<policy_id>.'
            policy_id: |-
                - (Required, String, ForceNew) Specifies the ID of the throttling policy.
                Changing this will create a new resource.
            publish_ids: '- (Required, List) Specifies the publishing IDs corresponding to the APIs bound by the throttling policy.'
            region: '- Specifies the region where the dedicated instance and the throttling policy are located.'
        importStatements:
            - $ terraform import opentelekomcloud_apigw_throttling_policy_associate_v2.tpa <gateway_id>/<policy_id>
    opentelekomcloud_apigw_throttling_policy_v2:
        subCategory: APIGW
        description: Manages a APIGW Throttling Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_throttling_policy_v2
        title: opentelekomcloud_apigw_throttling_policy_v2
        examples:
            - name: policy
              manifest: |-
                {
                  "description": "Created by tf",
                  "instance_id": "${opentelekomcloud_apigw_gateway_v2.gateway.id}",
                  "max_api_requests": 70,
                  "max_app_requests": 45,
                  "max_ip_requests": 45,
                  "max_user_requests": 45,
                  "name": "throttling policy",
                  "period": 10,
                  "period_unit": "MINUTE",
                  "type": "API-shared"
                }
              references:
                instance_id: opentelekomcloud_apigw_gateway_v2.gateway.id
        argumentDocs:
            app_throttles: |-
                - (Optional, List) Specifies the array of one or more special throttling policies for APP limit.
                The app_throttles object structure is documented below.
            created_at: '- The creation time of the throttling policy.'
            description: |-
                - (Optional, String) Specifies the description about the API throttling policy.
                The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
            id: '- ID of the API throttling policy.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated instance to which the throttling
                policy belongs.
            max_api_requests: |-
                - (Required, Int) Specifies the maximum number of times an API can be accessed within a specified
                period. The value of this parameter cannot exceed the default limit 200 TPS.
            max_app_requests: |-
                - (Optional, Int) Specifies the maximum number of times the API can be accessed by an app within
                the same period.
                The value of this parameter must be less than or equal to the value of max_user_requests.
            max_ip_requests: |-
                - (Optional, Int) Specifies the maximum number of times the API can be accessed by an IP address
                within the same period.
                The value of this parameter must be less than or equal to the value of max_api_requests.
            max_user_requests: |-
                - (Optional, Int) Specifies the maximum number of times the API can be accessed by a user within
                the same period.
                The value of this parameter must be less than or equal to the value of max_api_requests.
            name: |-
                - (Required, String) Specifies the name of the throttling policy.
                The valid length is limited from 3 to 64, only English letters, digits and underscores (_) are
                allowed.
            period: |-
                - (Required, Int) Specifies the period of time for limiting the number of API calls.
                This parameter applies with each of the API call limits: max_api_requests, max_app_requests, max_ip_requests
                and max_user_requests.
            period_unit: |-
                - (Optional, String) Specifies the time unit for limiting the number of API calls.
                The valid values are SECOND, MINUTE, HOUR and DAY, defaults to MINUTE.
            region: '- The region where the throttling policy is located.'
            type: |-
                - (Optional, String) Specifies the type of the request throttling policy.
                The valid values are as follows:
            user_throttles: |-
                - (Optional, List) Specifies the array of one or more special throttling policies for IAM user limit.
                The user_throttles object structure is documented below.
            user_throttles.id: '- ID of the special user/application throttling policy.'
            user_throttles.max_api_requests: |-
                - (Required, Int) Specifies the maximum number of times an API can be accessed within a specified
                period.
            user_throttles.throttling_object_id: '- (Required, String) Specifies the object ID which the special throttling policy belongs.'
            user_throttles.throttling_object_name: '- The object name which the special user/application throttling policy belongs.'
        importStatements:
            - $ terraform import opentelekomcloud_apigw_throttling_policy_v2.test <instance_id>/<name>
    opentelekomcloud_apigw_vpc_channel_v2:
        subCategory: APIGW
        description: Manages a APIGW VPC Channel resource within OpenTelekomCloud.
        name: opentelekomcloud_apigw_vpc_channel_v2
        title: opentelekomcloud_apigw_vpc_channel_v2
        examples:
            - name: test
              manifest: |-
                {
                  "dynamic": {
                    "member": [
                      {
                        "content": [
                          {
                            "id": "${member.value[\"id\"]}",
                            "weight": "${member.value[\"weight\"]}"
                          }
                        ],
                        "for_each": "${var.backend_servers}"
                      }
                    ]
                  },
                  "gateway_id": "${var.gateway_id}",
                  "name": "${var.channel_name}",
                  "port": 8080
                }
              references:
                dynamic.content.id: member.value["id"]
                dynamic.content.weight: member.value["weight"]
                dynamic.for_each: var.backend_servers
                gateway_id: var.gateway_id
                name: var.channel_name
            - name: test
              manifest: |-
                {
                  "dynamic": {
                    "member": [
                      {
                        "content": [
                          {
                            "group_name": "${member.value[\"group_name\"]}",
                            "id": "${member.value[\"id\"]}",
                            "weight": "${member.value[\"weight\"]}"
                          }
                        ],
                        "for_each": "${var.backend_servers}"
                      }
                    ],
                    "member_group": [
                      {
                        "content": [
                          {
                            "description": "${member.value[\"description\"]}",
                            "name": "${member.value[\"name\"]}",
                            "weight": "${member.value[\"weight\"]}"
                          }
                        ],
                        "for_each": "${var.backend_server_groups}"
                      }
                    ]
                  },
                  "gateway_id": "${var.gateway_id}",
                  "name": "${var.channel_name}",
                  "port": 8080
                }
              references:
                dynamic.content.description: member.value["description"]
                dynamic.content.group_name: member.value["group_name"]
                dynamic.content.id: member.value["id"]
                dynamic.content.name: member.value["name"]
                dynamic.content.weight: member.value["weight"]
                dynamic.for_each: var.backend_servers
                gateway_id: var.gateway_id
                name: var.channel_name
            - name: test
              manifest: |-
                {
                  "dynamic": {
                    "member_group": [
                      {
                        "content": [
                          {
                            "microservice_port": "${member_group.value[\"microservice_port\"]}",
                            "microservice_tags": "${member_group.value[\"microservice_tags\"]}",
                            "name": "${member_group.value[\"name\"]}",
                            "weight": "${member_group.value[\"weight\"]}"
                          }
                        ],
                        "for_each": "${var.member_groups_config}"
                      }
                    ]
                  },
                  "gateway_id": "${var.gateway_id}",
                  "health_check": [
                    {
                      "enable_client_ssl": false,
                      "http_codes": "200,201,208-209",
                      "interval": 5,
                      "method": "GET",
                      "path": "/",
                      "port": 65530,
                      "protocol": "TCP",
                      "status": 1,
                      "threshold_abnormal": 2,
                      "threshold_normal": 2,
                      "timeout": 2
                    }
                  ],
                  "lb_algorithm": 1,
                  "member_type": "ip",
                  "microservice": [
                    {
                      "cce_config": [
                        {
                          "cluster_id": "${var.cluster_id}",
                          "label_key": "app",
                          "label_value": "${var.stateless_workload_name}",
                          "namespace": "default",
                          "workload_type": "deployment"
                        }
                      ]
                    }
                  ],
                  "name": "${var.channel_name}",
                  "port": 80,
                  "type": 3
                }
              references:
                dynamic.content.microservice_port: member_group.value["microservice_port"]
                dynamic.content.microservice_tags: member_group.value["microservice_tags"]
                dynamic.content.name: member_group.value["name"]
                dynamic.content.weight: member_group.value["weight"]
                dynamic.for_each: var.member_groups_config
                gateway_id: var.gateway_id
                microservice.cce_config.cluster_id: var.cluster_id
                microservice.cce_config.label_value: var.stateless_workload_name
                name: var.channel_name
        argumentDocs:
            "1": ': Weighted round robin (WRR).'
            "2": ': Weighted least connections (WLC).'
            "3": ': Source hashing.'
            "4": ': URI hashing.'
            200,201,202: .
            200-299: .
            201,202,210-299: .
            created_at: '- The time when the channel was created.'
            daemonset: ': Daemons set.'
            deployment: ': Stateless load.'
            ecs: .
            gateway_id: |-
                - (Required, String, ForceNew) Specifies the ID of the dedicated API gateway to which the channel
                belongs.
                Changing this will create a new resource.
            health_check: |-
                - (Optional, List) Specifies the health configuration of cloud servers associated with the load balance
                channel for APIG regularly check.
                The object structure is documented below.
            health_check.1: (normal).
            health_check.enable_client_ssl: |-
                - (Optional, Bool) Specifies whether to enable two-way authentication.
                Defaults to false.
            health_check.http_codes: |-
                - (Optional, String) Specifies the response codes for determining a successful HTTP response.
                The valid value ranges from 100 to 599 and the valid formats are as follows:
            health_check.interval: |-
                - (Required, Int) Specifies the interval between consecutive checks, in second.
                The valid value ranges from 1 to 300.
            health_check.method: |-
                - (Optional, String) Specifies the request method for health check.
                The valid values are GET and HEAD.
            health_check.path: |-
                - (Optional, String) Specifies the destination path for health checks.
                Required if the protocol is HTTP or HTTPS.
            health_check.port: |-
                - (Optional, Int) Specifies the destination host port for health check.
                The valid value ranges from 0 to 65,535.
            health_check.protocol: |-
                - (Required, String) Specifies the microservice for performing health check on backend servers.
                The valid values are TCP, HTTP and HTTPS, defaults to TCP.
            health_check.status: |-
                - (Optional, Int) Specifies the status of health check.
                The valid values are as follows:
            health_check.threshold_abnormal: |-
                - (Required, Int) Specifies the unhealthy threshold, which refers to the number of consecutive
                failed checks required for a backend server to be considered unhealthy.
                The valid value ranges from 1 to 10.
            health_check.threshold_normal: |-
                - (Required, Int) Specifies the healthy threshold, which refers to the number of consecutive
                successful checks required for a backend server to be considered healthy.
                The valid value ranges from 1 to 10.
            health_check.timeout: |-
                - (Required, Int) Specifies the timeout for determining whether a health check fails, in second.
                The value must be less than the value of the time interval.
                The valid value ranges from 1 to 30.
            id: '- The ID of the channel.'
            ip: .
            lb_algorithm: |-
                - (Required, Int) Specifies the distribution algorithm.
                The valid values are as follows:
            member: |-
                - (Optional, List) Specifies the backend servers of the channel.
                This parameter is required and only available if the type is 2.
                The object structure is documented below.
            member.1: (normal).
            member.group_name: |-
                - (Optional, String) Specifies the IP address each backend servers.
                If omitted, means that all backend servers are both in one group.
            member.host: '- (Optional, String) Specifies the IP address each backend servers.'
            member.id: '- (Optional, String) Specifies the ECS ID for each backend servers.'
            member.is_backup: |-
                - (Optional, Bool) Specifies whether this member is the backup member.
                Defaults to false.
            member.member.host: |-
                and member.id must be set if member_type is ecs.
                The parameter member.host and member.id are alternative.
            member.name: |-
                - (Optional, String) Specifies the name of the backend server.
                Required if the parameter member.id is set.
            member.port: |-
                - (Optional, Int) Specifies the port of the backend server.
                The valid value ranges from 0 to 65,535.
                If omitted, the default port of channel will be used.
            member.status: |-
                - (Optional, Int) Specifies the status of the backend server.
                The valid values are as follows:
            member.weight: |-
                - (Optional, Int) Specifies the weight of current backend server.
                The valid value ranges from 0 to 10,000, defaults to 0.
            member_group: |-
                - (Optional, List) Specifies the backend (server) groups of the channel.
                The object structure is documented below.
            member_group.description: '- (Optional, String) Specifies the description of the member group.'
            member_group.microservice_port: |-
                - (Optional, Int) Specifies the microservice port of the backend server group.
                The valid value ranges from 0 to 65,535.
            member_group.microservice_tags: '- (Optional, Map) Specifies the microservice tags of the backend server group.'
            member_group.microservice_version: '- (Optional, String) Specifies the microservice version of the backend server group.'
            member_group.name: |-
                - (Required, String) Specifies the name of the member group.
                The valid length is limited from 3 to 64, only chinese and english letters, digits, hyphens (-), underscores (_)
                and dots (.) are allowed.
                The name must start with a Chinese or English letter.
            member_group.weight: '- (Optional, String) Specifies the weight of the current member group.'
            member_type: |-
                - (Optional, String) Specifies the member type of the channel.
                The valid values are as follows:
            microservice: |-
                - (Optional, List) Specifies the configuration of the microservice.
                The object structure is documented below.
            microservice.cce_config: |-
                - (Optional, List) Specifies the CCE microservice details.
                The object structure is documented below.
            microservice.cce_config.cluster_id: '- (Required, String) Specifies the CCE cluster ID.'
            microservice.cce_config.label_key: '- (Required, String) Specifies the service label key.'
            microservice.cce_config.label_value: '- (Required, String) Specifies the service label value.'
            microservice.cce_config.namespace: '- (Required, String) Specifies the namespace, such as the default namespace for CCE cluster: default.'
            microservice.cce_config.workload_type: '- (Required, String) Specifies the workload type.'
            name: |-
                - (Required, String) Specifies the channel name.
                The valid length is limited from 3 to 64, only chinese and english letters, digits, hyphens -, underscores _
                and dots (.) are allowed.
                The name must start with a Chinese or English letter.
            port: |-
                - (Required, Int) Specifies the default port for health check in channel.
                The valid value ranges from 1 to 65,535.
            region: '- The region where the channel is located.'
            statefulset: ': Stateful load.'
            status: '- The current status of the channel.'
            type: |-
                - (Optional, Int) Specifies the type of the channel.
                The valid values are as follows:
        importStatements: []
    opentelekomcloud_as_configuration_v1:
        subCategory: Autoscaling
        description: Manages a AS Configuration resource within OpenTelekomCloud.
        name: opentelekomcloud_as_configuration_v1
        title: opentelekomcloud_as_configuration_v1
        examples:
            - name: my_as_config
              manifest: |-
                {
                  "instance_config": [
                    {
                      "disk": [
                        {
                          "disk_type": "SYS",
                          "size": 40,
                          "volume_type": "SATA"
                        }
                      ],
                      "flavor": "${var.flavor}",
                      "image": "${var.image_id}",
                      "key_name": "${var.keyname}",
                      "user_data": "${file(\"userdata.txt\")}"
                    }
                  ],
                  "scaling_configuration_name": "my_as_config"
                }
              references:
                instance_config.flavor: var.flavor
                instance_config.image: var.image_id
                instance_config.key_name: var.keyname
            - name: my_as_config
              manifest: |-
                {
                  "instance_config": [
                    {
                      "disk": [
                        {
                          "disk_type": "SYS",
                          "size": 40,
                          "volume_type": "SATA"
                        },
                        {
                          "disk_type": "DATA",
                          "kms_id": "${var.kms_id}",
                          "size": 100,
                          "volume_type": "SATA"
                        }
                      ],
                      "flavor": "${var.flavor}",
                      "image": "${var.image_id}",
                      "key_name": "${var.keyname}",
                      "user_data": "${file(\"userdata.txt\")}"
                    }
                  ],
                  "scaling_configuration_name": "my_as_config"
                }
              references:
                instance_config.disk.kms_id: var.kms_id
                instance_config.flavor: var.flavor
                instance_config.image: var.image_id
                instance_config.key_name: var.keyname
            - name: my_as_config
              manifest: |-
                {
                  "instance_config": [
                    {
                      "disk": [
                        {
                          "disk_type": "SYS",
                          "size": 40,
                          "volume_type": "SATA"
                        }
                      ],
                      "flavor": "${var.flavor}",
                      "image": "${var.image_id}",
                      "key_name": "${var.keyname}",
                      "metadata": {
                        "some_key": "some_value"
                      },
                      "user_data": "${file(\"userdata.txt\")}"
                    }
                  ],
                  "scaling_configuration_name": "my_as_config"
                }
              references:
                instance_config.flavor: var.flavor
                instance_config.image: var.image_id
                instance_config.key_name: var.keyname
            - name: my_as_config
              manifest: |-
                {
                  "instance_config": {
                    "instance_id": "4579f2f5-cbe8-425a-8f32-53dcb9d9053a",
                    "key_name": "${var.keyname}"
                  },
                  "scaling_configuration_name": "my_as_config"
                }
            - name: my_as_config
              manifest: |-
                {
                  "instance_config": [
                    {
                      "disk": [
                        {
                          "disk_type": "SYS",
                          "size": 40,
                          "volume_type": "SATA"
                        }
                      ],
                      "flavor": "${var.flavor}",
                      "image": "${var.image_id}",
                      "key_name": "${var.keyname}",
                      "security_groups": [
                        "${opentelekomcloud_compute_secgroup_v2.secgroup_1.id}"
                      ],
                      "user_data": "${file(\"userdata.txt\")}"
                    }
                  ],
                  "scaling_configuration_name": "my_as_config"
                }
              references:
                instance_config.flavor: var.flavor
                instance_config.image: var.image_id
                instance_config.key_name: var.keyname
                instance_config.security_groups: opentelekomcloud_compute_secgroup_v2.secgroup_1.id
              dependencies:
                opentelekomcloud_compute_secgroup_v2.secgroup_1: |-
                    {
                      "description": "Security group for AS config tf test",
                      "name": "acc-test-sg-1"
                    }
        argumentDocs:
            DATA: ': indicates a data disk.'
            SAS: ': high I/O disk type.'
            SATA: ': common I/O disk type.'
            SSD: ': ultra-high I/O disk type.'
            SYS: ': indicates a system disk.'
            bandwidth.charging_mode: '- (Required) The bandwidth charging mode. The system only supports traffic.'
            bandwidth.share_type: '- (Required) The bandwidth sharing type. The system only supports PER.'
            bandwidth.size: '- (Required) The bandwidth (Mbit/s). The value range is 1 to 500.'
            co-p1: ': high I/O (performance-optimized I) disk type.'
            disk.disk_type: '- (Required) Specifies a disk type. The options are as follows:'
            disk.kms_id: '- (Optional) The Encryption KMS ID of the data disk.'
            disk.size: |-
                - (Required) The disk size. The unit is GB. The system disk size ranges from 4 to 32768 and must
                be greater than or equal to the minimum size (min_disk value) of the system disk specified in the image.
                The data disk size ranges from 10 to 32768.
            disk.volume_type: '- (Required) Specifies the ECS system disk type. The disk type must match the available disk type.'
            id: '- Specifies the AS configuration ID.'
            instance_config: |-
                - (Required) The information about instance configurations. The instance_config
                dictionary data structure is documented below.
            instance_config.disk: |-
                - (Optional) The disk group information. System disks are mandatory and data disks are optional.
                The dick structure is described below.
            instance_config.flavor: '- (Optional) The flavor ID. By default, it tries to get from env by OS_FLAVOR_ID.'
            instance_config.image: '- (Optional) The image ID. By default, it tries to get from env by OS_IMAGE_ID.'
            instance_config.instance_id: |-
                - (Optional) When using the existing instance specifications as the template to
                create AS configurations, specify this argument. In this case, flavor, image,
                and disk arguments do not take effect. If the instance_id argument is not specified,
                flavor, image, and disk arguments are mandatory.
            instance_config.key_name: '- (Required) The name of the SSH key pair used to log in to the instance.'
            instance_config.metadata: |-
                - (Optional) Metadata key/value pairs to make available from
                within the instance.
            instance_config.personality: |-
                - (Optional) Customize the personality of an instance by
                defining one or more files and their contents. The personality structure
                is described below.
            instance_config.public_ip: |-
                - (Optional) The elastic IP address of the instance. The public_ip structure
                is described below.
            instance_config.region: '- See Argument Reference above.'
            instance_config.security_groups: |-
                - (Optional) An array of one or more security group IDs
                to associate with the AS configuration.
            instance_config.user_data: |-
                - (Optional) The user data to provide when launching the instance.
                The file content must be encoded with Base64.
            personality.contents: '- (Required) The content of the injected file, which must be encoded with base64.'
            personality.path: '- (Required) The absolute path of the destination file.'
            public_ip.eip: |-
                - (Required) The configuration parameter for creating an elastic IP address
                that will be automatically assigned to the instance. The eip structure is described below.
            public_ip.eip.bandwidth: '- (Required) The bandwidth information. The structure is described below.'
            public_ip.eip.ip_type: '- (Required) The IP address type. The system only supports 5_bgp and 5_mailbgp.'
            region: |-
                - (Optional) The region in which to obtain the V1 AutoScaling client. If omitted, the
                region argument of the provider is used. Changing this creates a new group.
            scaling_configuration_name: |-
                - (Required) The name of the AS configuration. The name can contain letters,
                digits, underscores(_), and hyphens(-), and cannot exceed 64 characters.
            uh-l1: ': ultra-high I/O (latency-optimized) disk type.'
        importStatements: []
    opentelekomcloud_as_group_v1:
        subCategory: Autoscaling
        description: Manages a AS Group resource within OpenTelekomCloud.
        name: opentelekomcloud_as_group_v1
        title: opentelekomcloud_as_group_v1
        examples:
            - name: as_group
              manifest: |-
                {
                  "delete_instances": "yes",
                  "delete_publicip": true,
                  "desire_instance_number": 2,
                  "max_instance_number": 10,
                  "min_instance_number": 0,
                  "networks": [
                    {
                      "id": "ad091b52-742f-469e-8f3c-fd81cadf0743"
                    }
                  ],
                  "scaling_configuration_id": "37e310f5-db9d-446e-9135-c625f9c2bbfc",
                  "scaling_group_name": "as_group",
                  "security_groups": [
                    {
                      "id": "45e4c6de-6bf0-4843-8953-2babde3d4810"
                    }
                  ],
                  "tags": {
                    "muh": "kuh"
                  },
                  "vpc_id": "1d8f7e7c-fe04-4cf5-85ac-08b478c290e9"
                }
            - name: as_group_only_remove_members
              manifest: |-
                {
                  "delete_instances": "no",
                  "delete_publicip": true,
                  "desire_instance_number": 2,
                  "max_instance_number": 10,
                  "min_instance_number": 0,
                  "networks": [
                    {
                      "id": "ad091b52-742f-469e-8f3c-fd81cadf0743"
                    }
                  ],
                  "scaling_configuration_id": "37e310f5-db9d-446e-9135-c625f9c2bbfc",
                  "scaling_group_name": "as_group_only_remove_members",
                  "security_groups": [
                    {
                      "id": "45e4c6de-6bf0-4843-8953-2babde3d4810"
                    }
                  ],
                  "vpc_id": "1d8f7e7c-fe04-4cf5-85ac-08b478c290e9"
                }
            - name: as_group_with_elb
              manifest: |-
                {
                  "delete_instances": "yes",
                  "delete_publicip": true,
                  "desire_instance_number": 2,
                  "lbaas_listeners": [
                    {
                      "pool_id": "${opentelekomcloud_lb_pool_v2.pool_1.id}",
                      "protocol_port": "${opentelekomcloud_lb_listener_v2.as_listener.protocol_port}"
                    }
                  ],
                  "max_instance_number": 10,
                  "min_instance_number": 0,
                  "networks": [
                    {
                      "id": "ad091b52-742f-469e-8f3c-fd81cadf0743"
                    }
                  ],
                  "scaling_configuration_id": "37e310f5-db9d-446e-9135-c625f9c2bbfc",
                  "scaling_group_name": "as_group_with_elb",
                  "security_groups": [
                    {
                      "id": "45e4c6de-6bf0-4843-8953-2babde3d4810"
                    }
                  ],
                  "vpc_id": "1d8f7e7c-fe04-4cf5-85ac-08b478c290e9"
                }
              references:
                lbaas_listeners.pool_id: opentelekomcloud_lb_pool_v2.pool_1.id
                lbaas_listeners.protocol_port: opentelekomcloud_lb_listener_v2.as_listener.protocol_port
              dependencies:
                opentelekomcloud_lb_listener_v2.as_listener: |-
                    {
                      "description": "as test listener",
                      "loadbalancer_id": "cba48790-baf5-4446-adb3-02069a916e97",
                      "name": "as_listener",
                      "protocol": "TCP",
                      "protocol_port": 80
                    }
                opentelekomcloud_lb_pool_v2.pool_1: |-
                    {
                      "lb_method": "ROUND_ROBIN",
                      "listener_id": "${opentelekomcloud_lb_listener_v2.as_listener.id}",
                      "name": "pool_1",
                      "protocol": "HTTP"
                    }
        argumentDocs:
            available_zones: |-
                - (Optional) Specifies the AZ information. The ECS
                associated with a scaling action will be created in a specified AZ.
                If you do not specify an AZ, the system automatically specifies one.
            cool_down_time: |-
                - (Optional) The cooling duration (in seconds). The value ranges
                from 0 to 86400, and is 900 by default.
            current_instance_number: '- Indicates the number of current instances in the AS group.'
            delete_instances: |-
                - (Required) Whether to delete the instances in the AS group
                when deleting the AS group. The options are yes and no.
            delete_publicip: |-
                - (Required) Whether to delete the elastic IP address bound to the
                instances of AS group when deleting the instances. The options are true and false.
            desire_instance_number: |-
                - (Optional) The expected number of instances. The default
                value is the minimum number of instances. The value ranges from the minimum number of
                instances to the maximum number of instances.
            health_periodic_audit_grace_period: |-
                - (Optional) The grace period for instance health check.
                The unit is second and value range is 0-86400. The default value is 600. The health check grace
                period starts after an instance is added to an AS group and is enabled. The AS group will start
                checking the instance status only after the grace period ends. This parameter is valid only when
                the instance health check method of the AS group is ELB_AUDIT.
            health_periodic_audit_method: |-
                - (Optional) The health check method for instances
                in the AS group. The health check methods include ELB_AUDIT and NOVA_AUDIT.
                If load balancing is configured, the default value of this parameter is ELB_AUDIT.
                Otherwise, the default value is NOVA_AUDIT.
            health_periodic_audit_time: |-
                - (Optional) The health check period for instances.
                The value can be 1, 5, 15, 60, or 180 in the unit of minutes. If this parameter
                is not specified, the default value is 5. If the value is set to 0, health check
                is performed every 10 seconds.
            instance_terminate_policy: |-
                - (Optional) The instance removal policy. The policy has
                four options: OLD_CONFIG_OLD_INSTANCE (default), OLD_CONFIG_NEW_INSTANCE,
                OLD_INSTANCE, and NEW_INSTANCE.
            instances: '- The instances IDs of the AS group.'
            lb_listener_id: |-
                DEPRECATED - (Optional) The Classic LB listener IDs. The system
                supports up to six Classic LB listeners, the IDs of which are separated using a comma (,).
                This parameter is alternative to lbaas_listeners.
            lbaas_listeners: |-
                - (Optional) An array of one or more Enhanced Load Balancer.
                The system supports the binding of up to six Enhanced Load Balancers. The field is
                alternative to lb_listener_id. The lbaas_listeners object structure is
                documented below.
            lbaas_listeners.pool_id: '- (Required) Specifies the backend ECS group ID.'
            lbaas_listeners.protocol_port: |-
                - (Required) Specifies the backend protocol, which is the port on which
                a backend ECS listens for traffic. The number of the port ranges from 1 to 65535.
            lbaas_listeners.tags: '- (Optional) Tags key/value pairs to associate with the AutoScaling Group.'
            lbaas_listeners.weight: |-
                - (Optional) Specifies the weight, which determines the portion of requests a
                backend ECS processes compared to other backend ECSs added to the same listener. The value
                of this parameter ranges from 0 to 100. The default value is 1.
            max_instance_number: |-
                - (Optional) The maximum number of instances.
                The default value is 0.
            min_instance_number: |-
                - (Optional) The minimum number of instances.
                The default value is 0.
            networks: |-
                - (Required) An array of one or more network IDs.
                The system supports up to five networks. The networks object structure
                is documented below.
            networks.id: '- (Required) The network UUID.'
            notifications: |-
                - (Optional) The notification mode. The system only supports EMAIL
                mode which refers to notification by email.
            scaling_configuration_id: |-
                - (Optional) The configuration ID which defines
                configurations of instances in the AS group.
            scaling_group_name: |-
                - (Required) The name of the scaling group. The name can contain letters,
                digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
            security_groups: |-
                - (Optional) An array of security group IDs to associate with the group.
                A maximum of one security group can be selected. The security_groups object structure is
                documented below.
            security_groups.id: '- (Required) The UUID of the security group.'
            status: '- Indicates the status of the AS group.'
            tags: '- See Argument Reference above.'
            vpc_id: '- (Required) The VPC ID. Changing this creates a new group.'
        importStatements: []
    opentelekomcloud_as_lifecycle_hook_v1:
        subCategory: Autoscaling
        description: Manages an AS Lifecycle Hook v1 resource within OpenTelekomCloud.
        name: opentelekomcloud_as_lifecycle_hook_v1
        title: opentelekomcloud_as_lifecycle_hook_v1
        examples:
            - name: hth_aslifecyclehook
              manifest: |-
                {
                  "default_result": "ABANDON",
                  "default_timeout": 3600,
                  "notification_metadata": "Some customized notification",
                  "notification_topic_urn": "urn:smn:regionId:b53e5554fad0494d96206fb84296510b:gsh",
                  "scaling_group_id": "4579f2f5-cbe8-425a-8f32-53dcb9d9053a",
                  "scaling_lifecycle_hook_name": "hth_aslifecyclehook",
                  "scaling_lifecycle_hook_type": "INSTANCE_TERMINATING"
                }
        argumentDocs:
            create_time: '- (String) Time of creation of the autoscaling lifecycle hook.'
            default_result: |-
                - (Optional, String) The default lifecycle hook callback operation.  This operation is performed when the timeout duration expires. The values
                can be ABANDON (default value), and CONTINUE.
            default_timeout: '- (Optional, Integer) the lifecycle hook timeout duration, which ranges from 60 to 86400 seconds. The default value is 3600.'
            notification_metadata: '- (Optional, String) A customized notification, which contains no more than 256 characters. The message cannot contain the following characters: <>&''(){}.'
            notification_topic_name: '- (String) Name of the associated topic in SMN..'
            notification_topic_urn: '- (Required, String) The URN of an SMN topic. This parameter specifies a notification object for a lifecycle hook. When an instance is suspended by the lifecycle hook, the SMN service sends a notification to the object. This notification contains the basic instance information, your customized notification content, and the token for controlling lifecycle operations.'
            scaling_group_id: '- (Required, String, ForceNew) The AS group ID. Changing this creates a new AS lifecycle hook.'
            scaling_lifecycle_hook_name: '- (Required, String, ForceNew) The name of the AS Lifecycle Hook. The name can contain letters, digits, underscores(_), and hyphens(-),and cannot exceed 32 characters.'
            scaling_lifecycle_hook_type: '- (Required, String) The lifecycle hook type. The values can be INSTANCE_TERMINATING, and INSTANCE_LAUNCHING.'
        importStatements: []
    opentelekomcloud_as_policy_v1:
        subCategory: Autoscaling
        description: Manages a AS Policy v1 resource within OpenTelekomCloud.
        name: opentelekomcloud_as_policy_v1
        title: opentelekomcloud_as_policy_v1
        examples:
            - name: hth_aspolicy
              manifest: |-
                {
                  "cool_down_time": 900,
                  "scaling_group_id": "4579f2f5-cbe8-425a-8f32-53dcb9d9053a",
                  "scaling_policy_action": [
                    {
                      "instance_number": 1,
                      "operation": "ADD"
                    }
                  ],
                  "scaling_policy_name": "hth_aspolicy",
                  "scaling_policy_type": "RECURRENCE",
                  "scheduled_policy": [
                    {
                      "end_time": "2017-12-30T12:00Z",
                      "launch_time": "07:00",
                      "recurrence_type": "Daily",
                      "start_time": "2017-11-30T12:00Z"
                    }
                  ]
                }
            - name: hth_aspolicy_1
              manifest: |-
                {
                  "cool_down_time": 900,
                  "scaling_group_id": "4579f2f5-cbe8-425a-8f32-53dcb9d9053a",
                  "scaling_policy_action": [
                    {
                      "instance_number": 1,
                      "operation": "REMOVE"
                    }
                  ],
                  "scaling_policy_name": "hth_aspolicy_1",
                  "scaling_policy_type": "SCHEDULED",
                  "scheduled_policy": [
                    {
                      "launch_time": "2017-12-22T12:00Z"
                    }
                  ]
                }
            - name: hth_aspolicy_2
              manifest: |-
                {
                  "alarm_id": "37e310f5-db9d-446e-9135-c625f9c2bbfc",
                  "cool_down_time": 900,
                  "scaling_group_id": "4579f2f5-cbe8-425a-8f32-53dcb9d9053a",
                  "scaling_policy_action": [
                    {
                      "instance_number": 1,
                      "operation": "ADD"
                    }
                  ],
                  "scaling_policy_name": "hth_aspolicy_2",
                  "scaling_policy_type": "ALARM"
                }
        argumentDocs:
            alarm_id: |-
                - (Optional) The alarm rule ID. This argument is mandatory
                when scaling_policy_type is set to ALARM.
            cool_down_time: '- (Optional) The cooling duration (in seconds), and is 900 by default.'
            scaling_group_id: '- (Required) The AS group ID. Changing this creates a new AS policy.'
            scaling_policy_action: |-
                - (Optional) The action of the AS policy. The scaling_policy_action
                structure is documented below.
            scaling_policy_action.instance_number: '- (Optional) The number of instances to be operated. The default number is 1.'
            scaling_policy_action.operation: |-
                - (Optional) The operation to be performed. The options include ADD (default), REMOVE,
                and SET.
            scaling_policy_action/instance_number: '- See Argument Reference above.'
            scaling_policy_action/operation: '- See Argument Reference above.'
            scaling_policy_name: |-
                - (Required) The name of the AS policy. The name can contain letters,
                digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
            scaling_policy_type: |-
                - (Required) The AS policy type. The values can be ALARM, SCHEDULED,
                and RECURRENCE.
            scheduled_policy: |-
                - (Optional) The periodic or scheduled AS policy. This argument is mandatory
                when scaling_policy_type is set to SCHEDULED or RECURRENCE. The scheduled_policy structure
                is documented below.
            scheduled_policy.end_time: |-
                - (Optional) The end time of the scaling action triggered periodically.
                The time format complies with UTC. This argument is mandatory when scaling_policy_type
                is set to RECURRENCE. The time format is YYYY-MM-DDThh:mmZ.
            scheduled_policy.launch_time: |-
                - (Required) The time when the scaling action is triggered. If scaling_policy_type
                is set to SCHEDULED, the time format is YYYY-MM-DDThh:mmZ. If scaling_policy_type is set to
                RECURRENCE, the time format is hh:mm.
            scheduled_policy.recurrence_type: |-
                - (Optional) The periodic triggering type. This argument is mandatory when
                scaling_policy_type is set to RECURRENCE. The options include Daily, Weekly, and Monthly.
            scheduled_policy.recurrence_value: '- (Optional) The frequency at which scaling actions are triggered.'
            scheduled_policy.start_time: |-
                - (Optional) The start time of the scaling action triggered periodically.
                The time format complies with UTC. The current time is used by default. The time
                format is YYYY-MM-DDThh:mmZ.
            scheduled_policy/end_time: '- See Argument Reference above.'
            scheduled_policy/launch_time: '- See Argument Reference above.'
            scheduled_policy/recurrence_type: '- See Argument Reference above.'
            scheduled_policy/recurrence_value: '- See Argument Reference above.'
            scheduled_policy/start_time: '- See Argument Reference above.'
        importStatements: []
    opentelekomcloud_as_policy_v2:
        subCategory: Autoscaling
        description: Manages a AS Policy v2 resource within OpenTelekomCloud.
        name: opentelekomcloud_as_policy_v2
        title: opentelekomcloud_as_policy_v2
        examples:
            - name: policy_1
              manifest: |-
                {
                  "scaling_policy_action": [
                    {
                      "operation": "ADD",
                      "percentage": 15
                    }
                  ],
                  "scaling_policy_name": "policy_create",
                  "scaling_policy_type": "RECURRENCE",
                  "scaling_resource_id": "${var.as_group}",
                  "scaling_resource_type": "SCALING_GROUP",
                  "scheduled_policy": [
                    {
                      "end_time": "2040-12-31T10:30Z",
                      "launch_time": "10:30",
                      "recurrence_type": "Weekly",
                      "recurrence_value": "1,3,5"
                    }
                  ]
                }
              references:
                scaling_resource_id: var.as_group
            - name: policy_1
              manifest: |-
                {
                  "alarm_id": "${var.alarm_id}",
                  "cool_down_time": 900,
                  "scaling_policy_action": [
                    {
                      "operation": "ADD",
                      "size": 1
                    }
                  ],
                  "scaling_policy_name": "policy_create",
                  "scaling_policy_type": "ALARM",
                  "scaling_resource_id": "${var.as_group}",
                  "scaling_resource_type": "SCALING_GROUP"
                }
              references:
                alarm_id: var.alarm_id
                scaling_resource_id: var.as_group
        argumentDocs:
            ADD: ': indicates adding instances.'
            ALARM: |-
                - Indicates that the scaling action is triggered by an alarm. A value is returned for
                alarm_id, and no value is returned for scheduled_policy.
            RECURRENCE: |-
                - Indicates that the scaling action is triggered periodically.
                Values are returned for scheduled_policy, recurrence_type, recurrence_value,
                start_time, and end_time, and no value is returned for alarm_id.
            REDUCE: ': indicates reducing instances.'
            REMOVE: '/REDUCE: indicates removing or reducing instances.'
            SCHEDULED: |-
                - Indicates that the scaling action is triggered as scheduled.
                A value is returned for scheduled_policy, and no value is returned for alarm_id,
                recurrence_type, recurrence_value, start_time, or end_time.
            SET: ': indicates setting the number of instances to a specified value.'
            alarm_id: |-
                - (Optional) Specifies the alarm rule ID. This parameter is mandatory
                when scaling_policy_type is set to ALARM.
            cool_down_time: '- (Optional) Specifies the cooldown period (in seconds).'
            create_time: '- Specifies the time when an AS policy was created. The time format complies with UTC.'
            metadata: '- Provides additional information. The metadata structure is documented below.'
            metadata.bandwidth_share_type: '- Specifies the bandwidth sharing type in the bandwidth scaling policy.'
            metadata.eip_address: '- Specifies the EIP for the bandwidth in the bandwidth scaling policy.'
            metadata.eip_id: '- Specifies the EIP ID for the bandwidth in the bandwidth scaling policy.'
            scaling_policy_action: |-
                - (Optional) The action of the AS policy. The scaling_policy_action
                structure is documented below.
            scaling_policy_action.limits: '- (Optional) Specifies the operation restrictions.'
            scaling_policy_action.operation: '- (Optional) The operation to be performed.'
            scaling_policy_action.percentage: |-
                - (Optional) Specifies the percentage of instances to be operated.
                If operation is set to ADD, REMOVE, or REDUCE, the value of this parameter
                is an integer from 1 to 20000.
            scaling_policy_action.scaling_resource_type: 'is set to SCALING_GROUP, the following operations are supported:'
            scaling_policy_action.size: |-
                - (Optional) Specifies the operation size. The value is an integer from 0 to 300.
                The default value is 1. This parameter can be set to 0 only when operation is set to SET.
            scaling_policy_name: |-
                - (Required) The name of the AS policy. The name can contain letters,
                digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
            scaling_policy_type: '- (Required) The AS policy type. The values can be:'
            scaling_resource_id: '- (Required) The Scaling resource ID.'
            scaling_resource_type: '- (Required) Specifies the scaling resource type. Valid values are:'
            scheduled_policy: |-
                - (Optional) Specifies the periodic or scheduled AS policy.
                This parameter is mandatory when scaling_policy_type is set to SCHEDULED or RECURRENCE.
                After this parameter is specified, the value of alarm_id does not take effect.
                The scheduled_policy structure is documented below.
            scheduled_policy.end_time: |-
                - (Optional) The end time of the scaling action triggered periodically.
                The time format complies with UTC. This argument is mandatory when scaling_policy_type
                is set to RECURRENCE. The time format is YYYY-MM-DDThh:mmZ.
            scheduled_policy.launch_time: |-
                - (Required) The time when the scaling action is triggered. If scaling_policy_type
                is set to SCHEDULED, the time format is YYYY-MM-DDThh:mmZ. If scaling_policy_type is set to
                RECURRENCE, the time format is hh:mm.
            scheduled_policy.recurrence_type: |-
                - (Optional) The periodic triggering type. This argument is mandatory when
                scaling_policy_type is set to RECURRENCE. The options include Daily, Weekly, and Monthly.
            scheduled_policy.recurrence_value: '- (Optional) The frequency at which scaling actions are triggered.'
            scheduled_policy.start_time: |-
                - (Optional) The start time of the scaling action triggered periodically.
                The time format complies with UTC. The current time is used by default. The time
                format is YYYY-MM-DDThh:mmZ.
            size: nor percentage is set, the default value of size is 1.
        importStatements: []
    opentelekomcloud_blockstorage_volume_attach_v2:
        subCategory: Elastic Volume Service (EVS)
        description: Manages a BlockStorage volume attach resource within OpenTelekomCloud.
        name: opentelekomcloud_blockstorage_volume_attach_v2
        title: opentelekomcloud_blockstorage_volume_attach_v2
        examples:
            - name: va_1
              manifest: |-
                {
                  "device": "auto",
                  "host_name": "devstack",
                  "initiator": "iqn.1993-08.org.debian:01:e9861fb1859",
                  "ip_address": "192.168.255.10",
                  "os_type": "linux2",
                  "platform": "x86_64",
                  "volume_id": "${opentelekomcloud_blockstorage_volume_v2.volume_1.id}"
                }
              references:
                volume_id: opentelekomcloud_blockstorage_volume_v2.volume_1.id
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.volume_1: |-
                    {
                      "name": "volume_1",
                      "size": 1
                    }
        argumentDocs:
            attach_mode: |-
                - (Optional) Specify whether to attach the volume as Read-Only
                (ro) or Read-Write (rw). Only values of ro and rw are accepted.
                If left unspecified, the Block Storage API will apply a default of rw.
            data: |-
                - This is a map of key/value pairs that contain the connection
                information. You will want to pass this information to a provisioner
                script to finalize the connection. See below for more information.
            device: |-
                - (Optional) The device to tell the Block Storage service this
                volume will be attached as. This is purely for informational purposes.
                You can specify auto or a device such as /dev/vdc.
            driver_volume_type: '- The storage driver that the volume is based on.'
            host_name: '- (Required) The host to attach the volume to.'
            initiator: '- (Optional) The iSCSI initiator string to make the connection.'
            ip_address: '- (Optional) The IP address of the host_name above.'
            mount_point_base: '- A mount point base name for shared storage.'
            multipath: '- (Optional) Whether to connect to this volume via multipath.'
            os_type: '- (Optional) The iSCSI initiator OS type.'
            platform: '- (Optional) The iSCSI initiator platform.'
            volume_id: '- (Required) The ID of the Volume to attach to an Instance.'
            wwnn: '- (Optional) A wwnn name. Used for Fibre Channel connections.'
            wwpn: |-
                - (Optional) An array of wwpn strings. Used for Fibre Channel
                connections.
        importStatements: []
    opentelekomcloud_blockstorage_volume_v2:
        subCategory: Elastic Volume Service (EVS)
        description: Manages a BlockStorage volume resource within OpenTelekomCloud.
        name: opentelekomcloud_blockstorage_volume_v2
        title: opentelekomcloud_blockstorage_volume_v2
        examples:
            - name: volume_1
              manifest: |-
                {
                  "description": "first test volume",
                  "metadata": {
                    "__system__cmkid": "kms_id",
                    "__system__encrypted": "1"
                  },
                  "name": "volume_1",
                  "size": 3,
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  }
                }
        argumentDocs:
            __system__cmkid: '- (Optional) The ID of the kms key.'
            __system__encrypted: |-
                - The default value is set to '0', which means
                the volume is not encrypted, the value '1' indicates volume is encrypted.
            attachment: |-
                - If a volume is attached to an instance, this attribute will
                display the Attachment ID, Instance ID, and the Device as the Instance sees it.
            availability_zone: |-
                - (Optional) The availability zone for the volume.
                Changing this creates a new volume.
            cascade: '- (Optional, Default:false) Specifies to delete all snapshots associated with the EVS disk.'
            consistency_group_id: '- (Optional) The consistency group to place the volume in.'
            description: |-
                - (Optional) A description of the volume. Changing this updates
                the volume's description.
            device_type: |-
                - (Optional) The device type of volume to create. Valid options are VBD and SCSI.
                Defaults to VBD. Changing this creates a new volume.
            image_id: |-
                - (Optional) The image ID from which to create the volume.
                Changing this creates a new volume.
            metadata: |-
                - (Optional) Metadata key/value pairs to associate with the volume.
                Changing this updates the existing volume metadata.
                The EVS encryption capability with KMS key can be set with the following parameters:
            name: |-
                - (Optional) A unique name for the volume. Changing this updates the
                volume's name.
            size: |-
                - (Required) The size of the volume to create (in gigabytes). Decreasing
                this parameter creates a new volume.
            snapshot_id: |-
                - (Optional) The snapshot ID from which to create the volume.
                Changing this creates a new volume.
            source_replica: '- (Optional) The volume ID to replicate with.'
            source_vol_id: |-
                - (Optional) The volume ID from which to create the volume.
                Changing this creates a new volume.
            tags: |-
                - (Optional) Tags key/value pairs to associate with the volume.
                Changing this updates the existing volume tags.
            volume_type: '- (Optional) Currently, the value can be SSD (ultra-high I/O disk type), SAS (high I/O disk type), SATA (common I/O disk type), co-p1 (Exclusive HPC/ SAP HANA: high I/O, performance optimized), or uh-l1 (Exclusive HPC/ SAP HANA: ultra-high-I/O, latency optimized). Read Note for uh-l1 and co-p1: OTC-API. Changing this creates a new volume.'
            wwn: '- Specifies the unique identifier used for mounting the EVS disk.'
        importStatements: []
    opentelekomcloud_cbr_policy_v3:
        subCategory: Cloud Backup and Recovery (CBR)
        description: Manages a CBR Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_cbr_policy_v3
        title: opentelekomcloud_cbr_policy_v3
        examples:
            - name: policy
              manifest: |-
                {
                  "enabled": "false",
                  "name": "some-policy",
                  "operation_definition": [
                    {
                      "day_backups": 1,
                      "max_backups": 10,
                      "month_backups": 4,
                      "timezone": "UTC+03:00",
                      "week_backups": 2,
                      "year_backups": 3
                    }
                  ],
                  "operation_type": "backup",
                  "trigger_pattern": [
                    "FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR,SA,SU;BYHOUR=14;BYMINUTE=00"
                  ]
                }
            - name: policy
              manifest: |-
                {
                  "destination_project_id": "${var.destination_project_id}",
                  "destination_region": "${var.destination_region}",
                  "name": "${var.policy_name}",
                  "operation_definition": [
                    {
                      "day_backups": 1,
                      "max_backups": 10,
                      "month_backups": 4,
                      "timezone": "UTC+03:00",
                      "week_backups": 2,
                      "year_backups": 3
                    }
                  ],
                  "operation_type": "replication",
                  "trigger_pattern": [
                    "FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR,SA,SU;BYHOUR=14;BYMINUTE=00"
                  ]
                }
              references:
                destination_project_id: var.destination_project_id
                destination_region: var.destination_region
                name: var.policy_name
        argumentDocs:
            destination_project_id: |-
                - (Optional, String) Specifies the ID of the replication destination project, which is
                mandatory for cross-region replication. Required if operation_type is replication.
            destination_region: |-
                - (Optional, String) Specifies the name of the replication destination region, which is mandatory
                for cross-region replication. Required if operation_type is replication.
            enabled: '- (Optional, Bool) Whether to enable the policy. Default value is true.'
            name: |-
                - (Required, String) Specifies the policy name. The value consists of 1 to 64 characters
                and can contain only letters, digits, underscores (_), and hyphens (-).
            operation_definition: '- (Optional, List) Scheduling parameter. See reference below.'
            operation_definition.day_backups: |-
                - (Optional, Int) Specifies the number of retained daily backups. The latest
                backup of each day is saved in the long term. This parameter can be effective together
                with the maximum number of retained backups specified by max_backups. The value ranges
                from 0 to 100. If this parameter is configured, timezone is mandatory.
            operation_definition.max_backups: |-
                - (Optional, Int) Maximum number of retained backups. The value can be -1 or ranges
                from 0 to 99999. If the value is set to -1, the backups will not be cleared even though
                the configured retained backup quantity is exceeded. If this parameter and retention_duration_days
                are both left blank, the backups will be retained permanently.
            operation_definition.month_backups: |-
                - (Optional, Int) Specifies the number of retained monthly backups. The latest
                backup of each month is saved in the long term. This parameter can be effective together
                with the maximum number of retained backups specified by max_backups. The value ranges from
                0 to 100. If this parameter is configured, timezone is mandatory.
            operation_definition.retention_duration_days: |-
                - (Optional, Int) Duration of retaining a backup, in days.
                The maximum value is 99999. -1 indicates that the backups will not be cleared based on
                the retention duration. If this parameter and max_backups are left blank at the same time,
                the backups will be retained permanently.
            operation_definition.timezone: '- (Required, String) Time zone where the user is located, for example, UTC+00:00.'
            operation_definition.week_backups: |-
                - (Optional, Int) Specifies the number of retained weekly backups. The latest
                backup of each week is saved in the long term. This parameter can be effective together
                with the maximum number of retained backups specified by max_backups. The value ranges
                from 0 to 100. If this parameter is configured, timezone is mandatory.
            operation_definition.year_backups: |-
                - (Optional, Int) Specifies the number of retained yearly backups. The latest
                backup of each year is saved in the long term. This parameter can be effective together
                with the maximum number of retained backups specified by max_backups. The value ranges
                from 0 to 100. If this parameter is configured, timezone is mandatory.
            operation_type: '- (Required, String) Policy type. Enumeration values: backup, replication.'
            region: '- Specifies the region of the CBRv3 policy.'
            trigger_pattern: |-
                - (Required, String) Scheduling rule. In the replication policy, you are advised
                to set one time point for one day. A maximum of 24 rules can be configured. The scheduling
                rule complies with iCalendar RFC 2445, but it supports only parameters FREQ, BYDAY, BYHOUR,
                BYMINUTE, and INTERVAL. FREQ can be set only to WEEKLY and DAILY.
        importStatements: []
    opentelekomcloud_cbr_vault_v3:
        subCategory: Cloud Backup and Recovery (CBR)
        description: Manages a CBR Vault resource within OpenTelekomCloud.
        name: opentelekomcloud_cbr_vault_v3
        title: opentelekomcloud_cbr_vault_v3
        examples:
            - name: vault
              manifest: |-
                {
                  "billing": [
                    {
                      "charging_mode": "post_paid",
                      "object_type": "disk",
                      "protect_type": "backup",
                      "size": 100
                    }
                  ],
                  "description": "CBR vault for terraform provider test",
                  "name": "cbr-vault-test"
                }
            - name: vault
              manifest: |-
                {
                  "billing": [
                    {
                      "charging_mode": "post_paid",
                      "object_type": "disk",
                      "protect_type": "backup",
                      "size": 100
                    }
                  ],
                  "description": "CBR vault for terraform provider test",
                  "name": "cbr-vault-test",
                  "resource": [
                    {
                      "exclude_volumes": [
                        "${opentelekomcloud_ecs_instance_v1.instance_1.data_disks.1.id}"
                      ],
                      "id": "${opentelekomcloud_ecs_instance_v1.instance.id}",
                      "type": "OS::Nova::Server"
                    }
                  ]
                }
              references:
                resource.exclude_volumes: opentelekomcloud_ecs_instance_v1.instance_1.data_disks.1.id
                resource.id: opentelekomcloud_ecs_instance_v1.instance.id
            - name: vault
              manifest: |-
                {
                  "billing": [
                    {
                      "charging_mode": "post_paid",
                      "object_type": "disk",
                      "protect_type": "backup",
                      "size": 100
                    }
                  ],
                  "description": "CBR vault for terraform provider test",
                  "name": "cbr-vault-test",
                  "resource": [
                    {
                      "id": "${opentelekomcloud_ecs_instance_v1.instance.id}",
                      "include_volumes": [
                        "${opentelekomcloud_ecs_instance_v1.instance_1.data_disks.1.id}"
                      ],
                      "type": "OS::Nova::Server"
                    }
                  ]
                }
              references:
                resource.id: opentelekomcloud_ecs_instance_v1.instance.id
                resource.include_volumes: opentelekomcloud_ecs_instance_v1.instance_1.data_disks.1.id
            - name: vault
              manifest: |-
                {
                  "billing": [
                    {
                      "charging_mode": "post_paid",
                      "object_type": "disk",
                      "protect_type": "backup",
                      "size": 100
                    }
                  ],
                  "description": "CBR vault for terraform provider test",
                  "name": "cbr-vault-test",
                  "resource": [
                    {
                      "id": "${opentelekomcloud_blockstorage_volume_v2.volume.id}",
                      "type": "OS::Cinder::Volume"
                    }
                  ]
                }
              references:
                resource.id: opentelekomcloud_blockstorage_volume_v2.volume.id
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.volume: |-
                    {
                      "name": "cbr-test-volume",
                      "size": 10,
                      "volume_type": "SSD"
                    }
            - name: vault
              manifest: |-
                {
                  "billing": [
                    {
                      "charging_mode": "post_paid",
                      "object_type": "turbo",
                      "protect_type": "backup",
                      "size": 1000
                    }
                  ],
                  "description": "CBR vault for terraform provider test",
                  "name": "cbr-vault-test",
                  "resource": [
                    {
                      "id": "${opentelekomcloud_sfs_turbo_share_v1.sfs-turbo.id}",
                      "type": "OS::Sfs::Turbo"
                    }
                  ]
                }
              references:
                resource.id: opentelekomcloud_sfs_turbo_share_v1.sfs-turbo.id
              dependencies:
                opentelekomcloud_sfs_turbo_share_v1.sfs-turbo: |-
                    {
                      "availability_zone": "${var.az}",
                      "name": "sfs-turbo-share",
                      "security_group_id": "${var.sg_id}",
                      "share_proto": "NFS",
                      "size": 500,
                      "subnet_id": "${var.subnet_id}",
                      "vpc_id": "${var.vpc_id}"
                    }
            - name: vault
              manifest: |-
                {
                  "backup_policy_id": "${opentelekomcloud_cbr_policy_v3.policy.id}",
                  "billing": [
                    {
                      "charging_mode": "post_paid",
                      "object_type": "disk",
                      "protect_type": "backup",
                      "size": 100
                    }
                  ],
                  "description": "CBR vault for terraform provider test",
                  "name": "cbr-vault-test"
                }
              references:
                backup_policy_id: opentelekomcloud_cbr_policy_v3.policy.id
              dependencies:
                opentelekomcloud_cbr_policy_v3.policy: |-
                    {
                      "enabled": "false",
                      "name": "some-policy",
                      "operation_definition": [
                        {
                          "day_backups": 1,
                          "max_backups": 10,
                          "month_backups": 4,
                          "timezone": "UTC+03:00",
                          "week_backups": 2,
                          "year_backups": 3
                        }
                      ],
                      "operation_type": "backup",
                      "trigger_pattern": [
                        "FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR,SA,SU;BYHOUR=14;BYMINUTE=00"
                      ]
                    }
            - name: vault
              manifest: |-
                {
                  "auto_bind": true,
                  "billing": [
                    {
                      "charging_mode": "post_paid",
                      "object_type": "server",
                      "protect_type": "backup",
                      "size": 10
                    }
                  ],
                  "bind_rules": [
                    {
                      "key": "foo",
                      "value": "bar"
                    }
                  ],
                  "description": "CBR vault for default backup policy",
                  "name": "cbr-vault-test"
                }
        argumentDocs:
            allocated: '- Allocated capacity, in MB.'
            auto_bind: '- (Optional) Whether automatic association is supported.'
            auto_expand: |-
                - (Optional) Whether to automatically expand the vault capacity. Only pay-per-use vaults support this
                function.
            backup_policy_id: |-
                - (Optional) Backup policy ID. If the value of this parameter is empty, automatic backup is not
                performed.
            billing: '- Billing parameter information for creation. Billing fields:'
            bind_rules: |-
                - (Optional)  Tag map, a rules for automatic association. You can only select tag keys and values from
                the existing ones. If there are no tags available, go to the corresponding service to create one.
                You can add a maximum of 5 tags for a search. If more than one tag is added, the backups containing one of the
                specified tags will be returned.
            charging_mode: |-
                - Billing mode. Possible values are post_paid (pay-per-use) or pre_paid
                (yearly/monthly packages). The value defaults to post_paid.
            cloud_type: '- (Optional) Cloud platform. One of public (default), hybrid'
            consistent_level: '- (Optional) Backup specifications. The default value is crash_consistent'
            console_url: '- (Optional) Redirection URL.'
            description: '- (Optional) User-defined vault description.'
            exclude_volumes: '- (Optional) List of excluded volumes.'
            extra_info: '- (Optional) Map of extra info.'
            frozen_scene: '- Scenario when an account is frozen.'
            id: '- ID of the resource to be backed up.'
            include_volumes: '- (Optional) List of included volumes.'
            is_auto_pay: |-
                - (Optional) Whether the fee is automatically deducted from the customer's account balance after an
                order is submitted. The non-automatic payment mode is used by default.
            is_auto_renew: |-
                - (Optional) Whether to automatically renew the subscription after expiration. By default, it is
                not renewed.
            name: '- Vault name.'
            object_type: '- Object type. One of server, disk, turbo.'
            order_id: '- Order ID.'
            period_num: |-
                - (Optional) Required duration for the package. This parameter is mandatory if
                charging_mode is set to pre_paid.
            period_type: |-
                - (Optional) Package type. This parameter is mandatory if charging_mode is set to pre_paid.
                Possible values are year (yearly) or month (monthly).
            product_id: '- Product ID.'
            protect_type: '- Operation type. One of backup, replication'
            resource: '- (Optional) Associated resources. Multiple. Resource fields:'
            size: '- Capacity, in GB. Minimum 1, maximum 10485760'
            spec_code: '- Specification code.'
            status: '- Vault status.'
            storage_unit: '- Name of the bucket for the vault.'
            tags: '- (Optional) Tag map.'
            type: '- Type of the resource to be backed up. Possible values are OS::Nova::Server, OS::Cinder::Volume and OS::Sfs::Turbo.'
            used: '- Used capacity, in MB.'
        importStatements: []
    opentelekomcloud_cce_addon_v3:
        subCategory: Cloud Container Engine (CCE)
        description: Manages a CCE Addon resource within OpenTelekomCloud.
        name: opentelekomcloud_cce_addon_v3
        title: opentelekomcloud_cce_addon_v3
        examples:
            - name: addon
              manifest: |-
                {
                  "cluster_id": "${opentelekomcloud_cce_cluster_v3.cluster_1.id}",
                  "template_name": "metrics-server",
                  "template_version": "1.3.6",
                  "values": [
                    {
                      "basic": {
                        "image_version": "v0.6.2",
                        "swr_addr": "100.125.7.25:20202",
                        "swr_user": "cce-addons"
                      },
                      "custom": {}
                    }
                  ]
                }
              references:
                cluster_id: opentelekomcloud_cce_cluster_v3.cluster_1.id
              dependencies:
                opentelekomcloud_cce_cluster_v3.cluster_1: |-
                    {
                      "cluster_type": "VirtualMachine",
                      "cluster_version": "v1.17.9-r0",
                      "container_network_type": "overlay_l2",
                      "flavor_id": "${var.flavor_id}",
                      "kubernetes_svc_ip_range": "10.247.0.0/16",
                      "name": "cce-cluster-1",
                      "subnet_id": "${var.subnet_id}",
                      "vpc_id": "${var.vpc_id}"
                    }
            - name: autoscaler
              manifest: |-
                {
                  "cluster_id": "${opentelekomcloud_cce_cluster_v3.cluster_1.id}",
                  "template_name": "${data.opentelekomcloud_cce_addon_template_v3.autoscaler.addon_name}",
                  "template_version": "${data.opentelekomcloud_cce_addon_template_v3.autoscaler.addon_version}",
                  "values": [
                    {
                      "basic": {
                        "cceEndpoint": "https://cce.${var.region_name}.otc.t-systems.com",
                        "ecsEndpoint": "https://ecs.${var.region_name}.otc.t-systems.com",
                        "region": "${var.region_name}",
                        "swr_addr": "${data.opentelekomcloud_cce_addon_template_v3.autoscaler.swr_addr}",
                        "swr_user": "${data.opentelekomcloud_cce_addon_template_v3.autoscaler.swr_user}"
                      },
                      "custom": {
                        "cluster_id": "${opentelekomcloud_cce_cluster_v3.cluster_1.id}",
                        "coresTotal": 32000,
                        "expander": "priority",
                        "logLevel": 4,
                        "maxEmptyBulkDeleteFlag": 10,
                        "maxNodeProvisionTime": 15,
                        "maxNodesTotal": 1000,
                        "memoryTotal": 128000,
                        "scaleDownDelayAfterAdd": 10,
                        "scaleDownDelayAfterDelete": 11,
                        "scaleDownDelayAfterFailure": 3,
                        "scaleDownEnabled": true,
                        "scaleDownUnneededTime": 10,
                        "scaleDownUtilizationThreshold": 0.5,
                        "scaleUpCpuUtilizationThreshold": 1,
                        "scaleUpMemUtilizationThreshold": 1,
                        "scaleUpUnscheduledPodEnabled": true,
                        "scaleUpUtilizationEnabled": true,
                        "tenant_id": "${data.opentelekomcloud_identity_project_v3.this.id}",
                        "unremovableNodeRecheckTimeout": 5
                      },
                      "flavor": "      {\n        \"description\": \"Has only one instance\",\n        \"name\": \"Single\",\n        \"replicas\": 1,\n        \"resources\": [\n          {\n            \"limitsCpu\": \"1000m\",\n            \"limitsMem\": \"1000Mi\",\n            \"name\": \"autoscaler\",\n            \"requestsCpu\": \"500m\",\n            \"requestsMem\": \"500Mi\"\n          }\n        ]\n      }\n"
                    }
                  ]
                }
              references:
                cluster_id: opentelekomcloud_cce_cluster_v3.cluster_1.id
                template_name: data.opentelekomcloud_cce_addon_template_v3.autoscaler.addon_name
                template_version: data.opentelekomcloud_cce_addon_template_v3.autoscaler.addon_version
              dependencies:
                opentelekomcloud_cce_cluster_v3.cluster_1: |-
                    {
                      "cluster_type": "VirtualMachine",
                      "cluster_version": "v1.25",
                      "container_network_type": "overlay_l2",
                      "flavor_id": "cce.s1.small",
                      "kubernetes_svc_ip_range": "10.247.0.0/16",
                      "name": "my_cluster",
                      "subnet_id": "${var.network_id}",
                      "vpc_id": "${var.vpc_id}"
                    }
            - name: coredns
              manifest: |-
                {
                  "cluster_id": "${opentelekomcloud_cce_cluster_v3.cluster_1.id}",
                  "template_name": "coredns",
                  "template_version": "1.28.4",
                  "values": [
                    {
                      "basic": {
                        "swr_addr": "100.125.7.25:20202",
                        "swr_user": "hwofficial"
                      },
                      "custom": {
                        "stub_domains": "{\"test\":[\"10.10.40.10\"], \"test2\":[\"10.10.40.20\"]}",
                        "upstream_nameservers": "[\"8.8.8.8\",\"8.8.4.4\"]"
                      }
                    }
                  ]
                }
              references:
                cluster_id: opentelekomcloud_cce_cluster_v3.cluster_1.id
              dependencies:
                opentelekomcloud_cce_cluster_v3.cluster_1: |-
                    {
                      "cluster_type": "VirtualMachine",
                      "cluster_version": "v1.27",
                      "container_network_type": "overlay_l2",
                      "flavor_id": "cce.s1.medium",
                      "kubernetes_svc_ip_range": "10.247.0.0/16",
                      "name": "my_cluster",
                      "no_addons": true,
                      "subnet_id": "${var.network_id}",
                      "vpc_id": "${var.vpc_id}"
                    }
        argumentDocs:
            basic: '- (Required, Map, ForceNew) Basic add-on information.'
            cluster_id: '- (Required, String, ForceNew) ID of cluster to install the add-on on.'
            custom: '- (Required, Map, ForceNew) Custom parameters of the add-on.'
            description: '- Installed add-on description'
            flavor: '- (Optional, String, ForceNew) Specifies the json string vary depending on the add-on.'
            name: '- Installed add-on name.'
            template_name: '- (Required, String, ForceNew) Name of the add-on template to be installed, for example, coredns.'
            template_version: '- (Required, String, ForceNew) Version number of the add-on to be installed or upgraded, for example, v1.0.0.'
            values: '- (Required, List, ForceNew) Parameters of the template to be installed or upgraded.'
        importStatements: []
    opentelekomcloud_cce_cluster_v3:
        subCategory: Cloud Container Engine (CCE)
        description: Manages a CCE Cluster resource within OpenTelekomCloud.
        name: opentelekomcloud_cce_cluster_v3
        title: opentelekomcloud_cce_cluster_v3
        examples:
            - name: cluster_1
              manifest: |-
                {
                  "authentication_mode": "rbac",
                  "cluster_type": "VirtualMachine",
                  "container_network_type": "overlay_l2",
                  "description": "Create cluster",
                  "flavor_id": "${var.flavor_id}",
                  "kube_proxy_mode": "ipvs",
                  "name": "cluster",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                flavor_id: var.flavor_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
            - name: cluster_1
              manifest: |-
                {
                  "cluster_type": "VirtualMachine",
                  "container_network_type": "eni",
                  "eni_subnet_cidr": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.cidr}",
                  "eni_subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.subnet_id}",
                  "flavor_id": "cce.s1.small",
                  "ignore_addons": true,
                  "kubernetes_svc_ip_range": "10.247.0.0/16",
                  "name": "turbo",
                  "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}",
                  "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                }
              references:
                eni_subnet_cidr: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.cidr
                eni_subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.subnet_id
                subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id
                vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
            - name: cluster_1
              manifest: |-
                {
                  "annotations": {
                    "cluster.install.addons.external/install": "[{\"addonTemplateName\":\"icagent\"}]"
                  },
                  "authentication_mode": "rbac",
                  "cluster_type": "VirtualMachine",
                  "container_network_type": "overlay_l2",
                  "description": "Create cluster",
                  "flavor_id": "${var.flavor_id}",
                  "kube_proxy_mode": "ipvs",
                  "name": "cluster",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                flavor_id: var.flavor_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
            - name: cluster_1
              manifest: |-
                {
                  "authentication_mode": "rbac",
                  "cluster_type": "VirtualMachine",
                  "container_network_type": "overlay_l2",
                  "depends_on": [
                    "${opentelekomcloud_identity_agency_v3.enable_cce_auto_creation}"
                  ],
                  "description": "Create cluster",
                  "flavor_id": "${var.flavor_id}",
                  "name": "cluster",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                flavor_id: var.flavor_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_identity_agency_v3.enable_cce_auto_creation: |-
                    {
                      "delegated_domain_name": "op_svc_cce",
                      "description": "Created by Terraform to auto create cce",
                      "dynamic": {
                        "project_role": [
                          {
                            "content": [
                              {
                                "project": "${project_role.value}",
                                "roles": [
                                  "Tenant Administrator"
                                ]
                              }
                            ],
                            "for_each": "${var.projects}"
                          }
                        ]
                      },
                      "name": "cce_admin_trust"
                    }
        argumentDocs:
            annotations: '- (Optional) Cluster annotation, key/value pair format. Changing this parameter will create a new cluster resource.'
            authenticating_proxy: '- (Optional) Authenticating proxy configuration. Required if authentication_mode is set to authenticating_proxy.'
            authenticating_proxy_ca: |-
                - (Optional) CA root certificate provided in the authenticating_proxy mode.
                Deprecated, use authenticating_proxy instead.
            authentication_mode: |-
                - (Optional) Authentication mode of the cluster, possible values are rbac and authenticating_proxy.
                Defaults to rbac. Changing this parameter will create a new cluster resource.
            billing_mode: '- (Optional) Charging mode of the cluster, which is 0 (on demand). Changing this parameter will create a new cluster resource.'
            ca: '- X509 CA certificate configured in authenticating_proxy mode. The maximum size of the certificate is 1 MB.'
            cce.s1.medium: '- medium-scale single cluster (up to 200 nodes).'
            cce.s1.small: '- small-scale single cluster (up to 50 nodes).'
            cce.s2.large: '- large-scale HA cluster (up to 1000 nodes).'
            cce.s2.medium: '- medium-scale HA cluster (up to 200 nodes).'
            cce.s2.small: '- small-scale HA cluster (up to 50 nodes).'
            cce.s2.xlarge: '- ultra-large-scale, high availability cluster (<= 2,000 nodes).'
            cert: |-
                - Client certificate issued by the X509 CA certificate configured in authenticating_proxy mode.
                This certificate is used for authentication from kube-apiserver to the extended API server.
            certificate_clusters/certificate_authority_data: '- The certificate data.'
            certificate_clusters/name: '- The cluster name.'
            certificate_clusters/server: '- The server IP address.'
            certificate_users/client_certificate_data: '- The client certificate data.'
            certificate_users/client_key_data: '- The client key data.'
            certificate_users/name: '- The user name.'
            cluster_type: '- (Required) Cluster Type, possible values are VirtualMachine and BareMetal. Changing this parameter will create a new cluster resource.'
            cluster_version: |-
                - (Optional) For the cluster version, possible values are v1.27, v1.25, v1.23, v1.21.
                If this parameter is not set, the cluster of the latest version is created by default.
                Changing this parameter will create a new cluster resource. OTC-API
            container_network_cidr: '- (Optional) Container network segment. Changing this parameter will create a new cluster resource.'
            container_network_type: '- (Required) Container network type.'
            create: '- Default is 30 minutes.'
            delete: '- Default is 30 minutes.'
            delete_all_network: |-
                - (Optional) Specified whether to delete all associated network resources when deleting the CCE
                cluster. valid values are true, try and false. Default is false.
            delete_all_storage: |-
                - (Optional) Specified whether to delete all associated storage resources when deleting the CCE
                cluster. valid values are true, try and false. Default is false.
            delete_efs: |-
                - (Optional) Specified whether to unbind associated SFS Turbo file systems when deleting the CCE
                cluster. valid values are true, try and false. Default is false.
            delete_eni: |-
                - (Optional) Specified whether to delete ENI ports when deleting the CCE
                cluster. valid values are true, try and false. Default is false.
            delete_evs: |-
                - (Optional) Specified whether to delete associated EVS disks when deleting the CCE cluster.
                valid values are true, try and false. Default is false.
            delete_net: |-
                - (Optional) Specified whether to delete cluster Service/ingress-related resources, such as ELB when deleting the CCE
                cluster. valid values are true, try and false. Default is false.
            delete_obs: |-
                - (Optional) Specified whether to delete associated OBS buckets when deleting the CCE cluster.
                valid values are true, try and false. Default is false.
            delete_sfs: |-
                - (Optional) Specified whether to delete associated SFS file systems when deleting the CCE
                cluster. valid values are true, try and false. Default is false.
            description: '- (Optional) Cluster description.'
            eip: '- (Optional) EIP address of the cluster.'
            enable_volume_encryption: '- (Optional) System and data disks encryption of master nodes. Changing this parameter will create a new cluster resource.'
            eni_subnet_cidr: '- (Optional) Specifies the ENI network segment. Specified when creating a CCE Turbo cluster. Changing this parameter will create a new cluster resource.'
            eni_subnet_id: '-  - (Optional) Specifies the ENI subnet ID. Specified when creating a CCE Turbo cluster. Changing this parameter will create a new cluster resource.'
            extend_param: |-
                - (Optional) Extended parameter. Changing this parameter will create a new cluster resource.
                List of cluster extended params.
            external: '- The external network address.'
            external_otc: '- The endpoint of the cluster to be accessed through API Gateway.'
            flavor_id: '- (Required) Cluster specifications. Changing this parameter will create a new cluster resource.'
            highway_subnet_id: '- (Optional) The ID of the high speed network used to create bare metal nodes. Changing this parameter will create a new cluster resource.'
            id: '- ID of the cluster resource.'
            ignore_addons: '- (Optional) Skip all cluster addons operations.'
            ignore_certificate_clusters_data: '- (Optional) Skip sensitive cluster data.'
            ignore_certificate_users_data: '- (Optional) Skip sensitive user data.'
            installed_addons: '- List of installed addon IDs. Empty if ignore_addons is true.'
            internal: '- The internal network address.'
            iptables: |-
                : Traditional kube-proxy uses iptables rules to implement service load balancing.
                In this mode, too many iptables rules will be generated when many services are deployed.
                In addition, non-incremental updates will cause a latency and even obvious performance issues
                in the case of heavy service traffic.
            ipvs: |-
                : Optimized kube-proxy mode with higher throughput and faster speed.
                This mode supports incremental updates and can keep connections uninterrupted during service updates.
                It is suitable for large-sized clusters.
            kube_proxy_mode: '- Service forwarding mode. Two modes are available:'
            kubernetes_svc_ip_range: |-
                - (Optional) Service CIDR block, or the IP address range which the kubernetes
                clusterIp must fall within. This parameter is available only for clusters of v1.11.7 and later.
            labels: '- (Optional) Cluster tag, key/value pair format. Changing this parameter will create a new cluster resource.'
            multi_az: '- (Optional) Enable multiple AZs for the cluster, only when using HA flavors. Changing this parameter will create a new cluster resource.'
            name: '- (Required) Cluster name. Changing this parameter will create a new cluster resource.'
            no_addons: '- (Optional) Remove addons installed by the default after the cluster creation.'
            overlay_l2: '- An overlay_l2 network built for containers by using Open vSwitch(OVS)'
            private_key: |-
                - Private key of the client certificate issued by the X509 CA certificate configured in authenticating_proxy mode.
                This key is used for authentication from kube-apiserver to the extended API server.
            security_group_control: '- ID of the autogenerated security group for the CCE master port.'
            security_group_id: |-
                - (Optional) Default worker node security group ID of the cluster. If specified, the cluster will be bound to the target security group.
                Otherwise, the system will automatically create a default worker node security group for you.
                The default worker node security group needs to allow access from certain ports to ensure normal communications.
                Changing this parameter will create a new cluster resource.
            security_group_node: '- ID of the autogenerated security group for the CCE nodes.'
            status: '- Cluster status information.'
            subnet_id: '- (Required) The Network ID of the subnet used to create the node. Changing this parameter will create a new cluster resource.'
            underlay_ipvlan: '- An underlay_ipvlan network built for bare metal servers by using ipvlan.'
            vpc-router: '- An vpc-router network built for containers by using ipvlan and custom VPC routes.'
            vpc_id: '- (Required) The ID of the VPC used to create the node. Changing this parameter will create a new cluster resource.'
        importStatements:
            - terraform import opentelekomcloud_cce_cluster_v3.cluster_1 4779ab1c-7c1a-44b1-a02e-93dfc361b32d
    opentelekomcloud_cce_node_pool_v3:
        subCategory: Cloud Container Engine (CCE)
        description: Manages a CCE Cluster Node Pool resource within OpenTelekomCloud.
        name: opentelekomcloud_cce_node_pool_v3
        title: opentelekomcloud_cce_node_pool_v3
        examples:
            - name: node_pool_1
              manifest: |-
                {
                  "agency_name": "test-agency",
                  "availability_zone": "${var.availability_zone}",
                  "cluster_id": "${var.cluster_id}",
                  "data_volumes": [
                    {
                      "size": 100,
                      "volumetype": "SSD"
                    },
                    {
                      "extend_params": {
                        "useType": "docker"
                      },
                      "size": 100,
                      "volumetype": "SSD"
                    }
                  ],
                  "flavor": "s2.xlarge.2",
                  "initial_node_count": 2,
                  "key_pair": "${var.ssh_key}",
                  "max_node_count": 9,
                  "min_node_count": 2,
                  "name": "opentelekomcloud-cce-node-pool-test",
                  "os": "EulerOS 2.9",
                  "priority": 1,
                  "root_volume": [
                    {
                      "size": 40,
                      "volumetype": "SSD"
                    }
                  ],
                  "runtime": "containerd",
                  "scale_down_cooldown_time": 100,
                  "scale_enable": true
                }
              references:
                availability_zone: var.availability_zone
                cluster_id: var.cluster_id
                key_pair: var.ssh_key
            - name: node_pool
              manifest: |-
                {
                  "availability_zone": "random",
                  "cluster_id": "${var.cluster_id}",
                  "data_volumes": [
                    {
                      "size": 100,
                      "volumetype": "SSD"
                    }
                  ],
                  "docker_base_size": 32,
                  "flavor": "s2.large.2",
                  "initial_node_count": 1,
                  "key_pair": "${var.ssh_key}",
                  "max_pods": 16,
                  "name": "opentelekomcloud-cce-node-pool",
                  "os": "EulerOS 2.9",
                  "root_volume": [
                    {
                      "size": 40,
                      "volumetype": "SSD"
                    }
                  ],
                  "storage": "${jsonencode(\n    {\n      \"storageSelectors\" : [\n        {\n          \"name\" : \"cceUse\",\n          \"storageType\" : \"evs\",\n          \"matchLabels\" : {\n            \"size\" : \"100\",\n            \"volumeType\" : \"SSD\",\n            \"count\" : \"1\",\n            \"metadataEncrypted\" : \"1\",\n            \"metadataCmkid\" : var.kms_key_id\n          }\n        }\n      ],\n      \"storageGroups\" : [\n        {\n          \"name\" : \"vgpaas\",\n          \"selectorNames\" : [\n            \"cceUse\"\n          ],\n          \"cceManaged\" : true,\n          \"virtualSpaces\" : [\n            {\n              \"name\" : \"runtime\",\n              \"size\" : \"90%\"\n            },\n            {\n              \"name\" : \"kubernetes\",\n              \"size\" : \"10%\"\n            }\n          ]\n        }\n      ]\n  })}"
                }
              references:
                cluster_id: var.cluster_id
                key_pair: var.ssh_key
        argumentDocs:
            agency_name: '- (Optional, String, ForceNew) IAM agency name. Changing this parameter will create a new resource.'
            availability_zone: |-
                - (Required, ForceNew, String) Specify the name of the available partition (AZ). If zone is not
                specified than node_pool will be in randomly selected AZ. The default value is random. Changing
                this parameter will create a new resource.
            'billing_mode ': '- Billing mode of a node.'
            cluster_id: '- (Required, ForceNew, String) ID of the cluster. Changing this parameter will create a new resource.'
            create: '- Default is 30 minutes.'
            data_volumes: '- (Required, List, ForceNew) Represents the data disk to be created. Changing this parameter will create a new resource.'
            delete: '- Default is 30 minutes.'
            docker_base_size: |-
                - (Optional, Int, ForceNew) Available disk space of a single Docker container on the node using the device mapper.
                Changing this parameter will create a new node pool.
            docker_lvm_config_override: |-
                - (Optional, String, ForceNew) ConfigMap of the Docker data disk.
                Changing this parameter will create a new node.
            effect: '- (Optional, String) Available options are NoSchedule, PreferNoSchedule, and NoExecute.'
            extend_param: |-
                DEPRECATED - (Optional, String, ForceNew) Disk expansion parameters.
                Please use alternative parameter extend_params.
            extend_params: '- (Optional, Map, ForceNew) Disk expansion parameters. A list of strings which describes additional disk parameters.'
            flavor: '- (Required, ForceNew, String) Specifies the flavor id. Changing this parameter will create a new resource.'
            id: '- Specifies a resource ID in UUID format.'
            initial_node_count: '- (Required, Int) Initial number of expected nodes in the node pool.'
            k8s_tags: '- (Optional, Map) Tags of a Kubernetes node, key/value pair format.'
            key: '- (Required, String) A key must contain 1 to 63 characters starting with a letter or digit. Only letters, digits, hyphens (-), underscores (_), and periods (.) are allowed. A DNS subdomain name can be used as the prefix of a key.'
            key_pair: |-
                - (Optional, ForceNew, String) Key pair name when logging in to select the key pair mode.
                This parameter and password are alternative. Changing this parameter will create a new resource.
            kms_id: '- (Optional, String, ForceNew) The Encryption KMS ID of the system volume. By default, it tries to get from env by OS_KMS_ID.'
            max_node_count: '- (Optional, Int) Maximum number of nodes allowed if auto scaling is enabled.'
            max_pods: |-
                - (Optional, Int, ForceNew) The maximum number of instances a node is allowed to create.
                Changing this parameter will create a new node pool.
            min_node_count: '- (Optional, Int) Minimum number of nodes allowed if auto scaling is enabled.'
            name: '- (Required, String) Node Pool Name.'
            os: |-
                - (Optional, ForceNew, String) Node OS. Changing this parameter will create a new resource.
                Supported OS depends on kubernetes version of the cluster.
            password: |-
                - (Optional, ForceNew, String) Key pair name when logging in to select the key pair mode.
                This parameter and password are alternative. Changing this parameter will create a new resource.
            postinstall: |-
                - (Optional, String, ForceNew) Script required after installation. The input value can be a Base64 encoded string or not.
                Changing this parameter will create a new resource.
            preinstall: |-
                - (Optional, String, ForceNew) Script required before installation. The input value can be a Base64 encoded string or not.
                Changing this parameter will create a new resource.
            priority: '- (Optional, Int) Weight of a node pool. A node pool with a higher weight has a higher priority during scaling.'
            root_volume: '- (Required, List, ForceNew) It corresponds to the system disk related configuration. Changing this parameter will create a new resource.'
            runtime: |-
                - (Optional, String, ForceNew) Container runtime. Changing this parameter will create a new resource.
                Use with high-caution, may trigger resource recreation. Options are:
                docker - Docker
                containerd - Containerd
            scale_down_cooldown_time: '- (Optional, Int) Interval between two scaling operations, in minutes.'
            scale_enable: '- (Optional, Bool) Whether to enable auto scaling. If Autoscaler is enabled, install the autoscaler add-on to use the auto scaling feature.'
            security_group_ids: |-
                - (Optional, List, ForceNew) Specifies the list of custom security group IDs for the node pool.
                If specified, the nodes will be put in these security groups. When specifying a security group, do not modify
                the rules of the port on which CCE running depends.
            server_group_reference: '- (Optional, String, ForceNew) ECS group ID. If this parameter is specified, all nodes in the node pool will be created in this ECS group.'
            size: '- (Required, Int, ForceNew) Disk size in GB.'
            status: '- Node status information.'
            storage: |-
                - (Optional, String, ForceNew) Specifies the json string vary depending on CCE node pools storage options.
                -> Please refer to the documentation
                for actual fields.
            subnet_id: '- (Optional, String, ForceNew) The ID of the subnet to which the NIC belongs. Changing this parameter will create a new resource.'
            taints: '- (Optional, List) Taints to created nodes to configure anti-affinity.'
            update: '- Default is 30 minutes.'
            user_tags: '- (Optional, Map, ForceNew) Tag of a VM, key/value pair format. Changing this parameter will create a new resource.'
            v1.13: or later support EulerOS 2.5.
            v1.17: or later support EulerOS 2.5 and CentOS 7.7.
            v1.21: or later support EulerOS 2.5, EulerOS 2.9, and CentOS 7.7.
            v1.25: or later support EulerOS 2.5, EulerOS 2.9, CentOS 7.7 and Ubuntu 22.04.
            value: '- (Required, String) A value must start with a letter or digit and can contain a maximum of 63 characters, including letters, digits, hyphens (-), underscores (_), and periods (.).'
            volumetype: '- (Required, String, ForceNew) Disk type.'
        importStatements: []
    opentelekomcloud_cce_node_v3:
        subCategory: Cloud Container Engine (CCE)
        description: Manages a CCE Cluster Node resource within OpenTelekomCloud.
        name: opentelekomcloud_cce_node_v3
        title: opentelekomcloud_cce_node_v3
        examples:
            - name: node_1
              manifest: |-
                {
                  "agency_name": "test-agency",
                  "availability_zone": "${var.availability_zone}",
                  "bandwidth_size": 100,
                  "cluster_id": "${var.cluster_id}",
                  "data_volumes": [
                    {
                      "size": 100,
                      "volumetype": "SATA"
                    },
                    {
                      "extend_params": {
                        "useType": "docker"
                      },
                      "size": 100,
                      "volumetype": "SSD"
                    }
                  ],
                  "flavor_id": "s2.large.2",
                  "key_pair": "${var.ssh_key}",
                  "name": "node1",
                  "os": "EulerOS 2.9",
                  "root_volume": [
                    {
                      "size": 40,
                      "volumetype": "SATA"
                    }
                  ],
                  "runtime": "containerd"
                }
              references:
                availability_zone: var.availability_zone
                cluster_id: var.cluster_id
                key_pair: var.ssh_key
        argumentDocs:
            agency_name: '- (Optional) IAM agency name. Changing this parameter will create a new resource.'
            annotations: '- (Optional, ForceNew, Map) Node annotation, key/value pair format. Changing this parameter will create a new resource'
            availability_zone: '- (Required, ForceNew, String) specify the name of the available partition (AZ). Changing this parameter will create a new resource.'
            bandwidth_charge_mode: '- (Optional, String) Bandwidth billing type.'
            bandwidth_size: '- (Optional, Int) Bandwidth size.'
            billing_mode: '- (Optional, ForceNew, Int) Node''s billing mode: The value is 0 (on demand). Changing this parameter will create a new resource.'
            cluster_id: '- (Required, ForceNew, String) ID of the cluster. Changing this parameter will create a new resource.'
            create: '- Default is 10 minutes.'
            data_volumes: '- (Required, ForceNew, List) Represents the data disk to be created. Changing this parameter will create a new resource.'
            dedicated_host_id: '- (Optional, String, ForceNew) Specifies the ID of the DeH to which the node is scheduled.'
            delete: '- Default is 10 minutes.'
            diskType: ': disk type. Currently, only the evs, hdd, and ssd are supported.'
            docker_base_size: |-
                - (Optional, ForceNew, Int) Available disk space of a single Docker container on the node using the device mapper.
                Changing this parameter will create a new node.
            docker_lvm_config_override: |-
                - (Optional, ForceNew, String) ConfigMap of the Docker data disk.
                Changing this parameter will create a new node.
            dockerThinpool: ': Docker space size, for example, vgpaas/60%VG.'
            ecs_performance_type: '- (Optional, ForceNew, String) Classification of cloud server specifications. Changing this parameter will create a new cluster resource.'
            effect: '- (Optional, String) Available options are NoSchedule, PreferNoSchedule, and NoExecute.'
            eip_count: '- (Optional, Int) Number of elastic IPs to be dynamically created.'
            eip_ids: '- (Optional, List) List of existing elastic IP IDs.'
            extend_param: |-
                DEPRECATED - (Optional, ForceNew, String) Disk expansion parameters.
                Please use alternative parameter extend_params.
            extend_param_charging_mode: '- (Optional, ForceNew, Int) Node charging mode, 0 is on-demand charging. Changing this parameter will create a new cluster resource.'
            extend_params: '- (Optional, ForceNew, Map) Disk expansion parameters. A list of strings which describes additional disk parameters.'
            flavor_id: '- (Required, ForceNew, String) Specifies the flavor id. Changing this parameter will create a new resource.'
            iptype: '- (Optional, String) Elastic IP type.'
            k8s_tags: '- (Optional, ForceNew, Map) Tags of a Kubernetes node, key/value pair format.'
            key: '- (Required, String) A key must contain 1 to 63 characters starting with a letter or digit. Only letters, digits, hyphens (-), underscores (_), and periods (.) are allowed. A DNS subdomain name can be used as the prefix of a key.'
            key_pair: '- (Required, ForceNew, String) Key pair name when logging in to select the key pair mode. Changing this parameter will create a new resource.'
            kms_id: '- (Optional, ForceNew, String) The Encryption KMS ID of the system volume. By default, it tries to get from env by OS_KMS_ID.'
            kubernetesLV: ': kubelet space size, for example, vgpaas/20%VG.'
            labels: '- (Optional, ForceNew, Map) Node tag, key/value pair format. Changing this parameter will create a new resource.'
            lvType: ': type of a logic volume. Currently, the value can be linear or striped.'
            max_pods: '- (Optional, ForceNew, Int) The maximum number of instances a node is allowed to create. Changing this parameter will create a new node resource.'
            name: '- (Optional, String) Node Name.'
            order_id: |-
                - (Optional, ForceNew, String) Order ID, mandatory when the node payment type is the automatic payment package period type.
                Changing this parameter will create a new cluster resource.
            os: '- (Optional, ForceNew, String) Node OS. Changing this parameter will create a new resource.'
            postinstall: |-
                - (Optional, ForceNew, String) Script required after installation. The input value can be a Base64 encoded string or not.
                Changing this parameter will create a new resource.
            preinstall: |-
                - (Optional, ForceNew, String) Script required before installation. The input value can be a Base64 encoded string or not.
                Changing this parameter will create a new resource.
            private_ip: '- (Optional, ForceNew, String) Private IP of the CCE node. Changing this parameter will create a new resource.'
            product_id: '- (Optional, ForceNew, String) The Product ID. Changing this parameter will create a new cluster resource.'
            public_ip: '- Public IP of the CCE node.'
            public_key: '- (Optional, ForceNew, String) The Public key. Changing this parameter will create a new cluster resource.'
            root_volume: '- (Required, ForceNew, List) It corresponds to the system disk related configuration. Changing this parameter will create a new resource.'
            runtime: |-
                - (Optional, ForceNew, String) Container runtime. Changing this parameter will create a new resource.
                Use with high-caution, may trigger resource recreation. Options are:
                docker - Docker
                containerd - Containerd
            server_id: '- ID of the ECS where the node resides.'
            sharetype: '- (Optional, String) Bandwidth sharing type.'
            size: '- (Required, ForceNew, Int) Disk size in GB.'
            status: '- Node status information.'
            subnet_id: '- (Optional, ForceNew, String) The ID of the subnet to which the NIC belongs. Changing this parameter will create a new resource.'
            tags: '- (Optional, Map) The field is alternative to labels, key/value pair format.'
            taints: '- (Optional, ForceNew, List) Taints to created nodes to configure anti-affinity.'
            userLV: ': size of the user space, for example, vgpaas/20%VG.'
            userPath: ': mount path of the user space, for example, /home/wqt-test.'
            v1.13: or later support EulerOS 2.5.
            v1.17: or later support EulerOS 2.5 and CentOS 7.7.
            v1.21: or later support EulerOS 2.5, EulerOS 2.9, and CentOS 7.7.
            v1.25: or later support EulerOS 2.5, EulerOS 2.9, CentOS 7.7 and Ubuntu 22.04.
            value: '- (Required, String) A value must start with a letter or digit and can contain a maximum of 63 characters, including letters, digits, hyphens (-), underscores (_), and periods (.).'
            volumetype: '- (Required, ForceNew, String) Disk type.'
        importStatements: []
    opentelekomcloud_ces_alarmrule:
        subCategory: Cloud Eye (CES)
        description: Manages a v1 CES Alarm Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_ces_alarmrule
        title: opentelekomcloud_ces_alarmrule
        examples:
            - name: alarm_rule
              manifest: |-
                {
                  "alarm_actions": [
                    {
                      "notification_list": [
                        "${var.smn_topic_id}"
                      ],
                      "type": "notification"
                    }
                  ],
                  "alarm_name": "alarm_rule",
                  "condition": [
                    {
                      "comparison_operator": "\u003e",
                      "count": 1,
                      "filter": "average",
                      "period": 300,
                      "unit": "B/s",
                      "value": 6
                    }
                  ],
                  "metric": [
                    {
                      "dimensions": [
                        {
                          "name": "instance_id",
                          "value": "${var.server_id}"
                        }
                      ],
                      "metric_name": "network_outgoing_bytes_rate_inband",
                      "namespace": "SYS.ECS"
                    }
                  ]
                }
              references:
                alarm_actions.notification_list: var.smn_topic_id
                metric.dimensions.value: var.server_id
            - name: alarmrule_1
              manifest: |-
                {
                  "alarm_action_enabled": false,
                  "alarm_actions": [
                    {
                      "notification_list": [
                        "${var.smn_topic_id}"
                      ],
                      "type": "notification"
                    }
                  ],
                  "alarm_name": "alarm_rule1",
                  "alarm_type": "EVENT.SYS",
                  "condition": [
                    {
                      "alarm_frequency": 300,
                      "comparison_operator": "\u003e",
                      "count": 1,
                      "filter": "average",
                      "period": 300,
                      "unit": "B/s",
                      "value": 6
                    }
                  ],
                  "metric": [
                    {
                      "metric_name": "backupFailed",
                      "namespace": "SYS.CBR"
                    }
                  ]
                }
              references:
                alarm_actions.notification_list: var.smn_topic_id
        argumentDocs:
            alarm: ': An alarm is generated;'
            alarm_action_enabled: |-
                - (Optional) Specifies whether to enable the action
                to be triggered by an alarm. The default value is true.
            alarm_actions: |-
                - (Optional) Specifies the actions list triggered by an alarm. The
                structure is described below.
            alarm_actions.notification_list: |-
                - (Required) Specifies the topic urn list of the target
                notification objects. The maximum length is 5. The topic urn list can be
                obtained from simple message notification (SMN) and in the following format:
                urn:smn:([a-z]|[a-z]|[0-9]|\-){1,32}:([a-z]|[a-z]|[0-9]){32}:([a-z]|[a-z]|[0-9]|\-|\_){1,256}.
                If type is set to notification, the value of notification_list cannot be
                empty. If type is set to autoscaling, the value of notification_list must
                be [].
            alarm_actions.type: |-
                - (Optional) Specifies the type of action triggered by an alarm. The
                value can be notification or autoscaling.
            alarm_description: '- (Optional) Alarm description. The value can be a string of 0 to 256 characters.'
            alarm_enabled: |-
                - (Optional) Specifies whether to enable the alarm. The default
                value is true.
            alarm_level: |-
                - (Optional) Specifies the alarm severity. The value can be 1, 2, 3 or 4,
                which indicates critical, major, minor, and informational. The default value is 2.
            alarm_name: |-
                - (Required) Specifies the name of an alarm rule. The value can
                be a string of 1 to 128 characters that can consist of numbers, lowercase letters,
                uppercase letters, underscores (_), or hyphens (-).
            alarm_state: '- Specifies the alarm status. The value can be:'
            alarm_type: |-
                - (Optional) Specifies the alarm rule type.
                EVENT.SYS: The alarm rule is created for system events.
                EVENT.CUSTOM: The alarm rule is created for custom events.
            autoscaling: ': indicates that a scaling action will be triggered.'
            condition: |-
                - (Required) Specifies the alarm triggering condition. The structure
                is described below.
            condition.alarm_frequency: |-
                - (Optional) Specifies frequency for alarm triggering. If argument is not provided alarm will be triggered once.
                300: Cloud Eye triggers the alarm every 5 minutes.
                600: Cloud Eye triggers the alarm every 10 minutes.
                900: Cloud Eye triggers the alarm every 15 minutes.
                1800: Cloud Eye triggers the alarm every 30 minutes.
                3600: Cloud Eye triggers the alarm every hour.
                10800: Cloud Eye triggers the alarm every 3 hours.
                21600: Cloud Eye triggers the alarm every 6 hours.
                43200: Cloud Eye triggers the alarm every 12 hours.
                86400: Cloud Eye triggers the alarm every day.
            condition.comparison_operator: |-
                - (Required) Specifies the comparison condition of alarm
                thresholds. The value can be >, =, <, >=, or <=.
            condition.count: |-
                - (Required) Specifies the number of consecutive occurrence times.
                The value ranges from 1 to 5.
            condition.filter: |-
                - (Required) Specifies the data rollup methods. The value can be
                max, min, average, sum, and variance.
            condition.period: |-
                - (Required) Specifies the alarm checking period in seconds. The
                value can be 1, 300, 1200, 3600, 14400, and 86400.
            condition.unit: '- (Optional) Specifies the data unit.'
            condition.value: |-
                - (Required) Specifies the alarm threshold. The value ranges from
                0 to Number.MAX_VALUE of 1.7976931348623157e+108.
            dimensions.name: |-
                - (Required) Specifies the dimension name. The value can be a string
                of 1 to 32 characters that must start with a letter and can consists of uppercase
                letters, lowercase letters, numbers, underscores (_), or hyphens (-).
            dimensions.value: |-
                - (Required) Specifies the dimension value. The value can be a string
                of 1 to 64 characters that must start with a letter or a number and can consists
                of uppercase letters, lowercase letters, numbers, underscores (_), or hyphens (-).
            id: '- Specifies the alarm rule ID.'
            insufficient_data: ': The required data is insufficient;'
            metric: '- (Required) Specifies the alarm metrics. The structure is described below.'
            metric.dimensions: |-
                - (Optional) Specifies the list of metric dimensions.
                If CES alarm_type is set to EVENT.SYS leaving this argument empty will enable monitoring for all service instances.
                Otherwise, argument is required. Currently, the maximum length of the dimension list that are supported is 3.
                The structure is described below.
            metric.metric_name: |-
                - (Required) Specifies the metric name. The value can be a string
                of 1 to 64 characters that must start with a letter and can consists of uppercase
                letters, lowercase letters, numbers, underscores (_) or slashes (/).
                Available metrics.
            metric.namespace: |-
                - (Required) Specifies the namespace in service.item format. service.item
                can be a string of 3 to 32 characters that must start with a letter and can
                consists of uppercase letters, lowercase letters, numbers, or underscores (_).
            notification: ': indicates that a notification will be sent to the user.'
            ok: ': The alarm status is normal;'
            ok_actions: |-
                - (Optional) Specifies the actions list triggered by the clearing of
                an alarm. The structure is described below.
            ok_actions.notification_list: |-
                - (Optional) Indicates the list of objects to be notified
                if the alarm status changes. The maximum length is 5.
            ok_actions.type: |-
                - (Optional) specifies the type of action triggered by an alarm. the
                value is notification.
            update_time: |-
                - Specifies the time when the alarm status changed. The value
                is a UNIX timestamp and the unit is ms.
        importStatements: []
    opentelekomcloud_compute_bms_server_v2:
        subCategory: Bare Metal Server (BMS)
        description: Manages a BMS Server resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_bms_server_v2
        title: opentelekomcloud_compute_bms_server_v2
        examples:
            - name: basic
              manifest: |-
                {
                  "availability_zone": "${var.availability_zone}",
                  "flavor_id": "${var.flavor_id}",
                  "image_id": "${var.image_id}",
                  "key_pair": "${var.keypair_name}",
                  "metadata": {
                    "this": "that"
                  },
                  "name": "basic",
                  "network": [
                    {
                      "uuid": "${var.network_id}"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                availability_zone: var.availability_zone
                flavor_id: var.flavor_id
                image_id: var.image_id
                key_pair: var.keypair_name
                network.uuid: var.network_id
            - name: basic
              manifest: |-
                {
                  "availability_zone": "${var.availability_zone}",
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "device_name": "/dev/sda",
                      "source_type": "image",
                      "uuid": "${var.image_id}",
                      "volume_size": 100,
                      "volume_type": "SATA"
                    }
                  ],
                  "flavor_id": "${var.flavor_id}",
                  "key_pair": "${var.keypair_name}",
                  "metadata": {
                    "this": "that"
                  },
                  "name": "basic",
                  "network": [
                    {
                      "uuid": "${var.network_id}"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                availability_zone: var.availability_zone
                block_device.uuid: var.image_id
                flavor_id: var.flavor_id
                key_pair: var.keypair_name
                network.uuid: var.network_id
        argumentDocs:
            admin_pass: |-
                - (Optional) The administrative password to assign to the BMS server.
                Changing this changes the root password on the existing server.
            availability_zone: |-
                - (Required) The availability zone in which to create
                the BMS server.
            config_drive: '- Whether to use the config_drive feature to configure the instance.'
            flavor_id: |-
                - (Optional; Required if flavor_name is empty) The flavor ID of
                the desired flavor for the BMS server. Changing this resizes the existing BMS server.
            flavor_name: |-
                - (Optional; Required if flavor_id is empty) The name of the
                desired flavor for the BMS server. Changing this resizes the existing BMS server.
            host_status: '- The nova-compute status: UP, UNKNOWN, DOWN, MAINTENANCE and Null.'
            id: '- The id of the BMS server.'
            image_id: '- (Optional; Required if image_name is empty.) Changing this creates a new bms server.'
            image_name: |-
                - (Optional; Required if image_id is empty.) The name of the
                desired image for the bms server. Changing this creates a new BMS server.
            kernel_id: '- The UUID of the kernel image when the AMI image is used.'
            key_pair: |-
                - (Optional) The name of a key pair to put on the BMS server. The key
                pair must already be created and associated with the tenant's account.
                Changing this creates a new BMS server.
            metadata: |-
                - (Optional) Metadata key/value pairs to make available from
                within the instance. Changing this updates the existing BMS server metadata.
            name: '- (Required) The name of the BMS.'
            network: |-
                - (Optional) An array of one or more networks to attach to the
                BMS instance. Changing this creates a new BMS server.
            network.access_network: |-
                - (Optional) Specifies if this network should be used for
                provisioning access. Accepts true or false. Defaults to false.
            network.fixed_ip_v4: |-
                - (Optional) Specifies a fixed IPv4 address to be used on this
                network. Changing this creates a new BMS server.
            network.fixed_ip_v6: |-
                - (Optional) Specifies a fixed IPv6 address to be used on this
                network. Changing this creates a new BMS server.
            network.name: |-
                - (Required unless uuid or port is provided) The human-readable
                name of the network. Changing this creates a new BMS server.
            network.port: |-
                - (Required unless uuid or name is provided) The port UUID of a
                network to attach to the BMS server. Changing this creates a new server.
            network.uuid: |-
                - (Required unless port  or name is provided) The network UUID to
                attach to the BMS server. Changing this creates a new BMS server.
            security_groups: |-
                - (Optional) An array of one or more security group names
                to associate with the BMS server. Changing this results in adding/removing
                security groups from the existing BMS server.
            stop_before_destroy: |-
                - (Optional) Whether to try stop instance gracefully
                before destroying it, thus giving chance for guest OS daemons to stop correctly.
                If instance doesn't stop within timeout, it will be destroyed anyway.
            tags: '- (Optional) Tags key/value pairs to associate with the instance.'
            user_data: |-
                - (Optional) The user data to provide when launching the instance.
                Changing this creates a new BMS server.
            user_id: '- The ID of the user to which the BMS belongs.'
        importStatements: []
    opentelekomcloud_compute_bms_tags_v2:
        subCategory: Bare Metal Server (BMS)
        description: Manages a BMS Tags resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_bms_tags_v2
        title: opentelekomcloud_compute_bms_tags_v2
        examples:
            - name: add_tags
              manifest: |-
                {
                  "server_id": "${var.bms_id}",
                  "tags": [
                    "tags_type_baremetal"
                  ]
                }
              references:
                server_id: var.bms_id
        argumentDocs:
            server_id: '- (Required) The unique id of bare metal server.'
            tags: '- (Required) The tags of a BMS. Changing this parameter creates a new resource.'
        importStatements: []
    opentelekomcloud_compute_floatingip_associate_v2:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages an EIP Associate resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_floatingip_associate_v2
        title: opentelekomcloud_compute_floatingip_associate_v2
        examples:
            - name: fip_1
              manifest: |-
                {
                  "floating_ip": "${opentelekomcloud_networking_floatingip_v2.fip_1.address}",
                  "instance_id": "${opentelekomcloud_compute_instance_v2.instance_1.id}"
                }
              references:
                floating_ip: opentelekomcloud_networking_floatingip_v2.fip_1.address
                instance_id: opentelekomcloud_compute_instance_v2.instance_1.id
              dependencies:
                opentelekomcloud_compute_instance_v2.instance_1: |-
                    {
                      "flavor_id": 3,
                      "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                      "key_pair": "my_key_pair_name",
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                opentelekomcloud_networking_floatingip_v2.fip_1: |-
                    {
                      "pool": "admin_external_net"
                    }
            - name: fip_1
              manifest: |-
                {
                  "fixed_ip": "${opentelekomcloud_compute_instance_v2.instance_1.network.1.fixed_ip_v4}",
                  "floating_ip": "${opentelekomcloud_networking_floatingip_v2.fip_1.address}",
                  "instance_id": "${opentelekomcloud_compute_instance_v2.instance_1.id}"
                }
              references:
                fixed_ip: opentelekomcloud_compute_instance_v2.instance_1.network.1.fixed_ip_v4
                floating_ip: opentelekomcloud_networking_floatingip_v2.fip_1.address
                instance_id: opentelekomcloud_compute_instance_v2.instance_1.id
              dependencies:
                opentelekomcloud_compute_instance_v2.instance_1: |-
                    {
                      "flavor_id": 3,
                      "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                      "key_pair": "my_key_pair_name",
                      "name": "instance_1",
                      "network": [
                        {
                          "name": "my_network"
                        },
                        {
                          "name": "default"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                opentelekomcloud_networking_floatingip_v2.fip_1: |-
                    {
                      "pool": "admin_external_net"
                    }
        argumentDocs:
            fixed_ip: '- (Optional) The specific IP address to direct traffic to.'
            floating_ip: '- (Required) The floating IP to associate.'
            instance_id: '- (Required) The instance to associte the floating IP with.'
        importStatements: []
    opentelekomcloud_compute_floatingip_v2:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages an EIP resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_floatingip_v2
        title: opentelekomcloud_compute_floatingip_v2
        examples:
            - name: floatip_1
              manifest: '{}'
        argumentDocs:
            address: '- The actual floating IP address itself.'
            fixed_ip: '- The fixed IP address corresponding to the floating IP.'
            instance_id: '- UUID of the compute instance associated with the floating IP.'
            pool: |-
                - (Optional) The name of the pool from which to obtain the floating
                IP. Default value is admin_external_net. Changing this creates a new floating IP.
        importStatements: []
    opentelekomcloud_compute_instance_v2:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages an ECS Instance resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_instance_v2
        title: opentelekomcloud_compute_instance_v2
        examples:
            - name: basic
              manifest: |-
                {
                  "flavor_id": "s2.large.4",
                  "image_id": "${var.image_id}",
                  "key_pair": "my_key_pair_name",
                  "metadata": {
                    "this": "that"
                  },
                  "name": "basic",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ],
                  "tags": {
                    "muh": "kuh"
                  }
                }
              references:
                image_id: var.image_id
            - name: myinstance
              manifest: |-
                {
                  "flavor_id": "s2.large.4",
                  "image_id": "${var.image_id}",
                  "key_pair": "my_key_pair_name",
                  "name": "myinstance",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                image_id: var.image_id
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.myvol: |-
                    {
                      "name": "myvol",
                      "size": 4
                    }
                opentelekomcloud_compute_volume_attach_v2.attached: |-
                    {
                      "instance_id": "${opentelekomcloud_compute_instance_v2.myinstance.id}",
                      "volume_id": "${opentelekomcloud_blockstorage_volume_v2.myvol.id}"
                    }
            - name: boot-from-volume
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "${var.image_id}",
                      "volume_size": 5,
                      "volume_type": "SSD"
                    }
                  ],
                  "flavor_id": "s2.large.4",
                  "key_pair": "my_key_pair_name",
                  "name": "boot-from-volume",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                block_device.uuid: var.image_id
            - name: boot-from-volume
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "volume",
                      "uuid": "${opentelekomcloud_blockstorage_volume_v2.myvol.id}"
                    }
                  ],
                  "flavor_id": "s2.large.4",
                  "key_pair": "my_key_pair_name",
                  "name": "bootfromvolume",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                block_device.uuid: opentelekomcloud_blockstorage_volume_v2.myvol.id
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.myvol: |-
                    {
                      "image_id": "${var.image_id}",
                      "name": "myvol",
                      "size": 5
                    }
            - name: instance_1
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "${var.data_image_id}"
                    },
                    {
                      "boot_index": 1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "blank",
                      "volume_size": 1
                    }
                  ],
                  "flavor_id": "s2.large.4",
                  "image_id": "${var.image_id}",
                  "key_pair": "my_key_pair_name",
                  "name": "instance_1",
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                block_device.uuid: var.data_image_id
                image_id: var.image_id
            - name: instance_1
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "${var.data_image_id}"
                    },
                    {
                      "boot_index": 1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "volume",
                      "uuid": "${opentelekomcloud_blockstorage_volume_v2.volume_1.id}"
                    }
                  ],
                  "flavor_id": "s2.large.4",
                  "image_id": "${var.image_id}",
                  "key_pair": "my_key_pair_name",
                  "name": "instance_1",
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                block_device.uuid: opentelekomcloud_blockstorage_volume_v2.volume_1.id
                image_id: var.image_id
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.volume_1: |-
                    {
                      "name": "volume_1",
                      "size": 1
                    }
            - name: multi-net
              manifest: |-
                {
                  "flavor_id": "s2.large.4",
                  "image_id": "${var.image_id}",
                  "key_pair": "my_key_pair_name",
                  "name": "multi-net",
                  "network": [
                    {
                      "name": "my_first_network"
                    },
                    {
                      "uuid": "${data.opentelekomcloud_vpc_subnet_v1.second_subnet.network_id}"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                image_id: var.image_id
                network.uuid: data.opentelekomcloud_vpc_subnet_v1.second_subnet.network_id
              dependencies:
                opentelekomcloud_compute_floatingip_associate_v2.myip: |-
                    {
                      "fixed_ip": "${opentelekomcloud_compute_instance_v2.multi-net.network.1.fixed_ip_v4}",
                      "floating_ip": "${opentelekomcloud_networking_floatingip_v2.myip.address}",
                      "instance_id": "${opentelekomcloud_compute_instance_v2.multi-net.id}"
                    }
                opentelekomcloud_networking_floatingip_v2.myip: |-
                    {
                      "pool": "admin_external_net"
                    }
            - name: multi-eph
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "${var.data_image_id}"
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "blank",
                      "volume_size": 1
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "blank",
                      "volume_size": 1
                    }
                  ],
                  "flavor_id": "s2.large.4",
                  "image_id": "${var.image_id}",
                  "key_pair": "my_key_pair_name",
                  "name": "multi_eph",
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                block_device.uuid: var.data_image_id
                image_id: var.image_id
            - name: instance_1
              manifest: |-
                {
                  "flavor_id": "s2.large.4",
                  "image_id": "${var.image_id}",
                  "key_pair": "my_key_pair_name",
                  "name": "basic",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ],
                  "user_data": "#cloud-config\nhostname: instance_1.example.com\nfqdn: instance_1.example.com"
                }
              references:
                image_id: var.image_id
            - name: foo
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "${var.image_id}"
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "blank",
                      "volume_size": 1
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "blank",
                      "volume_size": 1
                    }
                  ],
                  "name": "terraform-test"
                }
              references:
                block_device.uuid: var.image_id
            - name: instance_1
              manifest: |-
                {
                  "connection": [
                    {
                      "host": "${opentelekomcloud_networking_port_v2.port_1.fixed_ip.0.ip_address}",
                      "private_key": "~/path/to/key",
                      "user": "root"
                    }
                  ],
                  "name": "instance_1",
                  "network": [
                    {
                      "port": "${opentelekomcloud_networking_port_v2.port_1.id}"
                    }
                  ],
                  "provisioner": {
                    "remote-exec": [
                      {
                        "inline": [
                          "echo terraform executed \u003e /tmp/foo"
                        ]
                      }
                    ]
                  }
                }
              references:
                connection.host: opentelekomcloud_networking_port_v2.port_1.fixed_ip.0.ip_address
                network.port: opentelekomcloud_networking_port_v2.port_1.id
              dependencies:
                opentelekomcloud_networking_port_v2.port_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "port_1",
                      "network_id": "0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d",
                      "security_group_ids": [
                        "2f02d20a-8dca-49b7-b26f-b6ce9fddaf4f",
                        "ca1e5ed7-dae8-4605-987b-fadaeeb30461"
                      ]
                    }
            - name: basic_instance
              manifest: |-
                {
                  "flavor_id": "${var.flavor_id}",
                  "image_id": "${var.image_id}",
                  "key_pair": "${var.key_pair}",
                  "name": "basic",
                  "network": [
                    {
                      "name": "${var.network_name}"
                    }
                  ]
                }
              references:
                flavor_id: var.flavor_id
                image_id: var.image_id
                key_pair: var.key_pair
                network.name: var.network_name
            - name: boot-from-volume
              manifest: |-
                {
                  "flavor_id": "${var.flavor_id}",
                  "image_id": "${var.image_id}",
                  "key_pair": "${var.key_pair}",
                  "name": "boot-from-volume",
                  "network": [
                    {
                      "name": "${var.network_1_name}"
                    },
                    {
                      "name": "${var.network_2_name}"
                    },
                    {
                      "fixed_ip_v4": "${var.fixed_ip_v4}",
                      "name": "${var.network_1_name}"
                    }
                  ]
                }
              references:
                flavor_id: var.flavor_id
                image_id: var.image_id
                key_pair: var.key_pair
                network.fixed_ip_v4: var.fixed_ip_v4
                network.name: var.network_1_name
            - name: instance_2
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "${var.image_id}"
                    }
                  ],
                  "flavor_id": "${var.flavor_id}",
                  "image_id": "${var.image_id}",
                  "key_pair": "${var.key_pair}",
                  "name": "instance_2",
                  "network": [
                    {
                      "name": "${var.network_name}"
                    }
                  ]
                }
              references:
                block_device.uuid: var.image_id
                flavor_id: var.flavor_id
                image_id: var.image_id
                key_pair: var.key_pair
                network.name: var.network_name
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.volume_1: |-
                    {
                      "name": "${var.volume_name}",
                      "size": 1
                    }
                opentelekomcloud_compute_volume_attach_v2.va_1: |-
                    {
                      "instance_id": "${opentelekomcloud_compute_instance_v2.instance_2.id}",
                      "volume_id": "${opentelekomcloud_blockstorage_volume_v2.volume_1.id}"
                    }
        argumentDocs:
            access_ip_v4: '- The first detected Fixed IPv4 address or the Floating IP.'
            access_ip_v6: '- The first detected Fixed IPv6 address.'
            admin_pass: |-
                - (Optional) The administrative password to assign to the server. Changing this changes the root password
                on the existing server.
            all_metadata: '- Contains all instance metadata, even metadata not set by Terraform.'
            auto_recovery: '- (Optional) Configures or deletes automatic recovery of an instance. Defaults to true.'
            availability_zone: |-
                - (Optional) The availability zone in which to create the server. Changing this creates a new
                server.
            block_device: |-
                - (Optional) Configuration of block devices. The block_device structure is documented below. Changing
                this creates a new server. You can specify multiple block devices which will create an instance with multiple disks.
                This configuration is very flexible, so please see the
                following reference
                for more information.
            block_device.boot_index: '- (Optional) The boot index of the volume. It defaults to 0. Changing this creates a new server.'
            block_device.delete_on_termination: |-
                - (Optional) Delete the volume / block device upon termination of the instance. Defaults to
                false. Changing this creates a new server.
            block_device.destination_type: |-
                - (Optional) The type that gets created. Currently only support "volume". Changing this creates a
                new server.
            block_device.source_type: |-
                - (Required) The source type of the device. Must be one of
                "blank", "image", "volume", or "snapshot". Changing this creates a new server.
            block_device.uuid: |-
                - (Required unless source_type is set to "blank" ) The UUID of the image, volume, or snapshot. Changing
                this creates a new server.
            block_device.volume_size: |-
                - The size of the volume to create (in gigabytes). Required in the following combinations: source=image
                and destination=volume, and source=blank and destination=volume. Changing this creates a new server.
            block_device.volume_type: |-
                - (Optional) Currently, the value can be SSD (ultra-I/O disk type),
                SAS (high I/O disk type), or SATA (common I/O disk type)
                OTC-API
            config_drive: |-
                - (Optional) Whether to use the config_drive feature to configure the instance. Changing this creates a
                new server.
            connection: 'information:'
            description: '- (Optional) Server description.'
            encrypted_password: |-
                - The encrypted password of the server. This is only available if the server is a Windows server.
                If privateKey == nil the encrypted password is returned and can be decrypted with:
                echo '' | base64 -D | openssl rsautl -decrypt -inkey <private_key>
            flavor_id: |-
                - (Optional; Required if flavor_name is empty) The flavor ID of the desired flavor for the server.
                Changing this resizes the existing server.
            flavor_name: |-
                - (Optional; Required if flavor_id is empty) The name of the desired flavor for the server. Changing
                this resizes the existing server.
            force_delete: |-
                - (Optional) Whether to force the OpenTelekomCloud instance to be forcefully deleted. This is useful
                for environments that have reclaim/soft deletion enabled.
            image_id: |-
                - (Optional; Required if image_name is empty and not booting from a volume. Do not specify if booting
                from a volume.) The image ID of the desired image for the server. Changing this creates a new server.
            image_name: |-
                - (Optional; Required if image_id is empty and not booting from a volume. Do not specify if booting
                from a volume.) The name of the desired image for the server. Changing this creates a new server.
            key_pair: |-
                - (Optional) The name of a key pair to put on the server. The key pair must already be created and
                associated with the tenant's account. Changing this creates a new server.
            metadata: |-
                - (Optional) Metadata key/value pairs to make available from within the instance. Changing this updates the
                existing server metadata.
            name: '- (Required) A unique name for the resource.'
            network: |-
                - (Optional) An array of one or more networks to attach to the instance. Required when there are multiple
                networks defined for the tenant. The network object structure is documented below. Changing this creates a new server.
            network.access_network: |-
                - (Optional) Specifies if this network should be used for provisioning access. Accepts true or false.
                Defaults to false.
            network.fixed_ip_v4: |-
                - (Optional) Specifies a fixed IPv4 address to be used on this network. Changing this creates a new
                server.
            network.fixed_ip_v6: |-
                - (Optional) Specifies a fixed IPv6 address to be used on this network. Changing this creates a new
                server.
            network.name: |-
                - (Required unless uuid or port is provided) The human-readable name of the network. Changing this creates
                a new server.
            network.port: |-
                - (Required unless uuid or name is provided) The port UUID of a network to attach to the server. Changing
                this creates a new server.
            network.uuid: |-
                - (Required unless port  or name is provided) The network UUID to attach to the server. Changing this
                creates a new server.
            network/fixed_ip_v4: '- The Fixed IPv4 address of the Instance on that network.'
            network/fixed_ip_v6: '- The Fixed IPv6 address of the Instance on that network.'
            network/mac: '- The MAC address of the NIC on that network.'
            network/name: '- See Argument Reference above.'
            network/port: '- See Argument Reference above.'
            network/uuid: '- See Argument Reference above.'
            password: |-
                - The password of the server. This is only available if the server is a Windows server.
                If privateKey != nil the password is decrypted with the private key.
            power_state: '- (Optional) Provide the VM state. Only active and shutoff are supported values.'
            scheduler_hints: |-
                - (Optional) Provide the Nova scheduler with hints on how the instance should be launched. The
                available hints are described below.
            scheduler_hints.build_near_host_ip: |-
                - (Optional) An IP Address in CIDR form. The instance will be placed on a compute node that is in
                the same subnet.
            scheduler_hints.deh_id: '- (Optional) The ID of DeH. This parameter takes effect only when the value of tenancy is dedicated.'
            scheduler_hints.different_host: |-
                - (Optional) A list of instance UUIDs. The instance will be scheduled on a different host than all
                other instances.
            scheduler_hints.group: '- (Optional) A UUID of a Server Group. The instance will be placed into that group.'
            scheduler_hints.query: '- (Optional) A conditional query that a compute node must pass in order to host an instance.'
            scheduler_hints.same_host: '- (Optional) A list of instance UUIDs. The instance will be scheduled on the same host of those specified.'
            scheduler_hints.target_cell: '- (Optional) The name of a cell to host the instance.'
            scheduler_hints.tenancy: |-
                - (Optional) The tenancy specifies whether the ECS is to be created on a Dedicated Host
                (DeH) or in a shared pool.
            security_groups: |-
                - (Optional) An array of one or more security group names to associate with the server. Changing
                this results in adding/removing security groups from the existing server.
            ssh_private_key_path: |-
                - (Optional) The path to the private key to use for SSH access. Required only if you want to
                get the password from the windows instance.
            stop_before_destroy: |-
                - (Optional) Whether to try stop instance gracefully before destroying it, thus giving chance
                for guest OS daemons to stop correctly. If instance doesn't stop within a timeout, it will be destroyed anyway.
            tags: '-  (Optional) Tags key/value pairs to associate with the instance.'
            user_data: '- (Optional) The user data to provide when launching the instance. Changing this creates a new server.'
            volume_attached/id: '- The volume id on that attachment.'
        importStatements: []
    opentelekomcloud_compute_keypair_v2:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages an ECS Key Management resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_keypair_v2
        title: opentelekomcloud_compute_keypair_v2
        examples:
            - name: import-keypair
              manifest: |-
                {
                  "name": "imported-keypair",
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAjpC1hwiOCCmKEWxJ4qzTTsJbKzndLotBCz5PcwtUnflmU+gHJtWMZKpuEGVi29h0A/+ydKek1O18k10Ff+4tyFjiHDQAnOfgWf7+b1yK+qDip3X1C0UPMbwHlTfSGWLGZqd9LvEFx9k3h/M+VtMvwR1lJ9LUyTAImnNjWG7TaIPmui30HvM2UiFEmqkr4ijq45MyX2+fLIePLRIF61p4whjHAQYufqyno3BS48icQb4p6iVEZPo4AE2o9oIyQvj2mx4dk5Y8CgSETOZTYDOR3rU2fZTRDRgPJDH9FWvQjF5tA0p3d9CoWWd2s6GKKbfoUIi8R/Db1BSPJwkqB"
                }
            - name: create-keypair
              manifest: |-
                {
                  "name": "new-keypair"
                }
        argumentDocs:
            name: '- (Required) A unique name for the keypair. Changing this creates a new keypair.'
            private_key: '- The generated private key when no public key is specified.'
            public_key: |-
                - (Optional) A pregenerated OpenSSH-formatted public key.
                Changing this creates a new keypair. If a public key is not specified, then
                a public/private key pair will be automatically generated. If a pair is
                created, then destroying this resource means you will lose access to that
                keypair forever.
            shared: '- Indicates that keypair is shared (global) and not managed by Terraform.'
            value_specs: '- (Optional) Map of additional options.'
        importStatements:
            - terraform import opentelekomcloud_compute_keypair_v2.my-keypair test-keypair
    opentelekomcloud_compute_secgroup_v2:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages an ECS Security Group Management resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_secgroup_v2
        title: opentelekomcloud_compute_secgroup_v2
        examples:
            - name: secgroup_1
              manifest: |-
                {
                  "description": "my security group",
                  "name": "my_secgroup",
                  "rule": [
                    {
                      "cidr": "0.0.0.0/0",
                      "from_port": 22,
                      "ip_protocol": "tcp",
                      "to_port": 22
                    },
                    {
                      "cidr": "0.0.0.0/0",
                      "from_port": 80,
                      "ip_protocol": "tcp",
                      "to_port": 80
                    }
                  ]
                }
        argumentDocs:
            description: |-
                - (Required) A description for the security group. Changing this
                updates the description of an existing security group.
            name: |-
                - (Required) A unique name for the security group. Changing this
                updates the name of an existing security group.
            rule: |-
                - (Optional) A rule describing how the security group operates. The
                rule object structure is documented below. Changing this updates the
                security group rules. As shown in the example above, multiple rule blocks
                may be used.
            rule.cidr: |-
                - (Optional) Required if from_group_id or self is empty. The IP range
                that will be the source of network traffic to the security group. Use 0.0.0.0/0
                to allow all IP addresses. Changing this creates a new security group rule. Cannot
                be combined with from_group_id or self.
            rule.from_group_id: |-
                - (Optional) Required if cidr or self is empty. The ID of a
                group from which to forward traffic to the parent group. Changing this creates a
                new security group rule. Cannot be combined with cidr or self.
            rule.from_port: |-
                - (Required) An integer representing the lower bound of the port
                range to open. Changing this creates a new security group rule.
            rule.ip_protocol: |-
                - (Required) The protocol type that will be allowed. Changing
                this creates a new security group rule.
            rule.self: |-
                - (Optional) Required if cidr and from_group_id is empty. If true,
                the security group itself will be added as a source to this ingress rule. Cannot
                be combined with cidr or from_group_id.
            rule.to_port: |-
                - (Required) An integer representing the upper bound of the port
                range to open. Changing this creates a new security group rule.
        importStatements: []
    opentelekomcloud_compute_servergroup_v2:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages an ECS Server Group Management resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_servergroup_v2
        title: opentelekomcloud_compute_servergroup_v2
        examples:
            - name: test-sg
              manifest: |-
                {
                  "name": "my-sg",
                  "policies": [
                    "anti-affinity"
                  ]
                }
        argumentDocs:
            anti-affinity: |-
                - All instances/servers launched in this group will be
                hosted on different compute nodes.
            id: '-  ID of the server group.'
            members: '- The instances that are part of this server group.'
            name: |-
                - (Required) A unique name for the server group. Changing this creates
                a new server group.
            policies: |-
                - (Required) The set of policies for the server group. Only two
                two policies are available right now, and both are mutually exclusive. See
                the Policies section for more information. Changing this creates a new
                server group.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_compute_volume_attach_v2:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages an ECS Disk Management resource within OpenTelekomCloud.
        name: opentelekomcloud_compute_volume_attach_v2
        title: opentelekomcloud_compute_volume_attach_v2
        examples:
            - name: va_1
              manifest: |-
                {
                  "instance_id": "${opentelekomcloud_compute_instance_v2.instance_1.id}",
                  "volume_id": "${opentelekomcloud_blockstorage_volume_v2.volume_1.id}"
                }
              references:
                instance_id: opentelekomcloud_compute_instance_v2.instance_1.id
                volume_id: opentelekomcloud_blockstorage_volume_v2.volume_1.id
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.volume_1: |-
                    {
                      "name": "volume_1",
                      "size": 1
                    }
                opentelekomcloud_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
            - name: attachments
              manifest: |-
                {
                  "count": 2,
                  "instance_id": "${opentelekomcloud_compute_instance_v2.instance_1.id}",
                  "volume_id": "${opentelekomcloud_blockstorage_volume_v2.volumes[count.index].id}"
                }
              references:
                instance_id: opentelekomcloud_compute_instance_v2.instance_1.id
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.volumes: |-
                    {
                      "count": 2,
                      "name": "${format(\"vol-%02d\", count.index + 1)}",
                      "size": 1
                    }
                opentelekomcloud_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
        argumentDocs:
            device: '- (Optional) The device of the volume attachment (ex: /dev/vdc).'
            instance_id: '- (Required) The ID of the Instance to attach the Volume to.'
            volume_id: '- (Required) The ID of the Volume to attach to an Instance.'
        importStatements: []
    opentelekomcloud_csbs_backup_policy_v1:
        subCategory: Cloud Server Backup Service (CSBS)
        description: Manages a CSBS Backup Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_csbs_backup_policy_v1
        title: opentelekomcloud_csbs_backup_policy_v1
        examples:
            - name: backup_policy_v1
              manifest: |-
                {
                  "name": "${var.name}",
                  "resource": [
                    {
                      "id": "${var.id}",
                      "name": "${var.resource_name}",
                      "type": "OS::Nova::Server"
                    }
                  ],
                  "scheduled_operation": [
                    {
                      "enabled": true,
                      "operation_type": "backup",
                      "trigger_pattern": "BEGIN:VCALENDAR\r\nBEGIN:VEVENT\r\nRRULE:FREQ=WEEKLY;BYDAY=TH;BYHOUR=12;BYMINUTE=27\r\nEND:VEVENT\r\nEND:VCALENDAR\r\n"
                    }
                  ]
                }
              references:
                name: var.name
                resource.id: var.id
                resource.name: var.resource_name
        argumentDocs:
            common: '- (Optional) General backup policy parameters, which are blank by default.'
            created_at: '- Backup creation time.'
            description: '- (Optional) Backup policy description. The value consists of 0 to 255 characters and must not contain a greater-than sign (>) or less-than sign (<).'
            id: '- Backup Policy ID.'
            name: '- (Required) Specifies the name of backup policy. The value consists of 1 to 255 characters and can contain only letters, digits, underscores (_), and hyphens (-).'
            provider_id: '- (Required) Specifies backup provider ID. Default value is fc4d5750-22e7-4798-8a46-f48f62c4c1da'
            resource.id: '- (Required) Specifies the ID of the object to be backed up.'
            resource.name: '- (Required) Specifies backup object name.'
            resource.type: '- (Required) Entity object type of the backup object. If the type is VMs, the value is OS::Nova::Server.'
            scheduled_operation: '- Backup plan information'
            scheduled_operation.day_backups: |-
                - (Optional) Specifies the maximum number of retained daily backups.
                The latest backup of each day is saved in the long term. This parameter can be effective
                together with the maximum number of retained backups specified by max_backups.
            scheduled_operation.description: '- (Optional) Specifies Scheduling period description.The value consists of 0 to 255 characters and must not contain a greater-than sign (>) or less-than sign (<).'
            scheduled_operation.enabled: '- (Optional) Specifies whether the scheduling period is enabled. Default value is true'
            scheduled_operation.max_backups: '- (Optional) Specifies maximum number of backups that can be automatically created for a backup object.'
            scheduled_operation.month_backups: |-
                - (Optional) Specifies the maximum number of retained monthly backups.
                The latest backup of each month is saved in the long term. This parameter can be effective
                together with the maximum number of retained backups specified by max_backups.
            scheduled_operation.name: '- (Optional) Specifies Scheduling period name.The value consists of 1 to 255 characters and can contain only letters, digits, underscores (_), and hyphens (-).'
            scheduled_operation.operation_type: '- (Required) Specifies Operation type, which can be backup.'
            scheduled_operation.permanent: '- (Optional) Specifies whether backups are permanently retained.'
            scheduled_operation.retention_duration_days: '- (Optional) Specifies duration of retaining a backup, in days.'
            scheduled_operation.timezone: '- (Optional) Time zone where the user is located, for example, UTC+08:00.'
            scheduled_operation.trigger_pattern: '- (Required) Specifies Scheduling policy of the scheduler.'
            scheduled_operation.week_backups: |-
                - (Optional) Specifies the maximum number of retained weekly backups.
                The latest backup of each week is saved in the long term. This parameter can be effective
                together with the maximum number of retained backups specified by max_backups.
            scheduled_operation.year_backups: |-
                - (Optional) Specifies the maximum number of retained yearly backups.
                The latest backup of each year is saved in the long term. This parameter can be effective
                together with the maximum number of retained backups specified by max_backups.
            status: '- Status of Backup Policy.'
            tags.key: '- (Required) Tag key. It cannot be an empty string.'
            tags.value: '- (Required) Tag value. It can be an empty string.'
            trigger_id: '- Specifies Scheduler ID.'
            trigger_name: '- Specifies Scheduler name.'
            trigger_type: '- Specifies Scheduler type.'
        importStatements: []
    opentelekomcloud_csbs_backup_v1:
        subCategory: Cloud Server Backup Service (CSBS)
        description: Manages a CSBS Backup resource within OpenTelekomCloud.
        name: opentelekomcloud_csbs_backup_v1
        title: opentelekomcloud_csbs_backup_v1
        examples:
            - name: backup_v1
              manifest: |-
                {
                  "backup_name": "${var.backup_name}",
                  "resource_id": "${var.resource_id}",
                  "resource_type": "OS::Nova::Server"
                }
              references:
                backup_name: var.backup_name
                resource_id: var.resource_id
        argumentDocs:
            backup_name: '- (Optional) Name for the backup. The value consists of 1 to 255 characters and can contain only letters, digits, underscores (_), and hyphens (-). Changing backup_name creates a new backup.'
            backup_record_id: '- Specifies backup record ID.'
            description: '- (Optional) Backup description. The value consists of 0 to 255 characters and must not contain a greater-than sign (>) or less-than sign (<). Changing description creates a new backup.'
            key: '- (Required) Tag key. It cannot be an empty string.Changing key creates a new backup.'
            resource_id: '- (Required) ID of the target to which the backup is restored. Changing this creates a new backup.'
            resource_type: '- (Optional) Type of the target to which the backup is restored. The default value is OS::Nova::Server for an ECS. Changing this creates a new backup.'
            status: '- It specifies the status of backup.'
            tags: '- (Optional) block supports the following arguments:'
            value: '- (Required) Tag value. It can be an empty string.Changing value creates a new backup.'
            vm_metadata.cloud_service_type: '- Specifies ECS type.'
            vm_metadata.disk: '- Shows system disk size corresponding to the ECS specifications.'
            vm_metadata.eip: '- Specifies elastic IP address of the ECS.'
            vm_metadata.image_type: '- Specifies image type.'
            vm_metadata.name: '- Name of backup data.'
            vm_metadata.private_ip: '- It specifies internal IP address of the ECS.'
            vm_metadata.ram: '- Specifies memory size of the ECS, in MB.'
            vm_metadata.vcpus: '- Specifies CPU cores corresponding to the ECS.'
            volume_backups.average_speed: '-  Specifies the average speed.'
            volume_backups.bootable: '-  Specifies whether the disk is bootable.'
            volume_backups.id: '-  Specifies Cinder backup ID.'
            volume_backups.image_type: '-  It specifies backup. The default value is backup.'
            volume_backups.incremental: '-  Shows whether incremental backup is used.'
            volume_backups.name: '-  It gives EVS disk backup name.'
            volume_backups.size: '-  Specifies accumulated size (MB) of backups.'
            volume_backups.snapshot_id: '-  ID of snapshot.'
            volume_backups.source_volume_id: '-  It specifies source volume ID.'
            volume_backups.source_volume_name: '-  Specifies source volume name.'
            volume_backups.source_volume_size: '-  Shows source volume size in GB.'
            volume_backups.space_saving_ratio: '-  Specifies space saving rate.'
            volume_backups.status: '-  Status of backup Volume.'
        importStatements: []
    opentelekomcloud_css_cluster_v1:
        subCategory: Cloud Search Service (CSS)
        description: Manages a CSS Cluster resource within OpenTelekomCloud.
        name: opentelekomcloud_css_cluster_v1
        title: opentelekomcloud_css_cluster_v1
        examples:
            - name: cluster
              manifest: |-
                {
                  "expect_node_num": 1,
                  "name": "terraform_test_cluster",
                  "node_config": [
                    {
                      "availability_zone": "${var.availability_zone}",
                      "flavor": "css.medium.8",
                      "network_info": [
                        {
                          "network_id": "${var.network_id}",
                          "security_group_id": "${data.opentelekomcloud_networking_secgroup_v2.secgroup.id}",
                          "vpc_id": "${var.vpc_id}"
                        }
                      ],
                      "volume": [
                        {
                          "size": 40,
                          "volume_type": "COMMON"
                        }
                      ]
                    }
                  ]
                }
              references:
                node_config.availability_zone: var.availability_zone
                node_config.network_info.network_id: var.network_id
                node_config.network_info.security_group_id: data.opentelekomcloud_networking_secgroup_v2.secgroup.id
                node_config.network_info.vpc_id: var.vpc_id
            - name: cluster
              manifest: |-
                {
                  "admin_pass": "QwertyUI!",
                  "datastore": [
                    {
                      "type": "opensearch",
                      "version": "1.3.6"
                    }
                  ],
                  "enable_authority": true,
                  "enable_https": true,
                  "expect_node_num": 1,
                  "name": "terraform_test_cluster",
                  "node_config": [
                    {
                      "availability_zone": "${var.availability_zone}",
                      "flavor": "css.medium.8",
                      "network_info": [
                        {
                          "network_id": "${var.network_id}",
                          "security_group_id": "${data.opentelekomcloud_networking_secgroup_v2.secgroup.id}",
                          "vpc_id": "${var.vpc_id}"
                        }
                      ],
                      "volume": [
                        {
                          "size": 40,
                          "volume_type": "COMMON"
                        }
                      ]
                    }
                  ]
                }
              references:
                node_config.availability_zone: var.availability_zone
                node_config.network_info.network_id: var.network_id
                node_config.network_info.security_group_id: data.opentelekomcloud_networking_secgroup_v2.secgroup.id
                node_config.network_info.vpc_id: var.vpc_id
        argumentDocs:
            admin_pass: |-
                - (Optional) Password of the cluster user admin in security mode.
                This parameter is mandatory only when enable_authority is set to true.
            create: '- Default is 20 minutes.'
            created: '- Time when a cluster is created. The format is ISO8601: CCYY-MM-DDThh:mm:ss.'
            css.2xlarge.2: ': 80 GB to 1,600 GB'
            css.2xlarge.4: ': 80 GB to 3,200 GB'
            css.2xlarge.8: ': 80 GB to 5120 GB'
            css.4xlarge.2: ': 100 GB to 3,200 GB'
            css.4xlarge.4: ': 100 GB to 6,400 GB'
            css.4xlarge.8: ': 160 GB to 10240 GB'
            css.8xlarge.2: ': 320 GB to 10,240 GB'
            css.8xlarge.4: ': 160 GB to 10,240 GB'
            css.medium.8: ': 40 GB to 640 GB'
            css.xlarge.2: ': 40 GB to 800 GB'
            css.xlarge.4: ': 40 GB to 1,600 GB'
            css.xlarge.8: ': 40 GB to 2560 GB'
            datastore: |-
                - (Optional) Type of the data search engine. Structure is documented below.
                Changing this parameter will create a new resource.
            datastore.type: '- Engine type. The default value is elasticsearch. Currently, the value can be elasticsearch or opensearch.'
            datastore.version: |-
                - Engine version. The value can be 7.6.2, 7.9.3, 7.10.2 or 1.3.6 for opensearch.
                The default value is 7.6.2.
            enable_authority: |-
                - (Optional) Whether to enable authentication.
                Authentication is disabled by default.
                When authentication is enabled, enable_https must be set to true.
                Changing this parameter will create a new resource.
            enable_https: |-
                - (Optional) Whether communication encryption is performed on the cluster.
                By default, communication encryption is disabled.
                Value true indicates that communication encryption is performed on the cluster.
                Value false indicates that communication encryption is not performed on the cluster.
                Changing this parameter will create a new resource.
            endpoint: '- Indicates the IP address and port number of the user used to access the VPC.'
            expect_node_num: '- (Optional) Number of cluster instances. The value range is 1 to 32.'
            name: |-
                - (Required) Cluster name. It contains 4 to 32 characters. Only letters, digits,
                hyphens (-), and underscores (_) are allowed. The value must start with a letter.
                Changing this parameter will create a new resource.
            network_info.network_id: |-
                - (Required) Network ID. All instances in a cluster must have the same
                networks and security groups. Changing this parameter will create a new resource.
            network_info.security_group_id: |-
                - (Required) Security group ID. All instances in a cluster must have the
                same subnets and security groups. Changing this parameter will create a new resource.
            network_info.vpc_id: |-
                - (Required) VPC ID, which is used for configuring cluster network.
                Changing this parameter will create a new resource.
            node_config: |-
                - (Required) Instance object. Structure is documented below.
                Changing this parameter will create a new resource.
            node_config.availability_zone: '- (Optional) Availability zone (AZ). Changing this parameter will create a new resource.'
            node_config.flavor: '- (Required) Instance flavor name.'
            node_config.network_info: |-
                - (Required) Network information. Structure is documented below.
                Changing this parameter will create a new resource.
            node_config.volume: |-
                - (Required) Information about the volume. Structure is documented below.
                Changing this parameter will create a new resource.
            nodes: '- List of node objects. Structure is documented below.'
            nodes.id: '- Instance ID.'
            nodes.name: '- Instance name.'
            nodes.type: '- Supported type: ess (indicating the Elasticsearch node)'
            tags: '- (Optional) Tags key/value pairs to associate with the cluster.'
            update: '- Default is 30 minutes.'
            updated: '- Last modification time of a cluster. The format is ISO8601: CCYY-MM-DDThh:mm:ss.'
            volume.encryption_key: |-
                - (Optional) Key ID. The Default Master Keys cannot be used to create
                grants. Specifically, you cannot use Default Master Keys
                whose aliases end with /default in KMS to create clusters.
                After a cluster is created, do not delete the key used by the cluster.
                Otherwise, the cluster will become unavailable.
                Changing this parameter will create a new resource.
            volume.size: '- (Required) Volume size, which must be a multiple of 4 and 10.'
            volume.volume_type: |-
                - (Required) COMMON: Common I/O. The SATA disk is used. HIGH: High I/O.
                The SAS disk is used. ULTRAHIGH: Ultra-high I/O. The solid-state drive (SSD) is used.
                Changing this parameter will create a new resource.
        importStatements: []
    opentelekomcloud_css_snapshot_configuration_v1:
        subCategory: Cloud Search Service (CSS)
        description: Manages a CSS Snapshot resource within OpenTelekomCloud.
        name: opentelekomcloud_css_snapshot_configuration_v1
        title: opentelekomcloud_css_snapshot_configuration_v1
        examples:
            - name: config
              manifest: |-
                {
                  "cluster_id": "${opentelekomcloud_css_cluster_v1.cluster.id}",
                  "configuration": [
                    {
                      "agency": "css_obs_agency",
                      "base_path": "css/snapshot",
                      "bucket": "${opentelekomcloud_obs_bucket.bucket.bucket}"
                    }
                  ],
                  "creation_policy": [
                    {
                      "delete_auto": true,
                      "enable": true,
                      "keepday": 2,
                      "period": "00:00 GMT+03:00",
                      "prefix": "snapshot"
                    }
                  ]
                }
              references:
                cluster_id: opentelekomcloud_css_cluster_v1.cluster.id
                configuration.bucket: opentelekomcloud_obs_bucket.bucket.bucket
              dependencies:
                opentelekomcloud_css_cluster_v1.cluster: |-
                    {
                      "expect_node_num": 1,
                      "name": "terraform_test_cluster",
                      "node_config": [
                        {
                          "availability_zone": "${var.availability_zone}",
                          "flavor": "css.medium.8",
                          "network_info": [
                            {
                              "network_id": "${var.network_id}",
                              "security_group_id": "${data.opentelekomcloud_networking_secgroup_v2.secgroup.id}",
                              "vpc_id": "${var.vpc_id}"
                            }
                          ],
                          "volume": [
                            {
                              "size": 40,
                              "volume_type": "COMMON"
                            }
                          ]
                        }
                      ]
                    }
                opentelekomcloud_obs_bucket.bucket: |-
                    {
                      "bucket": "tf-snap-testing",
                      "force_destroy": true
                    }
        argumentDocs:
            automatic: |-
                - (Optional) Use automatic configuration for CCS cluster screenshots.
                Mutually exclusive with configuration/creation_policy.
            cluster_id: '- (Required) ID of the CSS cluster.'
            configuration: |-
                - (Optional) The basic configurations of a cluster snapshot. Structure is documented below.
                Mutually exclusive with automatic.
            configuration.agency: '- (Required) The agency used by CSS to access OBS.'
            configuration.base_path: '- (Required) Storage path of the snapshot in the OBS bucket.'
            configuration.bucket: '- (Required) The bucket which will be used for storing snapshots.'
            configuration.kms_id: '- (Options) Key ID used for snapshot encryption.'
            creation_policy: |-
                - (Optional) Parameters related to automatic snapshot creation. Structure is documented below.
                Mutually exclusive with automatic.
            creation_policy.delete_auto: |-
                - (Optional) Whether to delete all automatically created snapshots when the automatic
                snapshot creation policy is disabled. The default value is false, indicating that snapshots that have been
                automatically created are not deleted when the automatic snapshot creation function is disabled.
                If this parameter is set to true, all automatically created snapshots are deleted when the automatic snapshot
                creation policy is disabled.
            creation_policy.enable: |-
                - (Required) Value true indicates that the automatic snapshot creation policy is enabled,
                and value false indicates that the automatic snapshot creation policy is disabled.
            creation_policy.keepday: |-
                - (Required) Number of days that a snapshot can be retained. The value ranges from 1 to 90.
                The system automatically deletes snapshots that have been retained for the allowed maximum duration on the half hour.
            creation_policy.period: |-
                - (Required) Time when a snapshot is created every day. Snapshots can only be created on the hour.
                The time format is the time followed by the time zone, specifically, HH:mm z.
                In the format, HH:mm refers to the hour time and z refers to the time zone, for example,
                00:00 GMT+08:00 and 01:00 GMT+08:00.
            creation_policy.prefix: '- (Required) Prefix of the snapshot name that is automatically created.'
        importStatements: []
    opentelekomcloud_cts_event_notification_v3:
        subCategory: Cloud Trace Service (CTS)
        description: Manages a CTS Event Notification resource within OpenTelekomCloud.
        name: opentelekomcloud_cts_event_notification_v3
        title: opentelekomcloud_cts_event_notification_v3
        examples:
            - name: notification_v3
              manifest: |-
                {
                  "notification_name": "my_notification",
                  "operation_type": "complete",
                  "status": "enabled",
                  "topic_id": "${opentelekomcloud_smn_topic_v2.topic_1.id}"
                }
              references:
                topic_id: opentelekomcloud_smn_topic_v2.topic_1.id
              dependencies:
                opentelekomcloud_smn_topic_v2.topic_1: |-
                    {
                      "name": "topic_1"
                    }
            - name: notification_v3
              manifest: |-
                {
                  "notification_name": "my_notification",
                  "operation_type": "complete"
                }
              dependencies:
                opentelekomcloud_smn_topic_v2.topic_1: |-
                    {
                      "name": "topic_1"
                    }
            - name: notification_v3
              manifest: |-
                {
                  "notification_name": "test_user",
                  "notify_user_list": [
                    {
                      "user_group": "user_group",
                      "user_list": [
                        "user_one",
                        "user_two"
                      ]
                    }
                  ],
                  "operation_type": "customized",
                  "operations": [
                    {
                      "resource_type": "vpc",
                      "service_type": "VPC",
                      "trace_names": [
                        "deleteVpc",
                        "createVpc"
                      ]
                    },
                    {
                      "resource_type": "evs",
                      "service_type": "EVS",
                      "trace_names": [
                        "createVolume",
                        "deleteVolume"
                      ]
                    }
                  ],
                  "status": "enabled",
                  "topic_id": "${opentelekomcloud_smn_topic_v2.topic_1.id}"
                }
              references:
                topic_id: opentelekomcloud_smn_topic_v2.topic_1.id
              dependencies:
                opentelekomcloud_smn_topic_v2.topic_1: |-
                    {
                      "name": "topic_1"
                    }
        argumentDocs:
            complete: '- Any operation will trigger notification.'
            create_time: '- Specifies creation time of event notification rule.'
            customized: '- Only selected operations will trigger notification.'
            notification_id: '- Unique event notification id.'
            notification_name: |-
                - (Required) The name of event notification rule. Only letters, digits
                and underscores (_) are allowed.
            notification_type: '- Specifies the notification type. Current cts version supports only smn type.'
            notify_user_list: |-
                - (Optional) Specifies the list of users whose operations will trigger notifications.
                Currently, up to 50 users in 10 user groups can be configured. Supported fields:
            operation_type: '- (Required) The operation type of event rules.'
            operations: |-
                - (Optional) Specifies which operations are enabled in event notification rule. Can be only specified
                when operation_type is set to customized. Supported fields:
            project_id: '- Specifies project id of event notification rule.'
            resource_type: '- (Required) Specifies the resource type of custom operation.'
            service_type: |-
                - (Required) Specifies the cloud service. Every service should be provided separately, the value
                must be the acronym of a cloud service that has been connected with CTS.
            status: '- (Optional) Specifies whether SMN topic is enabled or disabled.'
            topic_id: '- (Optional) Specifies SMN topic URN that will be used for events notification.'
            trace_names: '- (Required) Specifies the list with trace names of custom operation.'
            user_group: '- (Required) Specifies the IAM user group.'
            user_list: '- (Required) Specifies the list with IAM users which belong to user_group.'
        importStatements:
            - $ terraform import opentelekomcloud_cts_event_notification_v3.notification c1881895-cdcb-4d23-96cb-032e6a3ee667/test_event
    opentelekomcloud_cts_tracker_v1:
        subCategory: Cloud Trace Service (CTS)
        description: Manages a CTS Tracker v1 resource within OpenTelekomCloud.
        name: opentelekomcloud_cts_tracker_v1
        title: opentelekomcloud_cts_tracker_v1
        examples:
            - name: tracker_v1
              manifest: |-
                {
                  "bucket_name": "${var.bucket_name}",
                  "file_prefix_name": "yO8Q",
                  "is_lts_enabled": true
                }
              references:
                bucket_name: var.bucket_name
        argumentDocs:
            bucket_name: '- (Required) The OBS bucket name for a tracker.'
            file_prefix_name: '- (Optional) The prefix of a log that needs to be stored in an OBS bucket.'
            is_lts_enabled: '- (Optional) Specifies whether to enable trace analysis.'
            log_group_name: '- Specifies LTS log group name.'
            log_topic_name: '- Specifies LTS log stream.'
            region: '- Specifies the tracker region.'
            status: '- Specifies current status of the tracker.'
            tracker_name: '- The tracker name. Currently, only tracker system is available.'
        importStatements:
            - $ terraform import opentelekomcloud_cts_tracker_v1.tracker system
    opentelekomcloud_cts_tracker_v3:
        subCategory: Cloud Trace Service (CTS)
        description: Manages a CTS Tracker v3 resource within OpenTelekomCloud.
        name: opentelekomcloud_cts_tracker_v3
        title: opentelekomcloud_cts_tracker_v3
        examples:
            - name: tracker_v3
              manifest: |-
                {
                  "bucket_name": "${var.bucket_name}",
                  "file_prefix_name": "prefix",
                  "is_lts_enabled": true,
                  "status": "enabled"
                }
              references:
                bucket_name: var.bucket_name
        argumentDocs:
            bucket_name: '- (Optional) The OBS bucket name for a tracker.'
            compress_type: |-
                - (Optional) Specifies the compression type. Default value is gzip.
                The valid values are as follows:
            detail: '- Specifies the cause of the abnormal status, and its value in case of errors.'
            domain_id: '- Specifies domain id of the tracker.'
            file_prefix_name: '- (Optional) The prefix of a log that needs to be stored in an OBS bucket.'
            id: '- Specifies the tracker id.'
            is_lts_enabled: '- (Optional) Specifies whether to enable trace analysis.'
            is_obs_created: '- (Optional) Specifies whether the OBS bucket is automatically created by the tracker.'
            is_sort_by_service: |-
                - (Optional) Specifies whether to sort the path by cloud service. If this option is enabled,
                the cloud service name is added to the transfer file path. Default: true.
            log_group_name: '- Specifies LTS log group name.'
            log_topic_name: '- Specifies LTS log stream.'
            project_id: '- Specifies project id of the tracker.'
            status: '- (Required) Specifies whether tracker is enabled or disabled.'
            tracker_name: '- The tracker name. Currently, only tracker system is available.'
            tracker_type: '- The tracker type. Currently, only tracker system is available.'
        importStatements:
            - $ terraform import opentelekomcloud_cts_tracker_v3.tracker system
    opentelekomcloud_dc_endpoint_group_v2:
        subCategory: Direct Connect (DCaaS)
        description: Manages a Direct Connect Endpoint Group resource within OpenTelekomCloud.
        name: opentelekomcloud_dc_endpoint_group_v2
        title: opentelekomcloud_dc_endpoint_group_v2
        examples:
            - name: dc_endpoint_group
              manifest: |-
                {
                  "description": "first",
                  "endpoints": [
                    "10.2.0.0/24",
                    "10.3.0.0/24"
                  ],
                  "name": "ep-1",
                  "project_id": "${data.opentelekomcloud_identity_project_v3.project_1.id}",
                  "type": "cidr"
                }
              references:
                project_id: data.opentelekomcloud_identity_project_v3.project_1.id
        argumentDocs:
            description: (String, Optional, ForceNew) - Provides supplementary information about the Direct Connect endpoint group.
            endpoints: (List, required, ForceNew) - Specifies the list of the endpoints in a Direct Connect endpoint group.
            id: '-  ID of the endpoint group.'
            name: (String, Optional, ForceNew) - Specifies the name of the Direct Connect endpoint group.
            project_id: (String, Required, ForceNew) - Specifies the project ID.
            type: (String, Required, ForceNew) - Specifies the type of the Direct Connect endpoints. The value can only be cidr.
        importStatements: []
    opentelekomcloud_dc_virtual_gateway_v2:
        subCategory: Direct Connect (DCaaS)
        description: Manages a Direct Connect Virtual Gateway resource within OpenTelekomCloud.
        name: opentelekomcloud_dc_virtual_gateway_v2
        title: opentelekomcloud_dc_virtual_gateway_v2
        examples:
            - name: vgw_1
              manifest: |-
                {
                  "description": "acc test",
                  "local_ep_group": [
                    {
                      "description": "first",
                      "endpoints": [
                        "10.2.0.0/24",
                        "10.3.0.0/24"
                      ],
                      "name": "tf_eg_1"
                    }
                  ],
                  "local_ep_group_v6": [
                    {
                      "description": "first",
                      "endpoints": [
                        "2a07:8700:2:4::/64",
                        "2a07:8700:2:54::/64"
                      ],
                      "name": "tf_eg_2"
                    }
                  ],
                  "name": "%s",
                  "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                }
              references:
                vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
        argumentDocs:
            asn: (Int, Optional, ForceNew) - Specifies the BGP ASN of the virtual gateway.
            description: (String, Optional) - Provides supplementary information about the virtual gateway.
            device_id: (String, Optional) - Specifies the ID of the physical device used by the virtual gateway.
            id: '-  ID of the virtual gateway.'
            local_ep_group: |-
                (String, Optional, List) - Specifies the local endpoint group that records CIDR IPV4 blocks of the VPC subnets.
                At least one of local_ep_group or local_ep_group_v6 should be specified.
                The object structure is documented below.
            local_ep_group_id: '- ID of the local IPV4 endpoint group that records CIDR blocks of the VPC subnets.'
            local_ep_group_ipv6_id: '- ID of the local IPV6 endpoint group that records CIDR blocks of the VPC subnets.'
            local_ep_group_v6: |-
                (String, Optional, List) - Specifies the local endpoint group that records CIDR IPV6 blocks of the VPC subnets.
                At least one of local_ep_group or local_ep_group_v6 should be specified.
                The object structure is documented below.
            local_group: 'block supports:'
            local_group.description: (Str[ing, Optional) - Provides supplementary information about the Direct Connect endpoint group.
            local_group.endpoints: (List, Required) - Specifies the list of the endpoints in a Direct Connect endpoint group.
            local_group.name: (String, Optional) - Specifies the name of the Direct Connect endpoint group.
            local_group.type: '(String, Required, ForceNew) - Specifies the type of the Direct Connect endpoints. The value can only be cidr. Default value: cidr.'
            name: (String, Required) - Specifies the virtual gateway name.]()
            project_id: (String, Optional) - Specifies the project ID.
            redundant_device_id: (String, Optional) - Specifies the ID of the redundant physical device used by the virtual gateway.
            status: '-  Virtual gateway status.'
            vpc_id: (String, Required, ForceNew) - Specifies the ID of the VPC to be accessed.
        importStatements: []
    opentelekomcloud_dc_virtual_interface_v2:
        subCategory: Direct Connect (DCaaS)
        description: Manages a Direct Connect Virtual Interface resource within OpenTelekomCloud.
        name: opentelekomcloud_dc_virtual_interface_v2
        title: opentelekomcloud_dc_virtual_interface_v2
        examples:
            - name: vi_1
              manifest: |-
                {
                  "bandwidth": 10,
                  "description": "description",
                  "direct_connect_id": "${var.direct_connect_id}",
                  "local_gateway_v4_ip": "180.1.1.1/24",
                  "name": "my_virtual_interface",
                  "remote_ep_group": [
                    {
                      "description": "first",
                      "endpoints": [
                        "100.20.0.0/24",
                        "100.30.0.0/24"
                      ],
                      "name": "tf_acc_reg_1",
                      "project_id": "${data.opentelekomcloud_identity_project_v3.project.id}"
                    }
                  ],
                  "remote_gateway_v4_ip": "180.1.1.2/24",
                  "route_mode": "static",
                  "service_type": "vpc",
                  "type": "private",
                  "virtual_gateway_id": "${opentelekomcloud_dc_virtual_gateway_v2.vgw_1.id}",
                  "vlan": 100
                }
              references:
                direct_connect_id: var.direct_connect_id
                remote_ep_group.project_id: data.opentelekomcloud_identity_project_v3.project.id
                virtual_gateway_id: opentelekomcloud_dc_virtual_gateway_v2.vgw_1.id
              dependencies:
                opentelekomcloud_dc_virtual_gateway_v2.vgw_1: |-
                    {
                      "description": "acc test",
                      "local_ep_group": [
                        {
                          "description": "first",
                          "endpoints": [
                            "10.2.0.0/24",
                            "10.3.0.0/24"
                          ],
                          "name": "tf_acc_eg_1"
                        }
                      ],
                      "name": "my_virtual_gateway",
                      "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                    }
        argumentDocs:
            asn: (Int, Optional, ForceNew) - Specifies the AS number of the BGP peer.
            bandwidth: (Int, Required) - Specifies the virtual interface bandwidth.
            bgp_md5: (String, Optional, ForceNew) - Specifies the MD5 password of the BGP peer.
            created_at: '-  The creation time of the virtual interface.'
            description: (String, Optional) - Provides supplementary information about the Direct Connect endpoint group.
            direct_connect_id: (String, Required, ForceNew) - Specifies the connection ID.
            enable_bfd: '- Bidirectional Forwarding Detection (BFD) function status.'
            enable_nqa: '-  Network Quality Analysis (NQA) function status.'
            endpoints: (List, Required) - Specifies the list of the endpoints in a Direct Connect endpoint group.
            id: '-  ID of the virtual interface.'
            lag_id: '-  The ID of the link aggregation group (LAG) associated with the virtual interface.'
            local_gateway_v4_ip: (String, Optional, ForceNew) - Specifies the IPv4 address of the local gateway.
            name: (String, Required) - Specifies the virtual interface name.
            project_id: (String, Optional, ForceNew) - Specifies the project ID.
            remote_ep_group: |-
                (String, Required, List) - Specifies the ID of the remote endpoint group that records the CIDR blocks used by the on-premises network.
                The remote_ep_group block supports:
            remote_ep_group_id: '- The ID of the remote endpoint group that records the CIDR blocks used by the on-premises network.'
            remote_gateway_v4_ip: (String, Optional, ForceNew) - Specifies the IPv4 address of the remote gateway.
            route_mode: (String, Required, ForceNew) - Specifies the routing mode. The value can be static or bgp.
            service_type: (String, Required, ForceNew) - Specifies what is to be accessed over the connection. The value can only be vpc.
            status: '-  The current status of the virtual interface.'
            type: (String, Required, ForceNew) - Specifies the virtual interface type. The value can only be private.
            virtual_gateway_id: (String, Required, ForceNew) - Specifies the virtual gateway ID.
            vlan: (Int, Required, ForceNew) - Specifies the VLAN used by the local gateway to communicate with the remote gateway.
        importStatements: []
    opentelekomcloud_dcs_instance_v1:
        subCategory: Distributed Cache Service (DCS)
        description: Manages a DCS Instance v1 resource within OpenTelekomCloud.
        name: opentelekomcloud_dcs_instance_v1
        title: opentelekomcloud_dcs_instance_v1
        examples:
            - name: instance_1
              manifest: |-
                {
                  "available_zones": [
                    "${data.opentelekomcloud_dcs_az_v1.az_1.id}"
                  ],
                  "backup_policy": [
                    {
                      "backup_at": [
                        1,
                        2,
                        4,
                        6
                      ],
                      "backup_type": "manual",
                      "begin_at": "00:00-01:00",
                      "period_type": "weekly",
                      "save_days": 1
                    }
                  ],
                  "capacity": 2,
                  "engine": "Redis",
                  "engine_version": "3.0",
                  "name": "test_dcs_instance",
                  "password": "0TCTestP@ssw0rd",
                  "product_id": "${data.opentelekomcloud_dcs_product_v1.product_1.id}",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}",
                  "subnet_id": "${var.network_id}",
                  "tags": {
                    "environment": "basic",
                    "managed_by": "terraform"
                  },
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                available_zones: data.opentelekomcloud_dcs_az_v1.az_1.id
                product_id: data.opentelekomcloud_dcs_product_v1.product_1.id
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
                subnet_id: var.network_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "secgroup_1",
                      "name": "secgroup_1"
                    }
            - name: instance_1
              manifest: |-
                {
                  "available_zones": [
                    "${data.opentelekomcloud_dcs_az_v1.az_1.id}"
                  ],
                  "capacity": 0.125,
                  "enable_whitelist": true,
                  "engine": "Redis",
                  "engine_version": "5.0",
                  "name": "test_dcs_instance_5.0",
                  "password": "0TCTestP@ssw0rd",
                  "product_id": "${data.opentelekomcloud_dcs_product_v1.product_1.id}",
                  "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}",
                  "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}",
                  "whitelist": [
                    {
                      "group_name": "test-group-name",
                      "ip_list": [
                        "10.10.10.1",
                        "10.10.10.2"
                      ]
                    },
                    {
                      "group_name": "test-group-name-2",
                      "ip_list": [
                        "10.10.10.11",
                        "10.10.10.3",
                        "10.10.10.4"
                      ]
                    }
                  ]
                }
              references:
                available_zones: data.opentelekomcloud_dcs_az_v1.az_1.id
                product_id: data.opentelekomcloud_dcs_product_v1.product_1.id
                subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id
                vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
        argumentDocs:
            "0.125": |-
                , 0.25,
                0.5, 1, 2, 4, 8, 16, 32 and 64.
                Cluster instance specifications support 4,8,16, 24, 32, 48, 64, 96, 128, 192, 256,
                384, 512, 768 and 1024.
            "2": |-
                , 4, 8, 16, 32 and 64.
                Proxy cluster instance specifications support 64, 128, 256, 512, and 1024.
            available_zones: |-
                - (Required, ForceNew, List) IDs of the AZs where cache nodes reside. For details
                on how to query AZs, see Querying AZ Information
                or use opentelekomcloud_dcs_az_v1 data source:
            backup_at: |-
                - (Required, List) Day in a week on which backup starts. Range: 1–7. Where: 1
                indicates Monday; 7 indicates Sunday.
            backup_policy: '- (Optional, List) Describes the backup configuration to be used with the instance.'
            backup_type: |-
                - (Optional, String) Backup type. Valid values are: auto automatic backup,
                manual manual backup (default).
            begin_at: |-
                - (Required, String) Time at which backup starts. 00:00-01:00 indicates that backup
                starts at 00:00:00.
            capacity: '- (Required, ForceNew, Float) Indicates the Cache capacity. Unit: GB.'
            configuration: |-
                - (Optional, List) Describes the array of configuration items of the DCS instance.
                Configured values can be found here.
            created_at: '- Time at which the DCS instance is created. For example, 2017-03-31T12:24:46.297Z.'
            dcs.cluster: ': indicates a DCS instance in cluster mode. Not available with version 6.0.'
            dcs.master_standby: ': indicates a DCS instance in master/standby mode.'
            dcs.single_node: ': indicates a DCS instance in single-node mode.'
            description: |-
                - (Optional, String) Indicates the description of an instance. It is a character
                string containing not more than 1024 characters.
            enable_whitelist: |-
                - (Optional, Bool) Specifies whether to enable or disable whitelist. Only available when
                engine_version is set to 4.0/5.0. Parameter have to be used together with whitelist.
            engine: |-
                - (Required, ForceNew, String) Indicates a cache engine. Only Redis is supported. Changing this
                creates a new instance.
            engine_version: |-
                - (Required, ForceNew, String) Indicates the version of a cache engine, which can be 3.0/4.0/5.0/6.0.
                Changing this creates a new instance.
            group_name: '- (Required, String) Whitelist group name. A maximum of four groups can be created for each instance.'
            internal_version: '- Internal DCS version.'
            ip: '- Cache node''s IP address in the tenant''s VPC.'
            ip_list: |-
                - (Required, List) List of IP addresses in the whitelist group. A maximum of 20 IP addresses or IP address
                ranges can be added to an instance. Separate multiple IP addresses or IP address ranges with commas (,).
                IP address 0.0.0.0 and IP address range 0.0.0/0 are not supported.
            maintain_begin: |-
                - (Optional, String) Indicates the time at which a maintenance time window starts.
                Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
                a supported maintenance time window. For details, see section
                Querying Maintenance Time Windows.
                The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00.
            maintain_end: |-
                - (Optional, String) Indicates the time at which a maintenance time window ends.
                Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
                a supported maintenance time window. For details, see section
                Querying Maintenance Time Windows.
                The end time is four hours later than the start time. For example, if the start time is 22:00,
                the end time is 02:00.
            max_memory: '- Overall memory size. Unit: MB.'
            name: |-
                - (Required, String) Indicates the name of an instance. An instance name starts with a letter,
                consists of 4 to 64 characters, and supports only letters, digits, and hyphens (-).
            no_password_access: |-
                - An indicator of whether a DCS instance can be accessed in password-free mode.
                true when password not set.
            order_id: |-
                - An order ID is generated only in the monthly or yearly billing mode.
                In other billing modes, no value is returned for this parameter.
            parameter_id: '- (Required, String) Configuration item ID.'
            parameter_name: '- (Required, String) Configuration item name.'
            parameter_value: '- (Required, String) Value of the configuration item.'
            password: |-
                - (Optional, ForceNew, String) Indicates the password of an instance. An instance password
                must meet the following complexity requirements: Must be 8 to 32 characters long.
                Must contain at least 3 of the following character types: lowercase letters, uppercase
                letters, digits, and special characters: `~!@#$^&*()-_=+|{}:,<>./?
                Changing this creates a new instance.
            period_type: |-
                - (Required, String) Interval at which backup is performed.
                Currently, only weekly backup is supported.
            port: '- Port of the cache node.'
            private_ip: '- (Optional, String) IP address that is manually specified for a DCS instance.'
            product_id: |-
                - (Required, ForceNew, String) Product ID used to differentiate DCS instance types.
                Changing this creates a new instance.
            resource_spec_code: '- Resource specifications.'
            save_days: '- (Optional, Int) Retention time. Unit: day. Range: 1–7.'
            security_group_id: '- (Optional, String) Security group ID. This parameter is mandatory when engine_version is 3.0.'
            security_group_name: '- Indicates the name of a security group.'
            status: |-
                - Cache instance status. One of CREATING, CREATEFAILED, RUNNING, ERROR,
                RESTARTING, EXTENDING, RESTORING
            subnet_id: '- (Required, ForceNew, String) Specifies the subnet Network ID. Changing this creates a new instance.'
            subnet_name: '- Indicates the name of a subnet.'
            tags: '- (Optional, Map) The key/value pairs to associate with the dcs instance.'
            used_memory: '- Size of the used memory. Unit: MB.'
            user_id: '- Indicates a user ID.'
            user_name: '- Username.'
            vpc_id: '- (Required, ForceNew, String) Specifies the VPC ID. Changing this creates a new instance.'
            vpc_name: '- Indicates the name of a vpc.'
            whitelist: |-
                - (Optional, List) Describes the whitelist groups to be used with the instance. Only available when
                engine_version is set to 4.0/5.0. Parameter have to be used together with enable_whitelist.
                Resource fields:
        importStatements:
            - $ terraform import opentelekomcloud_dcs_instance_v1.instance instance_id
    opentelekomcloud_dcs_instance_v2:
        subCategory: Distributed Cache Service (DCS)
        description: Manages a DCS Instance v2 resource within OpenTelekomCloud.
        name: opentelekomcloud_dcs_instance_v2
        title: opentelekomcloud_dcs_instance_v2
        examples:
            - name: instance_1
              manifest: |-
                {
                  "availability_zones": [
                    "eu-de-01"
                  ],
                  "backup_policy": [
                    {
                      "backup_at": [
                        1,
                        2,
                        4,
                        6
                      ],
                      "backup_type": "manual",
                      "begin_at": "00:00-01:00",
                      "period_type": "weekly",
                      "save_days": 1
                    }
                  ],
                  "capacity": 2,
                  "engine": "Redis",
                  "engine_version": "3.0",
                  "flavor": "dcs.master_standby",
                  "name": "test_dcs_instance",
                  "password": "0TCTestP@ssw0rd",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}",
                  "subnet_id": "${var.network_id}",
                  "tags": {
                    "environment": "basic",
                    "managed_by": "terraform"
                  },
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
                subnet_id: var.network_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "secgroup_1",
                      "name": "secgroup_1"
                    }
            - name: instance_1
              manifest: |-
                {
                  "availability_zones": [
                    "${data.opentelekomcloud_compute_availability_zones_v2.zones.names[0]}"
                  ],
                  "capacity": 0.125,
                  "enable_whitelist": true,
                  "engine": "Redis",
                  "engine_version": "5.0",
                  "flavor": "redis.single.xu1.tiny.128",
                  "name": "test_dcs_instance_5.0",
                  "password": "0TCTestP@ssw0rd",
                  "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}",
                  "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}",
                  "whitelist": [
                    {
                      "group_name": "test-group-name",
                      "ip_list": [
                        "10.10.10.1",
                        "10.10.10.2"
                      ]
                    },
                    {
                      "group_name": "test-group-name-2",
                      "ip_list": [
                        "10.10.10.11",
                        "10.10.10.3",
                        "10.10.10.4"
                      ]
                    }
                  ]
                }
              references:
                availability_zones: data.opentelekomcloud_compute_availability_zones_v2.zones.names[0]
                subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id
                vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
        argumentDocs:
            ERROR: ': The instance is not running properly.'
            EXTENDING: ': The instance is being scaled up.'
            FLUSHING: ': The DCS instance is being cleared.'
            FROZEN: |-
                : The instance has been frozen due to low balance.
                You can unfreeze the instance by recharging your account in My Order.
            RESTARTING: ': The instance is being restarted.'
            RESTORING: ': The instance data is being restored.'
            RUNNING: |-
                : The instance is running properly.
                Only instances in the Running state can provide in-memory cache service.
            access_user: |-
                - (Optional, String, ForceNew) Specifies the username used for accessing a DCS instance.
                The username starts with a letter, consists of 1 to 64 characters, and supports only letters, digits, and
                hyphens (-). Changing this creates a new instance.
            auto: ': automatic backup.'
            availability_zones: |-
                - (Optional, List, ForceNew) The code of the AZ where the cache node resides.
                Master/Standby, Proxy Cluster, and Redis Cluster DCS instances support cross-AZ deployment.
                You can specify an AZ for the standby node. When specifying AZs for nodes, use commas (,) to separate AZs.
                Changing this creates a new instance.
            backup_policy: |-
                - (Optional, List) Specifies the backup configuration to be used with the instance.
                The structure is described below.
            backup_policy.backup_at: |-
                - (Required, List) Day in a week on which backup starts, the value ranges from 1 to 7.
                Where: 1 indicates Monday; 7 indicates Sunday.
            backup_policy.backup_type: '- (Optional, String) Backup type. Default value is auto. The valid values are as follows:'
            backup_policy.begin_at: |-
                - (Required, String) Time at which backup starts.
                Format: hh24:00-hh24:00, "00:00-01:00" indicates that backup starts at 00:00:00.
            backup_policy.period_type: |-
                - (Optional, String) Interval at which backup is performed. Default value is weekly.
                Currently, only weekly backup is supported.
            backup_policy.save_days: |-
                - (Optional, Int) Retention time. Unit: day, the value ranges from 1 to 7.
                This parameter is required if the backup_type is auto.
            bandwidth_info: |-
                - Indicates the bandwidth information of the instance.
                The bandwidth_info structure is documented below.
            bandwidth_info.bandwidth: '- Indicates the bandwidth size, the unit is GB.'
            bandwidth_info.begin_time: '- Indicates the begin time of temporary increase.'
            bandwidth_info.current_time: '- Indicates the current time.'
            bandwidth_info.end_time: '- Indicates the end time of temporary increase.'
            bandwidth_info.expand_count: '- Indicates the number of increases.'
            bandwidth_info.expand_effect_time: '- Indicates the interval between temporary increases, the unit is ms.'
            bandwidth_info.expand_interval_time: '- Indicates the time interval to the next increase, the unit is ms.'
            bandwidth_info.max_expand_count: '- Indicates the maximum number of increases.'
            bandwidth_info.next_expand_time: '- Indicates the next increase time.'
            bandwidth_info.task_running: '- Indicates whether the increase task is running.'
            cache_mode: '- Indicates the instance type. The value can be single, ha, cluster or proxy.'
            capacity: '- (Required, Float) Specifies the cache capacity. Unit: GB.'
            cpu_type: '- Indicates the CPU type of the instance. The value can be x86_64 or aarch64.'
            create: '- Default is 120 minutes.'
            created_at: '- Indicates the time when the instance is created, in RFC3339 format.'
            delete: '- Default is 15 minutes.'
            deleted_nodes: |-
                - (Optional, List) Specifies the ID of the replica to delete. This parameter is mandatory when
                you delete replicas of a master/standby DCS Redis 4.0 or 5.0 instance. Currently, only one replica can be deleted
                at a time.
            description: |-
                - (Optional, String) Specifies the description of an instance.
                It is a string that contains a maximum of 1024 characters.
            domain_name: '- Domain name of the instance. Usually, we use domain name and port to connect to the DCS instances.'
            enable_whitelist: |-
                - (Optional, Bool) Enable or disable the IP address whitelists. Defaults to true.
                If the whitelist is disabled, all IP addresses connected to the VPC can access the instance.
            engine: |-
                - (Required, String, ForceNew) Specifies a cache engine. Options: Redis and Memcached.
                Changing this creates a new instance.
            engine_version: |-
                - (Optional, String, ForceNew) Specifies the version of a cache engine.
                It is mandatory when the engine is Redis, the value can be 3.0, 4.0, 5.0 or 6.0.
                Changing this creates a new instance.
            flavor: |-
                - (Required, String) The flavor of the cache instance, which including the total memory, available memory,
                maximum number of connections allowed, maximum/assured bandwidth and reference performance.
                It also includes the modes of Redis instances. You can query the flavor as follows:
            id: '- A resource ID in UUID format.'
            launched_at: '- Indicates the time when the instance is started, in RFC3339 format.'
            maintain_begin: '- (Optional, String) Time at which the maintenance time window starts. Defaults to 02:00:00.'
            maintain_end: '- (Optional, String) Time at which the maintenance time window ends. Defaults to 06:00:00.'
            manual: ': manual backup.'
            max_memory: '- Total memory size. Unit: MB.'
            name: |-
                - (Required, String) Specifies the name of an instance.
                The name must be 4 to 64 characters and start with a letter.
                Only chinese, letters (case-insensitive), digits, underscores (_) ,and hyphens (-) are allowed.
            parameters: |-
                - (Optional, List) Specify an array of one or more parameters to be set to the DCS instance after
                launched. You can check on console to see which parameters supported.
                The parameters structure is documented below.
            parameters.id: '- (Required, String) Specifies the ID of the configuration item.'
            parameters.name: '- (Required, String) Specifies the name of the configuration item.'
            parameters.value: '- (Required, String) Specifies the value of the configuration item.'
            password: |-
                - (Optional, String) Specifies the password of a DCS instance.
                The password of a DCS instance must meet the following complexity requirements:
            port: |-
                - (Optional, Int) Port customization, which is supported only by Redis 4.0 and Redis 5.0 instances.
                Redis instance defaults to 6379. Memcached instance does not use this argument.
            private_ip: |-
                - (Optional, String, ForceNew) The IP address of the DCS instance,
                which can only be the currently available IP address the selected subnet.
                You can specify an available IP for the Redis instance (except for the Redis Cluster type).
                If omitted, the system will automatically allocate an available IP address to the Redis instance.
                Changing this creates a new instance resource.
            product_type: '- Indicates the product type of the instance. The value can be: generic or enterprise.'
            readonly_domain_name: |-
                - Indicates the read-only domain name of the instance. This parameter is available
                only for master/standby instances.
            region: '- Indicates the region in which DCS instance resource is created.'
            rename_commands: |-
                - (Optional, Map) Critical command renaming, which is supported only by Redis 4.0 and
                Redis 5.0 instances but not by Redis 3.0 instance.
                The valid commands that can be renamed are: command, keys, flushdb, flushall and hgetall.
            replica_count: '- Indicates the number of replicas in the instance.'
            reserved_ips: |-
                - (Optional, List) Specifies IP addresses to retain. Mandatory during cluster scale-in. If this
                parameter is not set, the system randomly deletes unnecessary shards.
            security_group_id: |-
                - (Optional, String) The ID of the security group which the instance belongs to.
                This parameter is mandatory for Memcached and Redis 3.0 version.
            security_group_name: '- The name of security group which the instance belongs to.'
            sharding_count: '- Indicates the number of shards in a cluster instance.'
            ssl_enable: '- (Optional, Bool) Specifies whether to enable the SSL. Value options: true, false.'
            status: '- Cache instance status. The valid values are as follows:'
            subnet_cidr: '- Indicates the subnet segment.'
            subnet_id: |-
                - (Required, String, ForceNew) The ID of subnet which the instance belongs to.
                Changing this creates a new instance resource.
            subnet_name: '- The name of subnet which the instance belongs to.'
            tags: '- (Optional, Map) The key/value pairs to associate with the dcs instance.'
            template_id: |-
                - (Optional, String, ForceNew) The Parameter Template ID.
                Changing this creates a new instance resource.
            transparent_client_ip_enable: '- Indicates whether client IP pass-through is enabled.'
            update: '- Default is 120 minutes.'
            used_memory: '- Size of the used memory. Unit: MB.'
            vpc_id: |-
                - (Required, String, ForceNew) The ID of VPC which the instance belongs to.
                Changing this creates a new instance resource.
            vpc_name: '- The name of VPC which the instance belongs to.'
            whitelist: |-
                - (Optional, List) Specifies the IP addresses which can access the instance.
                This parameter is valid for Redis 4.0 and 5.0 versions. The structure is described below.
            whitelist.group_name: '- (Required, String) Specifies the name of IP address group.'
            whitelist.ip_list: |-
                - (Required, List) Specifies the list of IP address or CIDR which can be whitelisted for an instance.
                The maximum is 20.
        importStatements: []
    opentelekomcloud_dds_backup_v3:
        subCategory: Document Database Service (DDS)
        description: Manages a DDS backup resource within OpenTelekomCloud.
        name: opentelekomcloud_dds_backup_v3
        title: opentelekomcloud_dds_backup_v3
        examples:
            - name: backup
              manifest: |-
                {
                  "instance_id": "${var.instance_id}",
                  "name": "${var.name}"
                }
              references:
                instance_id: var.instance_id
                name: var.name
        argumentDocs:
            BUILDING: ': Backup in progress'
            COMPLETED: ': Backup completed'
            DISABLED: ': Backup being deleted'
            FAILED: ': Backup failed'
            Manual: ': indicates manual full backup.'
            begin_time: '- Indicates the start time of the backup. The format is yyyy-mm-dd hh:mm:ss. The value is in UTC format.'
            create: '- Default is 30 minutes.'
            datastore: |-
                - Indicates the database version.
                The datastore structure is documented below.
            datastore.storage_engine: '- Indicates the database storage engine.'
            datastore.type: '- Indicates the DB engine.'
            datastore.version: '- Indicates the database version.'
            delete: '- Default is 10 minutes.'
            description: '- (Optional, String, ForceNew) Specifies the manual backup description.'
            end_time: '- Indicates the end time of the backup. The format is yyyy-mm-dd hh:mm:ss. The value is in UTC format.'
            id: '- The resource ID.'
            instance_id: '- (Required, String, ForceNew) Specifies the ID of a DDS instance.'
            instance_name: '- Indicates the name of a DDS instance.'
            name: |-
                - (Required, String, ForceNew) Specifies the manual backup name.
                The value must be 4 to 64 characters in length and start with a letter (from A to Z or from a to z).
                It is case-sensitive and can contain only letters, digits (from 0 to 9), hyphens (-), and underscores (_).
            region: '- Indicates the region in which resource was created.'
            size: '- Indicates the backup size in KB.'
            status: '- Indicates the backup status. Valid value:'
            type: '- Indicates the backup type. Valid value:'
        importStatements: []
    opentelekomcloud_dds_instance_v3:
        subCategory: Document Database Service (DDS)
        description: Manages a DDS Instance resource within OpenTelekomCloud.
        name: opentelekomcloud_dds_instance_v3
        title: opentelekomcloud_dds_instance_v3
        examples:
            - name: instance
              manifest: |-
                {
                  "availability_zone": "${var.availability_zone}",
                  "datastore": [
                    {
                      "storage_engine": "wiredTiger",
                      "type": "DDS-Community",
                      "version": "3.4"
                    }
                  ],
                  "flavor": [
                    {
                      "num": 1,
                      "size": 30,
                      "spec_code": "dds.mongodb.s2.medium.4.repset",
                      "storage": "ULTRAHIGH",
                      "type": "replica"
                    }
                  ],
                  "mode": "ReplicaSet",
                  "name": "dds-instance",
                  "password": "5ecuredPa55w0rd@",
                  "security_group_id": "${var.security_group_id}",
                  "subnet_id": "${var.subnet_id}",
                  "tags": {
                    "foo": "bar",
                    "new_test": "new_test2"
                  },
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone
                security_group_id: var.security_group_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
            - name: instance
              manifest: |-
                {
                  "availability_zone": "${var.availability_zone}",
                  "backup_strategy": [
                    {
                      "keep_days": "8",
                      "start_time": "08:00-09:00"
                    }
                  ],
                  "datastore": [
                    {
                      "storage_engine": "wiredTiger",
                      "type": "DDS-Community",
                      "version": "3.4"
                    }
                  ],
                  "flavor": [
                    {
                      "num": 2,
                      "spec_code": "dds.mongodb.s2.medium.4.mongos",
                      "type": "mongos"
                    },
                    {
                      "num": 2,
                      "size": 20,
                      "spec_code": "dds.mongodb.s2.medium.4.shard",
                      "storage": "ULTRAHIGH",
                      "type": "shard"
                    },
                    {
                      "num": 1,
                      "size": 20,
                      "spec_code": "dds.mongodb.s2.large.2.config",
                      "storage": "ULTRAHIGH",
                      "type": "config"
                    }
                  ],
                  "mode": "Sharding",
                  "name": "dds-instance",
                  "password": "5ecuredPa55w0rd2@",
                  "security_group_id": "${var.security_group_id}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone
                security_group_id: var.security_group_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
            - name: instance
              manifest: |-
                {
                  "availability_zone": "${var.availability_zone}",
                  "datastore": [
                    {
                      "storage_engine": "wiredTiger",
                      "type": "DDS-Community",
                      "version": "3.4"
                    }
                  ],
                  "flavor": [
                    {
                      "num": 1,
                      "size": 30,
                      "spec_code": "dds.mongodb.s2.medium.4.single",
                      "storage": "ULTRAHIGH",
                      "type": "single"
                    }
                  ],
                  "mode": "Single",
                  "name": "dds-instance",
                  "password": "5ecuredPa55w0rd@",
                  "security_group_id": "${var.security_group_id}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone
                security_group_id: var.security_group_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
        argumentDocs:
            "0": ', the automated backup policy is not set.'
            HH: value must be 1 greater than the hh value.
            availability_zone: '- (Required, String, ForceNew) Specifies the ID of the availability zone.'
            backup_strategy: |-
                - (Optional, List) Specifies the advanced backup policy. The structure is
                described below.
            backup_strategy .keep_days: |-
                - (Required, Int) Specifies the number of days to retain the generated backup files. The
                value range is from 0 to 732.
            backup_strategy .period: |-
                - (Optional, String) Specifies the backup cycle. Data will be automatically backed up on the
                selected days every week.
            backup_strategy .start_time: |-
                - (Required, String) Specifies the backup time window. Automated backups will be triggered
                during the backup time window. The value cannot be empty. It must be a valid value in the
                "hh:mm-HH:MM" format. The current time is in the UTC format.
            cluster: |-
                instance, the storage space of a shard node can be 10 to 1000 GB, and the config
                storage space is 20 GB. This parameter is invalid for mongos nodes. Therefore, you do not need
                to specify the storage space for mongos nodes.
            config: ': The value is 1.'
            create: '- Default is 30 minute.'
            created_at: '- Indicates the creation time.'
            datastore: |-
                - (Required, List, ForceNew) Specifies database information. The structure is described
                below.
            datastore.storage_engine: |-
                - (Optional, String, ForceNew) Specifies the storage engine. Currently, DDS supports the WiredTiger and RocksDB
                storage engine. The values are wiredTiger, rocksDB.
                WiredTiger engine supports versions 3.2, 3.4, 4.0 while RocksDB supports versions 4.2, 4.4
            datastore.type: |-
                - (Required, String, ForceNew) Specifies the database type. DDS Community Edition is supported.
                The value is DDS-Community.
            datastore.version: |-
                - (Required, String, ForceNew) Specifies the database version.
                The values are 3.2, 3.4, 4.0, 4.2, 4.4.
            db_username: '- Indicates the DB Administator name.'
            delete: '- Default is 30 minute.'
            disk_encryption_id: '- (Optional, String, ForceNew) Specifies the disk encryption ID of the instance.'
            flavor: |-
                - (Required, List, ForceNew) Specifies the flavor information. The structure is described below.
                Changing this creates a new instance.
            flavor.num: '- (Required, Int) Specifies the node quantity. Valid value:'
            flavor.size: '- (Optional, Int) Specifies the disk size. The value must be a multiple of 10. The unit is GB.'
            flavor.spec_code: '- (Required, String) Specifies the resource specification code.'
            flavor.storage: '- (Optional, String, ForceNew) Specifies the disk type. Valid value: ULTRAHIGH which indicates the type SSD.'
            flavor.type: '- (Required, String, ForceNew) Specifies the node type. Valid value:'
            keep_days: to 0, this parameter is no need to set.
            mm: and MM must be the same and must be set to any of the following 00, 15, 30, or 45.
            mode: '- (Required, String, ForceNew) Specifies the mode of the database instance.'
            mongos: ', shard, or config.'
            name: |-
                - (Required, String) Specifies the DB instance name. The DB instance name of the same
                type is unique in the same tenant.
            nodes: '- Indicates the instance nodes information. Structure is documented below.'
            nodes.id: '- Indicates the node ID.'
            nodes.name: '- Indicates the node name.'
            nodes.private_ip: |-
                - Indicates the private IP address of a node. This parameter is valid only for
                mongos nodes, replica set instances.
            nodes.public_ip: |-
                - Indicates the EIP that has been bound on a node. This parameter is valid only for
                mongos nodes of cluster instances, primary nodes and secondary nodes of replica set instances.
            nodes.role: '- Indicates the node role.'
            nodes.status: '- Indicates the node status.'
            nodes.type: '- Indicates the node type.'
            password: '- (Required, String) Specifies the Administrator password of the database instance.'
            pay_mode: '- Indicates the billing mode. 0: indicates the pay-per-use billing mode.'
            port: |-
                - (Optional, Int) Specifies the database access port. The valid values are range from 2100 to 9500 and
                27017, 27018, 27019. Defaults to 8635.
            region: '- (Optional, String, ForceNew) Specifies the region of the DDS instance.'
            replica: .
            replica set: instance, the value ranges from 10 to 2000.
            security_group_id: '- (Required, String) Specifies the security group ID of the DDS instance.'
            shard: ': The value ranges from 2 to 16.'
            single: .
            ssl: |-
                - (Optional, Bool) Specifies whether to enable or disable SSL. Defaults to true.
                -> The instance will be restarted in the background when switching SSL. Please operate with caution.
            status: '- Indicates the DB instance status.'
            subnet_id: '- (Required, String, ForceNew) Specifies the subnet Network ID.'
            tags: |-
                - (Optional, Map) Tags key/value pairs to associate with the volume.
                Changing this updates the existing volume tags.
            time_zone: '- Indicates the time zone.'
            updated_at: '- Indicates the update time.'
            vpc_id: '- (Required, String, ForceNew) Specifies the VPC ID.'
        importStatements:
            - terraform import opentelekomcloud_dds_instance_v3.instance_1 c1851195-cdcb-4d23-96cb-032e6a3ee667
    opentelekomcloud_deh_host_v1:
        subCategory: Dedicated Host (DEH)
        description: Manages a DEH Host resource within OpenTelekomCloud.
        name: opentelekomcloud_deh_host_v1
        title: opentelekomcloud_deh_host_v1
        examples:
            - name: deh_host
              manifest: |-
                {
                  "auto_placement": "on",
                  "availability_zone": "eu-de-02",
                  "host_type": "h1",
                  "name": "high_performance_deh",
                  "tags": {
                    "muh": "kuh"
                  }
                }
        argumentDocs:
            auto_placement: '- (Optional, String) Allows a instance to be automatically placed onto the available Dedicated Hosts. The default value is on.'
            availability_zone: '- (Required, String, ForceNew) The Availability Zone to which the Dedicated Host belongs.'
            available_instance_capacities: '- The VM flavors placed on the Dedicated Host.'
            available_memory: '- The size of available memory for the Dedicated Host.'
            available_vcpus: '- The number of available vCPUs for the Dedicated Host.'
            cores: '-  The number of host physical cores.'
            eu-ch2: ': s3.'
            eu-de: ': c4, s2-medium, m3, c3 and s2.'
            eu-nl: ': i3_pro, i3, m4, s3 and c4.'
            host_type: |-
                - (Required, String, ForceNew) The Dedicated Host type.
                Expected values are:
            host_type_name: '-  The name of the Dedicated Host type.'
            instance_total: '- The number of the placed VMs.'
            instance_uuids: '- The VMs started on the Dedicated Host.'
            memory: '- The size of host physical memory (MB).'
            name: '- (Required, String) The name of the Dedicated Host.'
            sockets: '-  The number of host physical sockets.'
            status: '- Specifies the Dedicated Host status.'
            tags: '- (Optional, Map) Tags key/value pairs to associate with Host.'
            vcpus: '- The number of host vCPUs.'
        importStatements: []
    opentelekomcloud_direct_connect_v2:
        subCategory: Direct Connect (DCaaS)
        description: Manages a Direct Connect resource within OpenTelekomCloud.
        name: opentelekomcloud_direct_connect_v2
        title: opentelekomcloud_direct_connect_v2
        examples:
            - name: direct_connect
              manifest: |-
                {
                  "admin_state_up": true,
                  "bandwidth": 100,
                  "location": "location",
                  "name": "direct_connect",
                  "port_type": "port_type",
                  "provider_name": "provider_name"
                }
        argumentDocs:
            admin_state_up: (Boolean, ForceNew)  - Specifies the administrative status of the connection. The value can be true or false.
            applicant: (String) - This is a reserved field, which is not used currently.
            apply_time: (String) - Specifies the time when the connection was requested.
            bandwidth: (Number) - Specifies the bandwidth of the connection in Mbit/s.
            building_line_product_id: (String) - This is a reserved field, which is not used currently.
            cable_label: (String) - This is a reserved field, which is not used currently.
            charge_mode: (String, ForceNew) - Specifies the billing mode. The value can only be port for operations connections.
            create_time: (String) - Specifies the time when the connection is created.
            delete_time: (String) - Specifies the time when the connection was deleted.
            description: (String) - Provides supplementary information about the connection.
            device_id: (String, ForceNew) - Specifies the gateway device ID of the connection.
            email: (String) - This is a reserved field, which is not used currently.
            hosting_id: (String, ForceNew) - Specifies the ID of the operations connection on which the hosted connection is created.
            id: (String) - Specifies the connection ID.
            interface_name: (String, ForceNew) - Specifies the name of the interface accessed by the connection.
            lag_id: (String) - This is a reserved field, which is not used currently.
            last_onestop_product_id: (String) - This is a reserved field, which is not used currently.
            location: (String, ForceNew) - Specifies the connection access location.
            mobile: (String) - This is a reserved field, which is not used currently.
            name: (String) - Specifies the connection name.
            onestop_product_id: (String) - This is a reserved field, which is not used currently.
            order_id: (String, ForceNew) - Specifies the connection order ID, which is used to support duration-based billing and identify user orders.
            peer_location: (String, ForceNew) - Specifies the physical location of the peer device accessed by the connection, specific to the street or data center name.
            peer_port_type: (String) - This is a reserved field, which is not used currently.
            peer_provider: (String) - This is a reserved field, which is not used currently.
            period_num: (Number) - This is a reserved field, which is not used currently.
            period_type: (Number) - This is a reserved field, which is not used currently.
            port_type: (String, ForceNew) - Specifies the type of the port used by the connection. The value can be 1G, 10G, 40G, or 100G.
            product_id: (String, ForceNew) - Specifies the product ID corresponding to the connection's order, which is used to custom billing policies such as duration-based packages.
            provider_name: (String, ForceNew) - Specifies the carrier who provides the leased line.
            provider_status: (String) - Specifies the status of the carrier's leased line. The value can be ACTIVE or DOWN.
            reason: (String) - This is a reserved field, which is not used currently.
            redundant_id: (String, ForceNew) - Specifies the ID of the redundant connection using the same gateway.
            region_id: (String) - Specifies the region ID.
            service_key: (String) - This is a reserved field, which is not used currently.
            spec_code: (String) - This is a reserved field, which is not used currently.
            status: |-
                (String, ForceNew) - Specifies the connection status.
                The value can be: ACTIVE, DOWN, BUILD, ERROR, PENDING_DELETE, DELETED, APPLY, DENY, PENDING_PAY, PAID, ORDERING, ACCEPT, or REJECTED.
            tenant_id: (String, ForceNew) - Specifies the project ID.
            type: (String, ForceNew) - Specifies the connection type. The value can only be hosted.
            vgw_type: (String) - Specifies the type of the gateway. Currently, only the default type is supported.
            vlan: (Number, ForceNew) - Specifies the VLAN ID of the connection.
        importStatements: []
    opentelekomcloud_dis_app_v2:
        subCategory: Data Ingestion Service (DIS)
        description: Manages a DIS App resource within OpenTelekomCloud.
        name: opentelekomcloud_dis_app_v2
        title: opentelekomcloud_dis_app_v2
        examples:
            - name: app_1
              manifest: |-
                {
                  "name": "app_name"
                }
        argumentDocs:
            checkpoint_type: ': Type of the checkpoint.'
            commit_checkpoint_stream_names: '- List of associated streams.'
            created: '- Time when the app is created. The value is a timestamp.'
            earliest_offset: ': Partition data earliest offset'
            id: '- Unique identifier of the app.'
            latest_offset: ': Partition data latest offset'
            name: |-
                - (Required) Name of the consumer application to be created
                The application name contains 1 to 200 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
            partition_consuming_states: '- Associated partitions details.'
            sequence_number: ': Partition Sequence Number'
            status: ': Partition Status, can be:'
        importStatements:
            - terraform import opentelekomcloud_dis_app_v2.app_1 app_name
    opentelekomcloud_dis_checkpoint_v2:
        subCategory: Data Ingestion Service (DIS)
        description: Manages a DIS Checkpoint resource within OpenTelekomCloud.
        name: opentelekomcloud_dis_checkpoint_v2
        title: opentelekomcloud_dis_checkpoint_v2
        examples:
            - name: checkpoint_1
              manifest: |-
                {
                  "app_name": "${opentelekomcloud_dis_app_v2.app_1.name}",
                  "metadata": "my_first_checkpoint",
                  "partition_id": "0",
                  "sequence_number": "0",
                  "stream_name": "${opentelekomcloud_dis_stream_v2.stream_1.name}"
                }
              references:
                app_name: opentelekomcloud_dis_app_v2.app_1.name
                stream_name: opentelekomcloud_dis_stream_v2.stream_1.name
              dependencies:
                opentelekomcloud_dis_app_v2.app_1: |-
                    {
                      "name": "my_app"
                    }
                opentelekomcloud_dis_stream_v2.stream_1: |-
                    {
                      "auto_scale_max_partition_count": 4,
                      "auto_scale_min_partition_count": 1,
                      "compression_format": "zip",
                      "data_type": "BLOB",
                      "name": "my_stream",
                      "partition_count": 3,
                      "retention_period": 24,
                      "stream_type": "COMMON",
                      "tags": {
                        "foo": "bar"
                      }
                    }
        argumentDocs:
            app_name: |-
                - (Required) Name of the consumer application to be created
                The application name contains 1 to 200 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
            checkpoint_type: |-
                - (Required) Type of the checkpoint. LAST_READ: Only sequence numbers are recorded in databases.
                Default value: LAST_READ
            metadata: |-
                - (Optional) Metadata information of the consumer application.
                Maximum length: 1000
            partition_id: '- (Required) Partition ID of the stream The value can be in either of the following formats:'
            sequence_number: |-
                - (Required) Sequence number to be submitted, which is used to record the consumption
                checkpoint of the stream. Ensure that the sequence number is within the valid range.
            stream_name: |-
                - (Required) Name of the stream. The stream name can contain 1 to 64 characters,
                including letters, digits, underscores (_), and hyphens (-).
        importStatements: []
    opentelekomcloud_dis_dump_task_v2:
        subCategory: Data Ingestion Service (DIS)
        description: Manages a DIS Dump Task resource within OpenTelekomCloud.
        name: opentelekomcloud_dis_dump_task_v2
        title: opentelekomcloud_dis_dump_task_v2
        examples:
            - name: task_1
              manifest: |-
                {
                  "destination": "OBS",
                  "obs_destination_descriptor": [
                    {
                      "agency_name": "dis_admin_agency",
                      "consumer_strategy": "LATEST",
                      "deliver_time_interval": 30,
                      "destination_file_type": "text",
                      "file_prefix": "_pf",
                      "obs_bucket_path": "${opentelekomcloud_obs_bucket.bucket.bucket}",
                      "partition_format": "yyyy/MM/dd/HH/mm",
                      "record_delimiter": "|",
                      "task_name": "my_task"
                    }
                  ],
                  "stream_name": "${opentelekomcloud_dis_stream_v2.stream_1.name}"
                }
              references:
                obs_destination_descriptor.obs_bucket_path: opentelekomcloud_obs_bucket.bucket.bucket
                stream_name: opentelekomcloud_dis_stream_v2.stream_1.name
              dependencies:
                opentelekomcloud_dis_app_v2.app_1: |-
                    {
                      "name": "my_app"
                    }
                opentelekomcloud_dis_stream_v2.stream_1: |-
                    {
                      "auto_scale_max_partition_count": 4,
                      "auto_scale_min_partition_count": 1,
                      "compression_format": "zip",
                      "data_type": "BLOB",
                      "name": "my_stream",
                      "partition_count": 3,
                      "retention_period": 24,
                      "stream_type": "COMMON",
                      "tags": {
                        "foo": "bar"
                      }
                    }
                opentelekomcloud_obs_bucket.bucket: |-
                    {
                      "acl": "private",
                      "bucket": "my-dis-bucket",
                      "storage_class": "STANDARD"
                    }
        argumentDocs:
            ABNORMAL: ': deleted'
            DELETE: ': deleted'
            ERROR: ': creating'
            PAUSED: ': deleting'
            RUNNING: ': deleted'
            STARTING: ': running'
            action: '- (Optional) Dump task operation. The value can only be start or stop.'
            agency_name: |-
                - (Required) Name of the agency created on IAM. DIS uses an agency to access your specified resources.
                The parameters for creating an agency are as follows:
            consumer_strategy: |-
                - (Optional) Offset.
                LATEST: Maximum offset, indicating that the latest data will be extracted.
                TRIM_HORIZON: Minimum offset, indicating that the earliest data will be extracted.
            created_at: '- Time when the dump task is created.'
            deliver_time_interval: |-
                - (Required) User-defined interval at which data is imported from the current DIS stream into OBS.
                If no data is pushed to the DIS stream during the current interval, no dump file package will be generated. Value range: 30-900.
            destination: |-
                - (Required) Dump destination. Possible values:
                OBS: Data is dumped to OBS.
            destination_file_type: '- (Optional) Dump file format. Possible values: text'
            file_prefix: |-
                - (Optional) Directory to store files that will be dumped to OBS.
                Different directory levels are separated by slashes (/) and cannot start with slashes.
            hash_range: ': Possible value range of the hash key used by the partition.'
            id: ': Unique identifier of the partition.'
            last_transfer_timestamp: '- Latest dump time of the dump task.'
            name: '- Name of the dump task.'
            obs_bucket_path: '- (Required) Name of the OBS bucket used to store data from the DIS stream.'
            obs_destination_descriptor: '- (Optional) Parameter list of OBS to which data in the DIS stream will be dumped.'
            obs_processing_schema: |-
                - (Optional) Dump time directory generated based on the timestamp
                of the source data and the configured partition_format.
                Directory structure of the object file written into OBS.
                The directory structure is in the format of yyyy/MM/dd/HH/mm.
            parent_partitions: ': Parent partition.'
            partition_format: |-
                - (Optional) Directory structure of the object file written into OBS.
                The directory structure is in the format of yyyy/MM/dd/HH/mm (time at which the dump task was created).
                Possible values:
            partitions: '- List of partition dump details.'
            record_delimiter: '- (Optional) Delimiter for the dump file, which is used to separate the user data that is written into the dump file.'
            sequence_number_range: ': Sequence number range of the partition.'
            status: '- Current status of the stream, can be:'
            stream_name: '- (Required) Name of the stream.'
            task_id: '- ID of the dump task.'
            task_name: '- (Required) Name of the dump task. The task name consists of letters, digits, hyphens (-), and underscores (_). It must be a string of 1 to 64 characters.'
            timestamp_format: |-
                - (Required) OBS directory generated based on the timestamp format.
                This parameter is mandatory when the timestamp type of the source data is String.
            timestamp_name: '- (Required) Attribute name of the source data timestamp.'
            timestamp_type: |-
                - (Required) Type of the source data timestamp.
                Possible values:
        importStatements: []
    opentelekomcloud_dis_stream_v2:
        subCategory: Data Ingestion Service (DIS)
        description: Manages a DIS Stream resource within OpenTelekomCloud.
        name: opentelekomcloud_dis_stream_v2
        title: opentelekomcloud_dis_stream_v2
        examples:
            - name: stream_1
              manifest: |-
                {
                  "auto_scale_max_partition_count": 4,
                  "auto_scale_min_partition_count": 1,
                  "compression_format": "zip",
                  "data_type": "BLOB",
                  "name": "MyStream",
                  "partition_count": 3,
                  "retention_period": 24,
                  "stream_type": "COMMON",
                  "tags": {
                    "foo": "bar"
                  }
                }
        argumentDocs:
            ADVANCED: ': an advanced stream with a bandwidth of 5 MB/s'
            COMMON: ': a common stream with a bandwidth of 1 MB/s'
            CREATING: ': creating'
            RUNNING: ': running'
            TERMINATED: ': deleted'
            TERMINATING: ': deleting'
            auto_scale_max_partition_count: '- (Optional) Maximum number of partitions for automatic scale-up when auto-scaling is enabled.'
            auto_scale_min_partition_count: |-
                - (Optional) Minimum number of partitions for automatic scale-down
                when auto-scaling is enabled. Minimum: 1.
            compression_format: |-
                - (Optional) Data compression type. The following types are available:
                snappy, gzip, zip. Data is not compressed by default.
            created: '- Time when the stream is created. The value is a timestamp.'
            data_type: |-
                - (Optional) Source data type.
                BLOB: a collection of binary data stored as a single entity in a database management system.
                Default value: BLOB.
            hash_range: ': Possible value range of the hash key used by the partition.'
            id: ': Unique identifier of the partition.'
            name: |-
                - (Required) Name of the stream. The stream name can contain 1 to 64 characters,
                including letters, digits, underscores (_), and hyphens (-).
            parent_partitions: ': Parent partition.'
            partition_count: '- (Required) Number of partitions. Partitions are the base throughput unit of a DIS stream.'
            partitions: '- Stream partitions details.'
            readable_partition_count: '- Total number of readable partitions (including partitions in ACTIVE and DELETED state).'
            retention_period: |-
                - (Optional) Period of time for which data is retained in the stream.
                Value range: 24-72 Unit: hour. If this parameter is left blank, the default value is used.
                Maximum: 72
                Default: 24
            sequence_number_range: ': Sequence number range of the partition.'
            status: '- Current status of the stream, can be:'
            stream_id: '- Unique identifier of the stream.'
            stream_type: '- (Optional) Stream type.'
            tags: '- (Optional) Tags key/value pairs to associate with the instance.'
            writable_partition_count: '- Total number of writable partitions (including partitions in ACTIVE state only).'
        importStatements:
            - terraform import opentelekomcloud_dis_stream_v2.stream_1 my_stream
    opentelekomcloud_dms_dedicated_instance_v2:
        subCategory: Distributed Message Service (DMS)
        description: Manages an up-to-date DMS Instance v2 resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_dedicated_instance_v2
        title: opentelekomcloud_dms_dedicated_instance_v2
        examples:
            - name: test
              manifest: |-
                {
                  "access_user": "user",
                  "available_zones": [
                    "${data.opentelekomcloud_dms_az_v1.az_1.id}"
                  ],
                  "broker_num": 3,
                  "engine_version": "2.7",
                  "flavor_id": "${data.opentelekomcloud_dms_flavor_v2.test.flavor_id}",
                  "name": "kafka_test",
                  "network_id": "${var.subnet_id}",
                  "password": "${var.access_password}",
                  "security_group_id": "${var.security_group_id}",
                  "ssl_enable": true,
                  "storage_space": 600,
                  "storage_spec_code": "${data.opentelekomcloud_dms_flavor_v2.test.flavors[0].ios[0].storage_spec_code}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                available_zones: data.opentelekomcloud_dms_az_v1.az_1.id
                flavor_id: data.opentelekomcloud_dms_flavor_v2.test.flavor_id
                network_id: var.subnet_id
                password: var.access_password
                security_group_id: var.security_group_id
                storage_spec_code: data.opentelekomcloud_dms_flavor_v2.test.flavors[0].ios[0].storage_spec_code
                vpc_id: var.vpc_id
            - name: instance_1
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "password",
                        "used_storage_space",
                        "cross_vpc_accesses",
                        "publicip_id"
                      ]
                    }
                  ]
                }
        argumentDocs:
            "300": to 300,000 GB
            access_user: |-
                - (Optional, String, ForceNew) Specifies the username of SASL_SSL user. A username consists of 4
                to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
            arch_type: |-
                - (Optional, String, ForceNew) Specifies the CPU architecture. Valid value is X86.
                Changing this creates a new instance resource.
            available_zones: |-
                - (Optional, List, ForceNew) Indicates the ID of an AZ. The parameter value can not be
                left blank or an empty array. For details, see section
                Querying AZ Information.
            broker_num: '- (Required, Int) Specifies the broker numbers.'
            cert_replaced: '- Indicates whether the certificate can be replaced.'
            connect_address: '- Indicates the IP address of the DMS Kafka instance.'
            connector_node_num: '- Indicates the number of connector node.'
            create: '- Default is 50 minutes.'
            created_at: '- Indicates the create time.'
            cross_vpc_accesses: |-
                - (Optional, List) Specifies the cross-VPC access information.
                The object structure is documented below.
            cross_vpc_accesses.advertised_ip: '- (Optional, String) The advertised IP Address or domain name.'
            cross_vpc_accesses.listener_ip: '- The listener IP address.'
            cross_vpc_accesses.port: '- The port number.'
            cross_vpc_accesses.port_id: '- The port ID associated with the address.'
            delete: '- Default is 15 minutes.'
            description: |-
                - (Optional, String) Specifies the description of the DMS Kafka instance. It is a character string
                containing not more than 1,024 characters.
            disk_encrypted_enable: '- (Optional, Bool, ForceNew) Indicates whether to enable disk encryption.'
            disk_encrypted_key: '- (Optional, String, ForceNew) Disk encryption key. If disk encryption is not enabled, this parameter is left blank.'
            dumping: '- Whether message dumping(smart connect) is enabled.'
            enable_publicip: '- (Optional, Bool, ForceNew) Whether to enable public access. By default, public access is disabled.'
            enabled_mechanisms: |-
                - (Optional, List, ForceNew) Specifies the authentication mechanisms to use after SASL is
                enabled. Value options:
            engine: '- Indicates the message engine.'
            engine_version: |-
                - (Required, String, ForceNew) Specifies the version of the Kafka engine,
                such as 1.1.0, 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
            flavor_id: |-
                - (Optional, String) Specifies the Kafka [flavor ID](https://docs.otc.t-systems.com/distributed-message-service/api-ref/apis_v2_recommended/other_apis/querying_product_specifications_list.html#listengineproducts,
                e.g. c6.2u4g.cluster. This parameter and product_id are alternative.
            id: '- Specifies a resource ID in UUID format.'
            ipv6_enable: |-
                - (Optional, Bool, ForceNew) Specifies whether to enable IPv6. Defaults to false.
                Changing this creates a new instance resource.
            maintain_begin: |-
                - (Optional, String) Specifies the time at which a maintenance time window starts. Format: HH:mm. The
                start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
                window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters maintain_begin
                and maintain_end must be set in pairs. If parameter maintain_begin is left blank, parameter maintain_end is also
                blank. In this case, the system automatically allocates the default start time 02:00.
            maintain_end: |-
                - (Optional, String) Specifies the time at which a maintenance time window ends. Format: HH:mm. The
                start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
                window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
                02:00. Parameters maintain_begin
                and maintain_end must be set in pairs. If parameter maintain_end is left blank, parameter
                maintain_begin is also blank. In this case, the system automatically allocates the default end time 06:00.
            name: |-
                - (Required, String) Specifies the name of the DMS Kafka instance. An instance name starts with a letter,
                consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
            network_id: |-
                - (Required, String, ForceNew) Specifies the ID of a subnet. Changing this creates a new instance
                resource.
            new_tenant_ips: '- (Optional, List) Specifies the IPv4 private IP addresses for the new brokers.'
            node_num: '- Indicates the node quantity.'
            partition_num: '- Indicates the number of partitions in Kafka instance.'
            password: |-
                - (Optional, String) Specifies the password of SASL_SSL user. A password must meet the following
                complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
                lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\|[{}]:'",<.>/?).
            pod_connect_address: '- Indicates the connection address on the tenant side.'
            port: '- Indicates the port number of the DMS Kafka instance.'
            public_bandwidth: '- Indicates the public network access bandwidth.'
            public_ip_address: '- Indicates the public IP addresses list of the instance.'
            region: '- The region in which DMS Kafka instance is created.'
            resource_spec_code: '- Indicates a resource specifications identifier.'
            retention_policy: |-
                - (Optional, String) Specifies the action to be taken when the memory usage reaches the disk
                capacity threshold. The valid values are as follows:
            security_group_id: '- (Required, String) Specifies the ID of a security group.'
            security_protocol: '- (Optional, String, ForceNew) Specifies the protocol to use after SASL is enabled. Value options:'
            ssl_enable: |-
                - (Optional, Bool, ForceNew) Specifies whether the Kafka SASL_SSL is enabled.
                Changing this creates a new resource.
            ssl_two_way_enable: '- Indicates whether to enable two-way authentication.'
            status: '- Indicates the status of the DMS Kafka instance.'
            storage_resource_id: '- Indicates the storage resource ID.'
            storage_space: |-
                - (Required, Int) Specifies the message storage capacity, the unit is GB.
                The storage spaces corresponding to the product IDs are as follows:
            storage_spec_code: |-
                - (Required, String, ForceNew) Specifies the storage I/O specification.
                The valid values are as follows:
            storage_type: '- Indicates the storage type.'
            tags: '- (Optional, Map) The key/value pairs to associate with the DMS Kafka instance.'
            type: '- Indicates the DMS Kafka instance type.'
            update: '- Default is 50 minutes.'
            used_storage_space: '- Indicates the used message storage space. Unit: GB'
            user_id: '- Indicates the ID of the user who created the DMS Kafka instance'
            user_name: '- Indicates the name of the user who created the DMS Kafka instance'
            vpc_id: '- (Required, String, ForceNew) Specifies the ID of a VPC. Changing this creates a new instance resource.'
        importStatements: []
    opentelekomcloud_dms_instance_v1:
        subCategory: Distributed Message Service (DMS)
        description: Manages a DMS Instance v1 resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_instance_v1
        title: opentelekomcloud_dms_instance_v1
        examples:
            - name: instance_1
              manifest: |-
                {
                  "access_user": "${var.access_user}",
                  "available_zones": [
                    "${data.opentelekomcloud_dms_az_v1.az_1.id}"
                  ],
                  "engine": "kafka",
                  "engine_version": "${data.opentelekomcloud_dms_product_v1.product_1.version}",
                  "name": "kafka-test",
                  "partition_num": "${data.opentelekomcloud_dms_product_v1.product_1.partition_num}",
                  "password": "${var.password}",
                  "product_id": "${data.opentelekomcloud_dms_product_v1.product_1.id}",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}",
                  "specification": "${data.opentelekomcloud_dms_product_v1.product_1.bandwidth}",
                  "storage_space": "${data.opentelekomcloud_dms_product_v1.product_1.storage}",
                  "storage_spec_code": "${data.opentelekomcloud_dms_product_v1.product_1.storage_spec_code}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                access_user: var.access_user
                available_zones: data.opentelekomcloud_dms_az_v1.az_1.id
                engine_version: data.opentelekomcloud_dms_product_v1.product_1.version
                partition_num: data.opentelekomcloud_dms_product_v1.product_1.partition_num
                password: var.password
                product_id: data.opentelekomcloud_dms_product_v1.product_1.id
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
                specification: data.opentelekomcloud_dms_product_v1.product_1.bandwidth
                storage_space: data.opentelekomcloud_dms_product_v1.product_1.storage
                storage_spec_code: data.opentelekomcloud_dms_product_v1.product_1.storage_spec_code
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "secgroup_1",
                      "name": "secgroup_1"
                    }
        argumentDocs:
            "22:00": ', 02:00, 06:00, 10:00, 14:00, or 18:00.'
            access_user: |-
                - (Optional) Indicates a username. A username consists of 4 to 64 characters
                and supports only letters, digits, and hyphens (-).
            available_zones: |-
                - (Required) Indicates the ID of an AZ. The parameter value can not be
                left blank or an empty array. For details, see section
                Querying AZ Information.
            connect_address: '- Indicates the IP address of an instance.'
            created_at: |-
                - Indicates the time when an instance is created. The time is in the format
                of timestamp, that is, the offset milliseconds from 1970-01-01 00:00:00 UTC to the specified time.
            description: |-
                - (Optional) Indicates the description of an instance. It is a character
                string containing not more than 1024 characters.
            engine: '- (Required) Indicates a message engine. Only kafka is supported now.'
            engine_version: |-
                - (Required) Indicates the version of a message engine.
                Only 2.3.0 is supported now.
            instance_id: '- Indicates the ID of an instance.'
            maintain_begin: |-
                - (Optional) Indicates the time at which a maintenance time window starts.
                Format: HH:mm.
            maintain_end: |-
                - (Optional) Indicates the time at which a maintenance time window ends.
                Format: HH:mm.
            name: |-
                - (Required) Indicates the name of an instance. An instance name starts with a letter,
                consists of 4 to 64 characters, and supports only letters, digits, and hyphens (-).
            partition_num: |-
                - (Optional) This parameter is mandatory when a kafka instance is created.
                Indicates the maximum number of topics in a Kafka instance.
            password: |-
                - (Optional) Indicates the password of an instance. An instance password
                must meet the following complexity requirements: Must be 8 to 32 characters long.
                Must contain at least 2 of the following character types: lowercase letters, uppercase
                letters, digits, and special characters (~!@#$%^&*()-_=+\|[{}]:'",<.>/?).
            port: '- Indicates the port number of an instance.'
            produce_reject: ': New messages cannot be created'
            product_id: '- (Required) Indicates a product ID.'
            resource_spec_code: '- Indicates a resource specifications identifier.'
            retention_policy: |-
                - (Optional) Indicates the action to be taken when the memory usage reaches
                the disk capacity threshold. The possible values are:
            security_group_id: '- (Required) Indicates the ID of a security group.'
            security_group_name: '- Indicates the name of a security group.'
            specification: |-
                - (Optional) This parameter is mandatory if the engine is kafka.
                Indicates the baseline bandwidth of a Kafka instance, that is, the maximum amount
                of data transferred per unit time. Unit: byte/s. Options: 100MB, 300MB,
                600MB, 1200MB.
            status: '- Indicates the status of an instance. For details, see section Instance Status.'
            storage_space: '- (Required) Indicates the message storage space. Value range:'
            storage_spec_code: '- (Required) Indicates the storage I/O specification. Options for a Kafka instance:'
            subnet_cidr: '- Indicates a subnet segment.'
            subnet_id: '- (Required) Indicates the ID of the subnet (OpenStack network ID).'
            subnet_name: '- Indicates the name of a subnet.'
            time_base: ': The earliest messages are deleted.'
            type: '- Indicates an instance type. Options: single and cluster.'
            used_storage_space: '- Indicates the used message storage space. Unit: GB'
            user_id: '- Indicates a user ID.'
            user_name: "-\tIndicates a username."
            vpc_id: '- (Required) Indicates the ID of a VPC (OpenStack router ID).'
        importStatements: []
    opentelekomcloud_dms_instance_v2:
        subCategory: Distributed Message Service (DMS)
        description: Manages a DMS Instance v2 resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_instance_v2
        title: opentelekomcloud_dms_instance_v2
        examples:
            - name: instance_1
              manifest: |-
                {
                  "access_user": "${var.access_user}",
                  "available_zones": [
                    "${data.opentelekomcloud_dms_az_v1.az_1.id}"
                  ],
                  "engine": "kafka",
                  "engine_version": "${data.opentelekomcloud_dms_product_v1.product_1.version}",
                  "name": "kafka-test",
                  "partition_num": "${data.opentelekomcloud_dms_product_v1.product_1.partition_num}",
                  "password": "${var.password}",
                  "product_id": "${data.opentelekomcloud_dms_product_v1.product_1.id}",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}",
                  "specification": "${data.opentelekomcloud_dms_product_v1.product_1.bandwidth}",
                  "storage_space": "${data.opentelekomcloud_dms_product_v1.product_1.storage}",
                  "storage_spec_code": "${data.opentelekomcloud_dms_product_v1.product_1.storage_spec_code}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                access_user: var.access_user
                available_zones: data.opentelekomcloud_dms_az_v1.az_1.id
                engine_version: data.opentelekomcloud_dms_product_v1.product_1.version
                partition_num: data.opentelekomcloud_dms_product_v1.product_1.partition_num
                password: var.password
                product_id: data.opentelekomcloud_dms_product_v1.product_1.id
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
                specification: data.opentelekomcloud_dms_product_v1.product_1.bandwidth
                storage_space: data.opentelekomcloud_dms_product_v1.product_1.storage
                storage_spec_code: data.opentelekomcloud_dms_product_v1.product_1.storage_spec_code
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "secgroup_1",
                      "name": "secgroup_1"
                    }
            - name: instance_1
              manifest: |-
                {
                  "available_zones": [
                    "${data.opentelekomcloud_dms_az_v1.az_1.id}"
                  ],
                  "enable_publicip": true,
                  "engine": "kafka",
                  "engine_version": "${data.opentelekomcloud_dms_product_v1.product_1.version}",
                  "name": "%s",
                  "product_id": "${data.opentelekomcloud_dms_product_v1.product_1.id}",
                  "publicip_id": [
                    "${opentelekomcloud_networking_floatingip_v2.fip_1.id}",
                    "${opentelekomcloud_networking_floatingip_v2.fip_2.id}",
                    "${opentelekomcloud_networking_floatingip_v2.fip_3.id}"
                  ],
                  "security_group_id": "${resource.opentelekomcloud_networking_secgroup_v2.secgroup_1.id}",
                  "storage_space": "${data.opentelekomcloud_dms_product_v1.product_1.storage}",
                  "storage_spec_code": "${data.opentelekomcloud_dms_product_v1.product_1.storage_spec_code}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                available_zones: data.opentelekomcloud_dms_az_v1.az_1.id
                engine_version: data.opentelekomcloud_dms_product_v1.product_1.version
                product_id: data.opentelekomcloud_dms_product_v1.product_1.id
                publicip_id: opentelekomcloud_networking_floatingip_v2.fip_1.id
                security_group_id: resource.opentelekomcloud_networking_secgroup_v2.secgroup_1.id
                storage_space: data.opentelekomcloud_dms_product_v1.product_1.storage
                storage_spec_code: data.opentelekomcloud_dms_product_v1.product_1.storage_spec_code
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_floatingip_v2.fip_1: '{}'
                opentelekomcloud_networking_floatingip_v2.fip_2: '{}'
                opentelekomcloud_networking_floatingip_v2.fip_3: '{}'
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "secgroup_1",
                      "name": "secgroup_1"
                    }
        argumentDocs:
            '["0f2a51dc-93ce-42af","d967d49b-6659-4052","002872f4-82a4-4f6e-9a4e"]': .
            "22:00": ', 02:00, 06:00, 10:00, 14:00, or 18:00.'
            access_user: |-
                - (Optional) Indicates a username. A username consists of 4 to 64 characters
                and supports only letters, digits, and hyphens (-).
            available_zones: |-
                - (Required) Indicates the ID of an AZ. The parameter value can not be
                left blank or an empty array. For details, see section
                Querying AZ Information.
            connect_address: '- Indicates the IP address of an instance.'
            created_at: |-
                - Indicates the time when an instance is created. The time is in the format
                of timestamp, that is, the offset milliseconds from 1970-01-01 00:00:00 UTC to the specified time.
            description: |-
                - (Optional) Indicates the description of an instance. It is a character
                string containing not more than 1024 characters.
            disk_encrypted_enable: '- (Optional) - Indicates whether disk encryption is enabled.'
            disk_encrypted_key: '- (Optional) - Disk encryption key. If disk encryption is not enabled, this parameter is left blank.'
            enable_publicip: '- (Optional) - Whether to enable public access. By default, public access is disabled.'
            engine: '- (Required) Indicates a message engine. Only kafka is supported now.'
            engine_version: |-
                - (Required) Indicates the version of a message engine.
                Options: 1.1.0, 2.3.0, 2.7.
            "false": .
            instance_id: '- Indicates the ID of an instance.'
            maintain_begin: |-
                - (Optional) Indicates the time at which a maintenance time window starts.
                Format: HH:mm.
            maintain_end: |-
                - (Optional) Indicates the time at which a maintenance time window ends.
                Format: HH:mm.
            name: |-
                - (Required) Indicates the name of an instance. An instance name starts with a letter,
                consists of 4 to 64 characters, and supports only letters, digits, and hyphens (-).
            node_num: '- Node quantity.'
            partition_num: |-
                - (Optional) This parameter is mandatory when a kafka instance is created.
                Indicates the maximum number of topics in a Kafka instance.
            password: |-
                - (Optional) Indicates the password of an instance. An instance password
                must meet the following complexity requirements: Must be 8 to 32 characters long.
                Must contain at least 2 of the following character types: lowercase letters, uppercase
                letters, digits, and special characters (~!@#$%^&*()-_=+\|[{}]:'",<.>/?).
            port: '- Indicates the port number of an instance.'
            produce_reject: ': New messages cannot be created'
            product_id: '- (Required) Indicates a product ID.'
            public_access_enabled: |-
                - Time when public access was enabled for an instance.
                The value can be true, actived, closed, or false.
            public_connect_address: '- Instance public access address. This parameter is available only when public access is enabled for the instance.'
            publicip_id: '- (Optional) - List of public ip IDs to be bound to DMS instance nodes.'
            resource_spec_code: '- Indicates a resource specifications identifier.'
            retention_policy: |-
                - (Optional) Indicates the action to be taken when the memory usage reaches
                the disk capacity threshold. The possible values are:
            security_group_id: '- (Required) Indicates the ID of a security group.'
            security_group_name: '- Indicates the name of a security group.'
            specification: |-
                - (Optional) This parameter is mandatory if the engine is kafka.
                Indicates the baseline bandwidth of a Kafka instance, that is, the maximum amount
                of data transferred per unit time. Unit: byte/s. Options: 100MB, 300MB,
                600MB, 1200MB.
            ssl_enable: |-
                - Indicates whether security authentication is enabled.
                Possible values: true, false.
            status: '- Indicates the status of an instance. For details, see section Instance Status.'
            storage_resource_id: '- Storage resource ID.'
            storage_space: '- (Required) Indicates the message storage space. Value range:'
            storage_spec_code: '- (Required) Indicates the storage I/O specification. Options for a Kafka instance:'
            subnet_cidr: '- Indicates a subnet segment.'
            subnet_id: '- (Required) Indicates the ID of the subnet (OpenStack network ID).'
            subnet_name: '- Indicates the name of a subnet.'
            tags: '- (Optional) Tags key/value pairs to associate with the instance.'
            time_base: ': The earliest messages are deleted.'
            total_storage_space: '- Total message storage space in GB.'
            "true": ', false.'
            type: '- Indicates an instance type. Options: single and cluster.'
            used_storage_space: '- Indicates the used message storage space. Unit: GB'
            user_id: '- Indicates a user ID.'
            user_name: "-\tIndicates a username."
            vpc_id: '- (Required) Indicates the ID of a VPC (OpenStack router ID).'
        importStatements: []
    opentelekomcloud_dms_smart_connect_task_v2:
        subCategory: Distributed Message Service (DMS)
        description: Manages an up-to-date DMS Smart Connect Task v2 resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_smart_connect_task_v2
        title: opentelekomcloud_dms_smart_connect_task_v2
        examples:
            - name: test
              manifest: |-
                {
                  "destination_task": [
                    {
                      "access_key": "${var.access_key}",
                      "consumer_strategy": "latest",
                      "deliver_time_interval": 300,
                      "destination_file_type": "TEXT",
                      "obs_bucket_name": "${var.obs_bucket_name}",
                      "obs_path": "${var.obs_path}",
                      "partition_format": "yyyy/MM/dd/HH/mm",
                      "record_delimiter": "\n",
                      "secret_key": "${var.secret_key}"
                    }
                  ],
                  "destination_type": "OBS_SINK",
                  "instance_id": "${var.instance_id}",
                  "task_name": "${var.task_name}",
                  "topics": "${var.topics}"
                }
              references:
                destination_task.access_key: var.access_key
                destination_task.obs_bucket_name: var.obs_bucket_name
                destination_task.obs_path: var.obs_path
                destination_task.secret_key: var.secret_key
                instance_id: var.instance_id
                task_name: var.task_name
                topics: var.topics
            - name: test
              manifest: |-
                {
                  "instance_id": "${var.instance_id}",
                  "source_task": [
                    {
                      "compression_type": "none",
                      "consumer_strategy": "latest",
                      "direction": "push",
                      "peer_instance_id": "${var.peer_instance_id}",
                      "provenance_header_enabled": false,
                      "rename_topic_enabled": false,
                      "replication_factor": 3,
                      "sync_consumer_offsets_enabled": false,
                      "task_num": 2,
                      "topics_mapping": [
                        "topic-test:topic-test-mapping"
                      ]
                    }
                  ],
                  "source_type": "KAFKA_REPLICATOR_SOURCE",
                  "task_name": "${var.task_name}",
                  "topics": [
                    "topic-test"
                  ]
                }
              references:
                instance_id: var.instance_id
                source_task.peer_instance_id: var.peer_instance_id
                task_name: var.task_name
            - name: test
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${destination_task.0.access_key}",
                        "${destination_task.0.secret_key}",
                        "${source_task.0.password}"
                      ]
                    }
                  ]
                }
              references:
                lifecycle.ignore_changes: destination_task.0.access_key
        argumentDocs:
            create: '- Default is 30 minutes.'
            created_at: '- Indicates the creation time of the smart connect task.'
            destination_task: |-
                - (Optional, List, ForceNew) Specifies the destination configuration of a smart connect task.
                The destination_task structure is documented below.
                Changing this parameter will create a new resource.
            destination_task.access_key: |-
                - (Optional, String, ForceNew) Specifies the access key used to access the OBS bucket.
                It's required when destination_type is OBS_SINK.
                Changing this parameter will create a new resource.
            destination_task.consumer_strategy: |-
                - (Optional, String, ForceNew) Specifies the consumer strategy of the smart connect task.
                Value options:
            destination_task.deliver_time_interval: |-
                - (Optional, Int, ForceNew) Specifies the deliver time interval of the smart connect task.
                It's required when destination_type is OBS_SINK.
                The value should be between 30 and 900. Changing this parameter will create a new resource.
            destination_task.destination_file_type: |-
                - (Optional, String, ForceNew) Specifies the destination file type of the smart connect task.
                Only TEXT is supported. Changing this parameter will create a new resource.
            destination_task.destination_type: |-
                is OBS_SINK.
                Changing this parameter will create a new resource.
            destination_task.obs_bucket_name: |-
                - (Optional, String, ForceNew) Specifies the obs bucket name of the smart connect task.
                It's required when destination_type is OBS_SINK.
                Changing this parameter will create a new resource.
            destination_task.obs_path: |-
                - (Optional, String, ForceNew) Specifies the obs path of the smart connect task.
                Obs path is separated by a slash. Changing this parameter will create a new resource.
            destination_task.partition_format: |-
                - (Optional, String, ForceNew) Specifies the time directory format of the smart connect task.
                Value options: yyyy, yyyy/MM, yyyy/MM/dd, yyyy/MM/dd/HH, yyyy/MM/dd/HH/mm.
                It's required when destination_type is OBS_SINK.
                Changing this parameter will create a new resource.
            destination_task.record_delimiter: |-
                - (Optional, String, ForceNew) Specifies the record delimiter of the smart connect task.
                Value options: ,, ;, |, \n.
                Changing this parameter will create a new resource.
            destination_task.secret_key: |-
                - (Optional, String, ForceNew) Specifies the secret access key used to access the OBS bucket.
                It's required when destination_type is OBS_SINK.
                Changing this parameter will create a new resource.
            destination_task.store_keys: |-
                - (Optional, Bool, ForceNew) Specifies whether to dump keys.
                Changing this parameter will create a new resource.
            destination_type: |-
                - (Optional, String, ForceNew) Specifies the destination type of the smart connect task.
                Valid values are OBS_SINK and NONE. Changing this parameter will create a new resource.
            id: '- The resource ID.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies the kafka instance ID.
                Changing this parameter will create a new resource.
            region: '- The region in which the resource is created.'
            source_task: |-
                - (Optional, List, ForceNew) Specifies the source configuration of a smart connect task.
                The source_task structure is documented below.
                Changing this parameter will create a new resource.
            source_task.compression_type: |-
                - (Optional, String, ForceNew) Specifies the compression algorithm to use for copying messages.
                Valid values are none, gzip, snappy, lz4 and zstd.
                Changing this parameter will create a new resource.
            source_task.consumer_strategy: '- (Optional, String, ForceNew) Specifies the start offset. Value options are:'
            source_task.current_instance_alias: |-
                - (Optional, String, ForceNew) Specifies the current Kafka instance alias.
                Changing this parameter will create a new resource.
            source_task.direction: '- (Optional, String, ForceNew) Specifies the sync direction. Valid values are:'
            source_task.password: |-
                - (Optional, String, ForceNew) Specifies the peer Kafka user password.
                It's required when security_protocol is SASL_SSL. Changing this parameter will create a new resource.
            source_task.peer_instance_address: |-
                - (Optional, List, ForceNew) Specifies the peer Kafka instance address list.
                Changing this parameter will create a new resource.
            source_task.peer_instance_alias: |-
                - (Optional, String, ForceNew) Specifies the peer Kafka instance alias.
                Changing this parameter will create a new resource.
            source_task.peer_instance_id: |-
                - (Optional, String, ForceNew) Specifies the peer Kafka instance ID.
                Changing this parameter will create a new resource.
            source_task.provenance_header_enabled: |-
                - (Optional, Bool, ForceNew) Specifies whether the message header contains the message source.
                Changing this parameter will create a new resource.
            source_task.rename_topic_enabled: |-
                - (Optional, Bool, ForceNew) Specifies whether to rename the topic. If true, will add the
                alias of the source Kafka instance before the target topic name to form a new name of the target topic.
                Changing this parameter will create a new resource.
            source_task.replication_factor: |-
                - (Optional, Int, ForceNew) Specifies the number of topic replicas. The value of this parameter
                cannot exceed the number of brokers in the peer instance. Changing this parameter will create a new resource.
            source_task.sasl_mechanism: |-
                - (Optional, String, ForceNew) Specifies the peer Kafka authentication mode.
                Changing this parameter will create a new resource.
            source_task.security_protocol: '- (Optional, String, ForceNew) Specifies the peer Kafka authentication. Valid values are:'
            source_task.sync_consumer_offsets_enabled: |-
                - (Optional, Bool, ForceNew) Specifies whether to sync the consumption progress.
                Changing this parameter will create a new resource.
            source_task.task_num: |-
                - (Optional, Int, ForceNew) Specifies the number of data replication tasks.
                If the direction is set to two-way, the actual number of tasks will be twice the number of tasks you configure here.
                Changing this parameter will create a new resource.
            source_task.topics_mapping: |-
                - (Optional, List, ForceNew) Specifies the topic mapping string list, which is used to customize
                the target topic name, e.g., topic-sc-1:topic-sc-2. Changing this parameter will create a new resource.
            source_task.user_name: |-
                - (Optional, String, ForceNew) Specifies the peer Kafka user name.
                It's required when security_protocol is SASL_SSL. Changing this parameter will create a new resource.
            source_type: |-
                - (Optional, String, ForceNew) Specifies the source type of the smart connect task. Valid values are
                KAFKA_REPLICATOR_SOURCE and NONE. Changing this parameter will create a new resource.
            start_later: |-
                - (Optional, Bool, ForceNew) Specifies whether to start a task later.
                Changing this parameter will create a new resource.
            status: '- Indicates the status of the smart connect task.'
            task_name: |-
                - (Required, String, ForceNew) Specifies the smart connect task name.
                Changing this parameter will create a new resource.
            topics: |-
                - (Optional, List, ForceNew) Specifies the topic names list of the smart connect task.
                Changing this parameter will create a new resource.
            topics_regex: |-
                - (Optional, String, ForceNew) Specifies the regular expression of topic name for the smart connect task.
                Changing this parameter will create a new resource.
        importStatements: []
    opentelekomcloud_dms_smart_connect_v2:
        subCategory: Distributed Message Service (DMS)
        description: Manages an up-to-date DMS Smart Connect v2 resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_smart_connect_v2
        title: opentelekomcloud_dms_smart_connect_v2
        examples:
            - name: test
              manifest: |-
                {
                  "bandwidth": "100MB",
                  "instance_id": "${var.instance_id}",
                  "node_count": 2,
                  "storage_spec_code": "dms.physical.storage.ultra.v2"
                }
              references:
                instance_id: var.instance_id
        argumentDocs:
            bandwidth: '- (Optional, String, ForceNew) Specifies the bandwidth of the connector.'
            id: '- The resource ID.'
            instance_id: '- (Required, String, ForceNew) Specifies the ID of the DMS instance.'
            node_count: '- (Optional, Int, ForceNew) Specifies the node count of the connector. Defaults to 2 and minimum is 2.'
            region: '- The DMS instance region'
            storage_spec_code: '- (Required, String, ForceNew) Specifies the storage specification code of the connector.'
        importStatements: []
    opentelekomcloud_dms_topic_v1:
        subCategory: Distributed Message Service (DMS)
        description: Manages a DMS Topic resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_topic_v1
        title: opentelekomcloud_dms_topic_v1
        examples:
            - name: topic_1
              manifest: |-
                {
                  "instance_id": "${resource.opentelekomcloud_dms_instance_v1.instance_1.id}",
                  "name": "topic-test",
                  "partition": 10,
                  "replication": 2,
                  "retention_time": 80,
                  "sync_replication": true
                }
              references:
                instance_id: resource.opentelekomcloud_dms_instance_v1.instance_1.id
              dependencies:
                opentelekomcloud_dms_instance_v1.instance_1: |-
                    {
                      "access_user": "${var.access_user}",
                      "available_zones": [
                        "${data.opentelekomcloud_dms_az_v1.az_1.id}"
                      ],
                      "engine": "kafka",
                      "engine_version": "${data.opentelekomcloud_dms_product_v1.product_1.version}",
                      "name": "kafka-test",
                      "partition_num": "${data.opentelekomcloud_dms_product_v1.product_1.partition_num}",
                      "password": "${var.password}",
                      "product_id": "${data.opentelekomcloud_dms_product_v1.product_1.id}",
                      "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}",
                      "specification": "${data.opentelekomcloud_dms_product_v1.product_1.bandwidth}",
                      "storage_space": "${data.opentelekomcloud_dms_product_v1.product_1.storage}",
                      "storage_spec_code": "${data.opentelekomcloud_dms_product_v1.product_1.storage_spec_code}",
                      "subnet_id": "${var.subnet_id}",
                      "vpc_id": "${var.vpc_id}"
                    }
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "secgroup_1",
                      "name": "secgroup_1"
                    }
        argumentDocs:
            instance_id: '- (Required) Indicates the ID of primary DMS instance.'
            max_partitions: '- Total partitions number.'
            name: '- (Required) Indicates the name of a topic.'
            partition: |-
                - (Optional) Indicates the number of topic partitions,
                which is used to set the number of concurrently consumed messages.
                Value range: 1–20. Default value: 3.
            remain_partitions: '- Number of remaining partitions.'
            replication: |-
                - (Optional) Indicates the number of replicas,
                which is configured to ensure data reliability.
                Value range: 1–3. Default value: 3.
            retention_time: |-
                - (Required) Indicates the retention period of a message. Its default value is 72.
                Value range: 1–720. Default value: 72. Unit: hour.
            size: '- The partition size of the topic.'
            sync_message_flush: |-
                - (Optional) Indicates whether to enable synchronous flushing.
                Default value: false. Synchronous flushing compromises performance.
            sync_replication: |-
                - (Optional) Indicates whether to enable synchronous replication.
                After this function is enabled, the acks parameter on the producer client must be set to –1.
                Otherwise, this parameter does not take effect.
        importStatements: []
    opentelekomcloud_dms_user_permission_v1:
        subCategory: Distributed Message Service (DMS)
        description: Manages a DMS User Permissions resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_user_permission_v1
        title: opentelekomcloud_dms_user_permission_v1
        examples:
            - name: perm_1
              manifest: |-
                {
                  "instance_id": "${opentelekomcloud_dms_instance_v2.instance_1.id}",
                  "policies": [
                    {
                      "access_policy": "all",
                      "username": "${opentelekomcloud_dms_user_v2.user_1.id}"
                    },
                    {
                      "access_policy": "sub",
                      "username": "${opentelekomcloud_dms_user_v2.user_2.id}"
                    }
                  ],
                  "topic_name": "test-topic"
                }
              references:
                instance_id: opentelekomcloud_dms_instance_v2.instance_1.id
                policies.username: opentelekomcloud_dms_user_v2.user_2.id
              dependencies:
                opentelekomcloud_dms_user_v2.user_1: |-
                    {
                      "instance_id": "${instance_id}",
                      "password": "Dmstest@123",
                      "username": "Test-user"
                    }
                opentelekomcloud_dms_user_v2.user_2: |-
                    {
                      "instance_id": "${instance_id}",
                      "password": "Dmstest@123",
                      "username": "Test-user2"
                    }
        argumentDocs:
            access_policy: '- (Required) Permission type. Possible values:'
            all: ': publish and subscribe permissions.'
            instance_id: '- (Required) Indicates the ID of primary DMS instance.'
            owner: '- Indicates whether the user is the one selected during topic creation.'
            policies: |-
                - (Required) Indicates policy configuration for the topic.
                Supported fields:
            pub: ': publish permissions.'
            sub: ': subscribe permissions.'
            topic_name: '- (Required) Indicates the name of a topic.'
            topic_type: '- Indicates topic type. 0: common topic; 1: system (internal) topic.'
            username: '- (Required) DMS instance user name.'
        importStatements: []
    opentelekomcloud_dms_user_v2:
        subCategory: Distributed Message Service (DMS)
        description: Manages a DMS User resource within OpenTelekomCloud.
        name: opentelekomcloud_dms_user_v2
        title: opentelekomcloud_dms_user_v2
        examples:
            - name: user_1
              manifest: |-
                {
                  "instance_id": "${instance_id}",
                  "password": "Dmstest@123@",
                  "username": "Test-user"
                }
              references:
                instance_id: instance_id
        argumentDocs:
            creation_time: '- Specifies the time when a user was created.'
            default_app: '- Specifies whether an application is the default application.'
            instance_id: '- (Required) Indicates the ID of primary DMS instance.'
            password: |-
                - (Required) Indicates the password of an instance. An instance password
                must meet the following complexity requirements: Must be 8 to 32 characters long.
                Must contain at least 2 of the following character types: lowercase letters, uppercase
                letters, digits, and special characters (~!@#$%^&*()-_=+\|[{}]:'",<.>/?).
            role: '- Specifies user role.'
            username: |-
                - (Required) Indicates a username. A username consists of 4 to 64 characters
                and supports only letters, digits, and hyphens (-).
        importStatements: []
    opentelekomcloud_dns_ptrrecord_v2:
        subCategory: Domain Name Service (DNS)
        description: Manages a DNS PTR Record resource within OpenTelekomCloud.
        name: opentelekomcloud_dns_ptrrecord_v2
        title: opentelekomcloud_dns_ptrrecord_v2
        examples:
            - name: ptr_1
              manifest: |-
                {
                  "description": "An example PTR record",
                  "floatingip_id": "${opentelekomcloud_networking_floatingip_v2.fip_1.id}",
                  "name": "ptr.example.com.",
                  "tags": {
                    "foo": "bar"
                  },
                  "ttl": 3000
                }
              references:
                floatingip_id: opentelekomcloud_networking_floatingip_v2.fip_1.id
              dependencies:
                opentelekomcloud_networking_floatingip_v2.fip_1: '{}'
        argumentDocs:
            address: '- The address of the FloatingIP/EIP.'
            description: '- (Optional) Description of the PTR record.'
            floatingip_id: '- (Required) The ID of the FloatingIP/EIP.'
            id: '-  The PTR record ID, which is in {region}:{floatingip_id} format.'
            name: |-
                - (Required) Domain name of the PTR record. A domain name is case insensitive.
                Uppercase letters will also be converted into lowercase letters.
            tags: '- (Optional) Tags key/value pairs to associate with the PTR record.'
            ttl: |-
                - (Optional) The time to live (TTL) of the record set (in seconds). The value
                range is 300–2147483647. The default value is 300.
        importStatements: []
    opentelekomcloud_dns_recordset_v2:
        subCategory: Domain Name Service (DNS)
        description: Manages a DNS Recordset resource within OpenTelekomCloud.
        name: opentelekomcloud_dns_recordset_v2
        title: opentelekomcloud_dns_recordset_v2
        examples:
            - name: rs_example_com
              manifest: |-
                {
                  "description": "An example record set",
                  "name": "rs.example.com.",
                  "records": [
                    "10.0.0.1"
                  ],
                  "ttl": 3000,
                  "type": "A",
                  "zone_id": "${opentelekomcloud_dns_zone_v2.example_zone.id}"
                }
              references:
                zone_id: opentelekomcloud_dns_zone_v2.example_zone.id
              dependencies:
                opentelekomcloud_dns_zone_v2.example_zone: |-
                    {
                      "description": "a zone",
                      "email": "email2@example.com",
                      "name": "example.com.",
                      "ttl": 6000,
                      "type": "public"
                    }
            - name: rs_txt_example
              manifest: |-
                {
                  "description": "a record set",
                  "name": "%[1]s",
                  "records": [
                    "v=spf1 include:my.example.try.com -all"
                  ],
                  "ttl": 300,
                  "type": "TXT",
                  "zone_id": "${opentelekomcloud_dns_zone_v2.zone_1.id}"
                }
              references:
                zone_id: opentelekomcloud_dns_zone_v2.zone_1.id
              dependencies:
                opentelekomcloud_dns_zone_v2.example_zone: |-
                    {
                      "description": "a zone",
                      "email": "email2@example.com",
                      "name": "example.com.",
                      "ttl": 6000,
                      "type": "public"
                    }
        argumentDocs:
            description: '- (Optional) A description of the  record set.'
            name: '- (Required) The name of the record set. Changing this creates a new DNS  record set.'
            records: '- (Required) An array of DNS records.'
            tags: '- (Optional) The key/value pairs to associate with the zone.'
            ttl: '- (Optional) The time to live (TTL) of the record set.'
            type: |-
                - (Required) The type of record set. Examples: "A", "MX".
                Changing this creates a new DNS  record set.
            value_specs: |-
                - (Optional) Map of additional options. Changing this creates a
                new record set.
            zone_id: |-
                - (Required) The ID of the zone in which to create the record set.
                Changing this creates a new DNS  record set.
        importStatements: []
    opentelekomcloud_dns_zone_v2:
        subCategory: Domain Name Service (DNS)
        description: Manages a DNS Zones resource within OpenTelekomCloud.
        name: opentelekomcloud_dns_zone_v2
        title: opentelekomcloud_dns_zone_v2
        examples:
            - name: public_example_com
              manifest: |-
                {
                  "description": "An example for public zone",
                  "email": "public@example.com",
                  "name": "public.example.com.",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "ttl": 3000,
                  "type": "public"
                }
            - name: private_example_com
              manifest: |-
                {
                  "description": "An example for private zone",
                  "email": "private@example.com",
                  "name": "private.example.com.",
                  "router": [
                    {
                      "router_id": "${var.vpc_id}",
                      "router_region": "${var.region}"
                    }
                  ],
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "ttl": 3000,
                  "type": "private"
                }
              references:
                router.router_id: var.vpc_id
                router.router_region: var.region
            - name: private_example_com
              manifest: |-
                {
                  "description": "An example for private zone",
                  "email": "private@example.com",
                  "name": "private.example.com.",
                  "router": [
                    {
                      "router_id": "${var.vpc_id_1}",
                      "router_region": "${var.region}"
                    },
                    {
                      "router_id": "${var.vpc_id_2}",
                      "router_region": "${var.region}"
                    }
                  ],
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "ttl": 3000,
                  "type": "private"
                }
              references:
                router.router_id: var.vpc_id_2
                router.router_region: var.region
        argumentDocs:
            description: '- (Optional) A description of the zone.'
            email: '- (Optional) The email contact for the zone record.'
            masters: '- An array of master DNS servers.'
            name: |-
                - (Required) The name of the zone.   Changing this creates a new DNS zone.
                -> Note: The . at the end of the name.
            router: |-
                - (Optional) The Routers(VPCs) configuration for the private zone.
                it is required when type is private.
            router.router_id: '- (Required) The Router(VPC) ID. which VPC network will assicate with.'
            router.router_region: '- (Required) The Region name for this private zone.'
            tags: '- (Optional) The key/value pairs to associate with the zone.'
            ttl: '- (Optional) The time to live (TTL) of the zone.'
            type: |-
                - (Optional) The type of zone. Can either be public or private.
                Changing this creates a new zone.
            value_specs: '- (Optional) Map of additional options. Changing this creates a new zone.'
        importStatements: []
    opentelekomcloud_drs_task_v3:
        subCategory: Data Replication Service (DRS)
        description: Manages a DRS Task resource within OpenTelekomCloud.
        name: opentelekomcloud_drs_task_v3
        title: opentelekomcloud_drs_task_v3
        examples:
            - name: test
              manifest: |-
                {
                  "description": "TEST",
                  "destination_db": [
                    {
                      "engine_type": "mysql",
                      "instance_id": "${opentelekomcloud_rds_instance_v3.mysql_2.id}",
                      "ip": "${opentelekomcloud_networking_floatingip_v2.fip_2.address}",
                      "password": "MySql_120521",
                      "port": 3306,
                      "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.id}",
                      "user": "root"
                    }
                  ],
                  "direction": "down",
                  "engine_type": "mysql",
                  "force_destroy": "true",
                  "migration_type": "FULL_TRANS",
                  "name": "test-drs-task",
                  "net_type": "eip",
                  "source_db": [
                    {
                      "engine_type": "mysql",
                      "instance_id": "${opentelekomcloud_rds_instance_v3.mysql_1.id}",
                      "ip": "${opentelekomcloud_networking_floatingip_v2.fip_1.address}",
                      "password": "MySql_120521",
                      "port": "3306",
                      "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.id}",
                      "user": "root"
                    }
                  ],
                  "type": "migration"
                }
              references:
                destination_db.instance_id: opentelekomcloud_rds_instance_v3.mysql_2.id
                destination_db.ip: opentelekomcloud_networking_floatingip_v2.fip_2.address
                destination_db.subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.id
                source_db.instance_id: opentelekomcloud_rds_instance_v3.mysql_1.id
                source_db.ip: opentelekomcloud_networking_floatingip_v2.fip_1.address
                source_db.subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.id
              dependencies:
                opentelekomcloud_networking_floatingip_v2.fip_1: '{}'
                opentelekomcloud_networking_floatingip_v2.fip_2: '{}'
                opentelekomcloud_rds_instance_v3.mysql_1: '{}'
                opentelekomcloud_rds_instance_v3.mysql_2: '{}'
        argumentDocs:
            create: '- Default is 30 minute.'
            created_at: '- Create time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ'
            db_info.engine_type: |-
                - (Required, String, ForceNew) Specifies the engine type of database. Changing this parameter will
                create a new resource. The options are as follows: mysql, mongodb, gaussdbv5, postgresql.
            db_info.instance_id: |-
                - (Optional, String, ForceNew) Specifies the instance id of database when it is a RDS database.
                Changing this parameter will create a new resource.
            db_info.ip: '- (Required, String, ForceNew) Specifies the IP of database. Changing this parameter will create a new resource.'
            db_info.name: |-
                - (Optional, String, ForceNew) Specifies the name of database.
                Changing this parameter will create a new resource.
            db_info.password: |-
                - (Required, String, ForceNew) Specifies the password of database.
                Changing this parameter will create a new resource.
            db_info.port: '- (Required, Int, ForceNew) Specifies the port of database. Changing this parameter will create a new resource.'
            db_info.region: |-
                - (Optional, String, ForceNew) Specifies the region which the database belongs when it is a RDS database.
                Changing this parameter will create a new resource.
            db_info.ssl_cert_check_sum: |-
                - (Optional, String, ForceNew) Specifies the checksum of SSL certificate content.
                It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
            db_info.ssl_cert_key: |-
                - (Optional, String, ForceNew) Specifies the SSL certificate content, encrypted with base64.
                It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
            db_info.ssl_cert_name: |-
                - (Optional, String, ForceNew) Specifies SSL certificate name.
                It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
            db_info.ssl_cert_password: |-
                - (Optional, String, ForceNew) Specifies SSL certificate password. It is mandatory when
                ssl_enabled is true and the certificate file suffix is .p12. Changing this parameter will create a new resource.
            db_info.ssl_enabled: |-
                - (Optional, Bool, ForceNew) Specifies whether to enable SSL connection.
                Changing this parameter will create a new resource.
            db_info.subnet_id: |-
                - (Optional, String, ForceNew) Specifies subnet ID of database when it is a RDS database.
                It is mandatory when direction is down. Changing this parameter will create a new resource.
            db_info.user: |-
                - (Required, String, ForceNew) Specifies the user name of database.
                Changing this parameter will create a new resource.
            delete: '- Default is 10 minute.'
            description: |-
                - (Optional, String) Specifies the description of the job, which contain a
                maximum of 256 characters, and certain special characters (including !<>&'"\) are not allowed.
            destination_db: |-
                - (Required, List, ForceNew) Specifies the destination database configuration.
                The db_info object structure of the destination_db is documented below.
                Changing this parameter will create a new resource.
            destination_db_readonly: |-
                - (Optional, Bool, ForceNew) Specifies the destination DB instance as read-only helps
                ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
                Read/Write. The default value is true. Changing this parameter will create a new resource.
            direction: |-
                - (Required, String, ForceNew) Specifies the direction of data flow.
                Changing this parameter will create a new resource. The options are as follows:
            engine_type: |-
                - (Required, String, ForceNew) Specifies the migration engine type.
                Changing this parameter will create a new resource. The options are as follows:
            expired_days: |-
                - (Optional, Int, ForceNew) Specifies how many days after the task is abnormal, it will automatically
                end. The value ranges from 14 to 100. the default value is 14. Changing this parameter will create a new resource.
            force_destroy: |-
                - (Optional, Bool) Specifies whether to forcibly destroy the job even if it is running.
                The default value is false.
            id: '-  The resource ID in UUID format.'
            limit_speed: |-
                - (Optional, List, ForceNew) Specifies the migration speed by setting a time period.
                The default is no speed limit. The maximum length is 3. Structure is documented below.
                Changing this parameter will create a new resource.
            limit_speed.end_time: |-
                - (Required, String, ForceNew) Specifies the time to end speed limit, this time is UTC time. The input must
                end at 59 minutes, the format is hh:mm, for example: 15:59. Changing this parameter will create a new resource.
            limit_speed.speed: |-
                - (Required, String, ForceNew) Specifies the transmission speed, the value range is 1 to 9999, unit: MB/s.
                Changing this parameter will create a new resource.
            limit_speed.start_time: |-
                - (Required, String, ForceNew) Specifies the time to start speed limit, this time is UTC time. The start
                time is the whole hour, if there is a minute, it will be ignored, the format is hh:mm, and the hour number
                is two digits, for example: 01:00. Changing this parameter will create a new resource.
            migrate_definer: |-
                - (Optional, Bool, ForceNew) Specifies whether to migrate the definers of all source database
                objects to the user of destination_db. The default value is true.
                Changing this parameter will create a new resource.
            migration_type: |-
                - (Optional, String, ForceNew) Specifies migration type.
                Changing this parameter will create a new resource. The options are as follows:
            multi_write: |-
                - (Optional, Bool, ForceNew) Specifies whether to enable multi write. It is mandatory when type
                is cloudDataGuard. When the disaster recovery type is dual-active disaster recovery, set multi_write to true,
                otherwise to false. The default value is false. Changing this parameter will create a new resource.
            name: |-
                - (Required, String) Specifies the job name. The name consists of 4 to 50 characters, starting with
                a letter. Only letters, digits, underscores (_) and hyphens (-) are allowed.
            net_type: |-
                - (Optional, String, ForceNew) Specifies the network type.
                Changing this parameter will create a new resource. The options are as follows:
            private_ip: '- Private IP.'
            public_ip: '- Public IP.'
            region: '- The region in which to create the resource.'
            source_db: |-
                - (Required, List, ForceNew) Specifies the source database configuration.
                The db_info object structure of the source_db is documented below.
                Changing this parameter will create a new resource.
            start_time: |-
                - (Optional, String, ForceNew) Specifies the time to start the job. The time format
                is yyyy-MM-dd HH:mm:ss. Start immediately by default. Changing this parameter will create a new resource.
            status: '- Status.'
            tags: |-
                - (Optional, Map, ForceNew) Specifies the key/value pairs to associate with the DRS job.
                Changing this parameter will create a new resource.
            type: |-
                - (Required, String, ForceNew) Specifies the job type. Changing this parameter will create a new
                resource. The options are as follows:
        importStatements: []
    opentelekomcloud_dws_cluster_v1:
        subCategory: Data Warehouse Service (DWS)
        description: Manages a DWS Cluster resource within OpenTelekomCloud.
        name: opentelekomcloud_dws_cluster_v1
        title: opentelekomcloud_dws_cluster_v1
        examples:
            - name: cluster_1
              manifest: |-
                {
                  "availability_zone": "${var.availability_zone}",
                  "name": "my_dws_cluster",
                  "network_id": "${var.network_id}",
                  "node_type": "dws.m3.xlarge",
                  "number_of_node": 3,
                  "port": 8899,
                  "public_ip": [
                    {
                      "public_bind_type": "auto_assign"
                    }
                  ],
                  "security_group_id": "${var.security_group_id}",
                  "user_name": "dbadmin",
                  "user_pwd": "#dbadmin123",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone
                network_id: var.network_id
                security_group_id: var.security_group_id
                vpc_id: var.vpc_id
        argumentDocs:
            availability_zone: '- (Optional, String, ForceNew) AZ in a cluster.'
            create: '- Default is 60 minute.'
            created: '- Cluster creation time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ'
            delete: '- Default is 60 minute.'
            endpoints: '- View the private network connection information about the cluster. Structure is documented below.'
            endpoints.connect_info: '- (Optional, String) Private network connection information.'
            endpoints.jdbc_url: |-
                - (Optional, String)
                JDBC URL. The following is the default format:
                jdbc:postgresql://< connect_info>/<YOUR_DATABASE_NAME>
            id: '- Cluster ID'
            name: |-
                - (Required, String, ForceNew) Cluster name, which must be unique and contains 4 to 64 characters, which
                consist of letters, digits, hyphens(-), or underscores(_) only and must start with a letter.
            network_id: '- (Required, String, ForceNew) Network ID, which is used for configuring cluster network.'
            node_type: '- (Required, String, ForceNew) Node type.'
            number_of_node: |-
                - (Required, Int) Number of nodes in a cluster. The value ranges from 3 to 32. When expanding,
                add at least 3 nodes.
            port: '- (Optional, Int) Service port of a cluster (8000 to 10000). The default value is 8000.'
            private_ip: '- List of private network IP address.'
            public_endpoints: |-
                - Public network connection information about the cluster. If the value is not specified, the
                public network connection information is not used by default Structure is documented below.
            public_endpoints.jdbc_url: |-
                - (Optional, String)
                JDBC URL. The following is the default format:
                jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
            public_endpoints.public_connect_info: |-
                - (Optional, String)
                Public network connection information.
            public_ip: '- (Optional, List, ForceNew) A nested object resource Structure is documented below.'
            public_ip.eip_id: '- (Optional, String, ForceNew) EIP ID.'
            public_ip.keep_last_manual_snapshot: '- (Optional, int, ForceNew) The number of latest manual snapshots that need to be retained for a cluster.'
            public_ip.number_of_cn: |-
                - (Optional, int, ForceNew) Specifies the number of CN. If you use a large-scale cluster, deploy
                multiple CNs.
            public_ip.public_bind_type: |-
                - (Optional, String, ForceNew) Binding type of an EIP. The value can be either of the following:
                auto_assign not_use bind_existing The default value is not_use.
            recent_event: '- The recent event number.'
            security_group_id: |-
                - (Required, String, ForceNew) ID of a security group. The ID is used for configuring cluster
                network.
            status: '- Cluster status, which can be one of the following:  CREATING AVAILABLE UNAVAILABLE CREATION FAILED.'
            sub_status: |-
                - Sub-status of clusters in the AVAILABLE state. The value can be one of the following:  NORMAL READONLY
                REDISTRIBUTING REDISTRIBUTION-FAILURE UNBALANCED UNBALANCED | READONLY DEGRADED DEGRADED | READONLY DEGRADED |
                UNBALANCED UNBALANCED | REDISTRIBUTING UNBALANCED | REDISTRIBUTION-FAILURE READONLY | REDISTRIBUTION-FAILURE
                UNBALANCED | READONLY | REDISTRIBUTION-FAILURE DEGRADED | REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED |
                REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED | READONLY | REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED | READONLY
            task_status: |-
                - Cluster management task. The value can be one of the following:
                RESTORING SNAPSHOTTING GROWING REBOOTING SETTING_CONFIGURATION CONFIGURING_EXT_DATASOURCE DELETING_EXT_DATASOURCE
                REBOOT_FAILURE RESIZE_FAILURE
            update: '- Default is 60 minute.'
            updated: '- Last modification time of a cluster. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ'
            user_name: |-
                - (Required, String, ForceNew) Administrator username for logging in to a data warehouse cluster The
                administrator username must:  Consist of lowercase letters, digits, or underscores. Start with a lowercase letter or
                an underscore. Contain 1 to 63 characters. Cannot be a keyword of the DWS database.
            user_pwd: |-
                - (Required, String) Administrator password for logging in to a data warehouse cluster A password
                must conform to the following rules:  Contains 8 to 32 characters. Cannot be the same as the username or the username
                written in reverse order. Contains three types of the following:
                Lowercase letters Uppercase letters Digits Special characters
                ~!@#%^&*()-_=+|[{}];:,<.>/?
            version: '- Data warehouse version.'
            vpc_id: '- (Required, String, ForceNew) VPC ID, which is used for configuring cluster network.'
        importStatements: []
    opentelekomcloud_ecs_instance_v1:
        subCategory: Elastic Cloud Server (ECS)
        description: Manages a ECS Instance resource within OpenTelekomCloud.
        name: opentelekomcloud_ecs_instance_v1
        title: opentelekomcloud_ecs_instance_v1
        examples:
            - name: basic
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "flavor": "s2.large.2",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_name": "KeyPair-test",
                  "name": "server_1",
                  "nics": [
                    {
                      "network_id": "55534eaa-533a-419d-9b40-ec427ea7195a"
                    }
                  ],
                  "tags": {
                    "muh": "kuh"
                  },
                  "vpc_id": "8eed4fc7-e5e5-44a2-b5f2-23b3e5d46235"
                }
            - name: basic
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "flavor": "s2.large.2",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_name": "KeyPair-test",
                  "name": "server_1",
                  "nics": [
                    {
                      "network_id": "55534eaa-533a-419d-9b40-ec427ea7195a"
                    }
                  ],
                  "security_groups": [
                    "${opentelekomcloud_compute_secgroup_v2.secgroup_1.id}"
                  ],
                  "vpc_id": "8eed4fc7-e5e5-44a2-b5f2-23b3e5d46235"
                }
              references:
                security_groups: opentelekomcloud_compute_secgroup_v2.secgroup_1.id
              dependencies:
                opentelekomcloud_compute_secgroup_v2.secgroup_1: |-
                    {
                      "name": "ecs_secgroup"
                    }
            - name: basic
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "data_disks": [
                    {
                      "size": "10",
                      "type": "SATA"
                    },
                    {
                      "size": "20",
                      "type": "SAS"
                    }
                  ],
                  "delete_disks_on_termination": true,
                  "flavor": "s2.large.2",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_name": "KeyPair-test",
                  "name": "server_1",
                  "nics": [
                    {
                      "network_id": "55534eaa-533a-419d-9b40-ec427ea7195a"
                    }
                  ],
                  "system_disk_size": 40,
                  "system_disk_type": "SAS",
                  "vpc_id": "8eed4fc7-e5e5-44a2-b5f2-23b3e5d46235"
                }
            - name: basic
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "flavor": "s2.large.2",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_name": "KeyPair-test",
                  "name": "server_1",
                  "nics": [
                    {
                      "network_id": "55534eaa-533a-419d-9b40-ec427ea7195a"
                    }
                  ],
                  "vpc_id": "8eed4fc7-e5e5-44a2-b5f2-23b3e5d46235"
                }
              dependencies:
                opentelekomcloud_blockstorage_volume_v2.myvol: |-
                    {
                      "name": "myvol",
                      "size": 1
                    }
                opentelekomcloud_compute_volume_attach_v2.attached: |-
                    {
                      "instance_id": "${opentelekomcloud_ecs_instance_v1.basic.id}",
                      "volume_id": "${opentelekomcloud_blockstorage_volume_v2.myvol.id}"
                    }
            - name: this
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "flavor": "s2.large.2",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_name": "KeyPair-test",
                  "name": "server_1",
                  "nics": [
                    {
                      "network_id": "55534eaa-533a-419d-9b40-ec427ea7195a"
                    },
                    {
                      "network_id": "2c0a74a9-4395-4e62-a17b-e3e86fbf66b7"
                    }
                  ],
                  "vpc_id": "8eed4fc7-e5e5-44a2-b5f2-23b3e5d46235"
                }
              dependencies:
                opentelekomcloud_networking_floatingip_associate_v2.this: |-
                    {
                      "floating_ip": "${opentelekomcloud_networking_floatingip_v2.this.address}",
                      "port_id": "${opentelekomcloud_ecs_instance_v1.this.nics.0.port_id}"
                    }
                opentelekomcloud_networking_floatingip_v2.this: |-
                    {
                      "pool": "admin_external_net"
                    }
            - name: basic
              manifest: |-
                {
                  "flavor": "s2.large.2",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_name": "KeyPair-test",
                  "name": "server_1",
                  "nics": [
                    {
                      "network_id": "55534eaa-533a-419d-9b40-ec427ea7195a"
                    }
                  ],
                  "user_data": "#cloud-config\nhostname: server_1.example.com\nfqdn: server_1.example.com",
                  "vpc_id": "8eed4fc7-e5e5-44a2-b5f2-23b3e5d46235"
                }
            - name: basic
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "flavor": "s2.large.2",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_name": "KeyPair-test",
                  "name": "server_1",
                  "nics": [
                    {
                      "network_id": "55534eaa-533a-419d-9b40-ec427ea7195a"
                    }
                  ],
                  "os_scheduler_hints": [
                    {
                      "group": "${opentelekomcloud_compute_servergroup_v2.sg_1.id}",
                      "tenancy": "shared"
                    }
                  ],
                  "tags": {
                    "muh": "kuh"
                  },
                  "vpc_id": "8eed4fc7-e5e5-44a2-b5f2-23b3e5d46235"
                }
              references:
                os_scheduler_hints.group: opentelekomcloud_compute_servergroup_v2.sg_1.id
              dependencies:
                opentelekomcloud_compute_servergroup_v2.sg_1: |-
                    {
                      "name": "sg_1",
                      "policies": [
                        "anti-affinity"
                      ]
                    }
            - name: ecs
              manifest: |-
                {
                  "auto_recovery": true,
                  "availability_zone": "${var.az}",
                  "data_disks": [
                    {
                      "kms_id": "${var.key_disk_encryption}",
                      "size": 40,
                      "type": "SSD"
                    }
                  ],
                  "delete_disks_on_termination": true,
                  "flavor": "${var.flavor_name}",
                  "image_id": "${var.image_id}",
                  "name": "${var.host_name}",
                  "nics": [
                    {
                      "ip_address": "${var.private_ip}",
                      "network_id": "${var.vpc_subnetwork_id}"
                    }
                  ],
                  "security_groups": [
                    "${data.opentelekomcloud_networking_secgroup_v2.default.id}"
                  ],
                  "system_disk_kms_id": "${var.key_disk_encryption}",
                  "system_disk_size": "${var.disk_size}",
                  "system_disk_type": "${var.disk_type}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.az
                data_disks.kms_id: var.key_disk_encryption
                flavor: var.flavor_name
                image_id: var.image_id
                name: var.host_name
                nics.ip_address: var.private_ip
                nics.network_id: var.vpc_subnetwork_id
                security_groups: data.opentelekomcloud_networking_secgroup_v2.default.id
                system_disk_kms_id: var.key_disk_encryption
                system_disk_size: var.disk_size
                system_disk_type: var.disk_type
                vpc_id: var.vpc_id
        argumentDocs:
            ESSD: ': extreme SSD disk type.'
            SAS: ': high I/O disk type. Available for all AZs.'
            SATA: ': common I/O disk type. Available for all AZs.'
            SSD: ': ultra-high I/O disk type. Available for all AZs.'
            auto_recovery: '- (Optional, Boolean) Whether configure automatic recovery of an instance.'
            availability_zone: |-
                - (Required, String, ForceNew) The availability zone in which to create the server.
                Changing this creates a new server.
            co-p1: ': high I/O(performance-optimized) disk type.'
            data_disks: |-
                - (Optional, List, ForceNew) An array of one or more data disks to attach to the
                instance. The data_disks object structure is documented below. Changing this
                creates a new server.
            data_disks.kms_id: |-
                - (Optional, String, ForceNew) The Encryption KMS ID of the data disk. Changing this
                creates a new server.
            data_disks.size: |-
                - (Required, String, ForceNew) The size of the data disk in GB. The value range is 10 to 32768.
                Changing this creates a new server.
            data_disks.snapshot_id: |-
                - (Optional, String, ForceNew) Specifies the snapshot ID or ID of the original data disk contained in the full-ECS image.
                Changing this creates a new server.
            data_disks.type: |-
                - (Required, String, ForceNew) The data disk type of the server. For HANA, HL1, and HL2 ECSs use co-p1 and uh-l1 disks.
                Changing this creates a new server. Options are limited depending on AZ. Available options are:
            delete_disks_on_termination: |-
                - (Optional, Boolean) Delete the data disks upon termination of the instance.
                Defaults to false. Changing this creates a new server.
            flavor: '- (Required, String) The name of the desired flavor for the server.'
            image_id: '- (Required, String, ForceNew) The ID of the desired image for the server. Changing this creates a new server.'
            key_name: |-
                - (Optional, String, ForceNew) The name of a key pair to put on the server. The key
                pair must already be created and associated with the tenant's account.
                Changing this creates a new server.
            name: '- (Required, String) A unique name for the instance.'
            nics: |-
                - (Required, List, ForceNew) An array of one or more networks to attach to the
                instance. The nics object structure is documented below. Changing this
                creates a new server.
            nics.ip_address: |-
                - (Optional, String, ForceNew) Specifies a fixed IPv4 address to be used on this
                network. Changing this creates a new server.
            nics.network_id: '- (Required, String, ForceNew) The network UUID to attach to the server. Changing this creates a new server.'
            nics/mac_address: '- (String) The MAC address of the NIC on that network.'
            nics/port_id: '- (String) The port ID of the NIC on that network.'
            nics/type: '- (String) The type of the address of the NIC on that network.'
            os_scheduler_hints: '- (Optional, Map, ForceNew) Schedules ECSs, for example, by configuring an ECS group. The os_scheduler_hints object structure is documented below. Changing this creates a new server.'
            os_scheduler_hints.dedicated_host_id: '- (Optional, String, ForceNew) Specifies the dedicated host ID. A Dedicated Host ID takes effect only when tenancy is set to dedicated.'
            os_scheduler_hints.group: '- (Optional, String, ForceNew) Specifies the ECS group ID in UUID format.'
            os_scheduler_hints.tenancy: '- (Optional, String, ForceNew) Creates ECSs on a dedicated or shared host. Available options are: dedicated  or shared.'
            password: |-
                - (Optional, String, ForceNew) The administrative password to assign to the server.
                Changing this creates a new server.
            security_groups: |-
                - (Optional, List) An array of one or more security group IDs
                to associate with the server. If this parameter is left blank, the default
                security group is bound to the ECS by default.
            system_disk_id: '- (String) The ID of the system disk.'
            system_disk_kms_id: |-
                - (Optional, String, ForceNew) The Encryption KMS ID of the system disk. Changing this
                creates a new server.
            system_disk_size: |-
                - (Optional, Integer, ForceNew) The system disk size in GB, The value range is 1 to 1024.
                Changing this creates a new server.
            system_disk_type: |-
                - (Optional, String, ForceNew) The system disk type of the server. For HANA, HL1, and HL2 ECSs use co-p1 and uh-l1 disks.
                Changing this creates a new server. Options are limited depending on AZ. Available options are:
            tags: '- (Optional, Map) Tags key/value pairs to associate with the instance.'
            uh-l1: ': ultra-high I/O(latency-optimized) disk type.'
            user_data: |-
                - (Optional, String, ForceNew) The user data to provide when launching the instance.
                Changing this creates a new server.
            volumes_attached/id: '- (String) The ID of the data disk.'
            vpc_id: '- (Required, String, ForceNew) The ID of the desired VPC for the server. Changing this creates a new server.'
        importStatements:
            - terraform import opentelekomcloud_ecs_instance_v1.instance_1 d90ce693-5ccf-4136-a0ed-152ce412b6b9
    opentelekomcloud_enterprise_vpn_connection_monitor_v5:
        subCategory: Virtual Private Network (VPN)
        description: Manages a Enterprise VPN Connection Monitoring Service resource within OpenTelekomCloud.
        name: opentelekomcloud_enterprise_vpn_connection_monitor_v5
        title: opentelekomcloud_enterprise_vpn_connection_monitor_v5
        examples:
            - name: test
              manifest: |-
                {
                  "connection_id": "${var.connection_id}"
                }
              references:
                connection_id: var.connection_id
        argumentDocs:
            connection_id: '- (Required, String, ForceNew) Specifies the ID of the VPN connection to monitor.'
            destination_ip: '- The destination IP address of the VPN connection.'
            id: '- The resource ID.'
            region: '- Specifies the region in which resource is created.'
            source_ip: '- The source IP address of the VPN connection.'
            status: '- The status of the connection monitor.'
        importStatements: []
    opentelekomcloud_enterprise_vpn_connection_v5:
        subCategory: Virtual Private Network (VPN)
        description: Manages a Enterprise VPN connection Service resource within OpenTelekomCloud.
        name: opentelekomcloud_enterprise_vpn_connection_v5
        title: opentelekomcloud_enterprise_vpn_connection_v5
        examples:
            - name: conn
              manifest: |-
                {
                  "customer_gateway_id": "${var.customer_gateway_id}",
                  "gateway_id": "${var.gateway_id}",
                  "gateway_ip": "${var.gateway_ip}",
                  "name": "${var.name}",
                  "peer_subnets": [
                    "${var.peer_subnet}"
                  ],
                  "psk": "Test@123",
                  "vpn_type": "static"
                }
              references:
                customer_gateway_id: var.customer_gateway_id
                gateway_id: var.gateway_id
                gateway_ip: var.gateway_ip
                name: var.name
                peer_subnets: var.peer_subnet
            - name: policy
              manifest: |-
                {
                  "customer_gateway_id": "${var.customer_gateway_id}",
                  "gateway_id": "${var.gateway_id}",
                  "gateway_ip": "${var.gateway_ip}",
                  "ikepolicy": [
                    {
                      "authentication_algorithm": "sha2-256",
                      "authentication_method": "pre-share",
                      "encryption_algorithm": "aes-128",
                      "ike_version": "v2",
                      "lifetime_seconds": 86400
                    }
                  ],
                  "ipsecpolicy": [
                    {
                      "authentication_algorithm": "sha2-256",
                      "encapsulation_mode": "tunnel",
                      "encryption_algorithm": "aes-128",
                      "lifetime_seconds": 3600,
                      "pfs": "group14",
                      "transform_protocol": "esp"
                    }
                  ],
                  "name": "${var.name}",
                  "peer_subnets": [
                    "${var.peer_subnet}"
                  ],
                  "psk": "Test@123",
                  "vpn_type": "static"
                }
              references:
                customer_gateway_id: var.customer_gateway_id
                gateway_id: var.gateway_id
                gateway_ip: var.gateway_ip
                name: var.name
                peer_subnets: var.peer_subnet
        argumentDocs:
            create: '- Default is 10 minutes.'
            created_at: '- The create time.'
            customer_gateway_id: '- (Required, String) The customer gateway ID.'
            delete: '- Default is 10 minutes.'
            dpd.interval: |-
                - (Optional, Int) Specifies the DPD idle timeout period.
                The value ranges from 10 to 3,600, in seconds. Defaults to 30.
            dpd.msg: '- (Optional, String) Specifies the format of DPD packets. The value can be:'
            dpd.seq-hash-notify: .
            dpd.timeout: |-
                - (Optional, Int) Specifies the interval for retransmitting DPD packets.
                The value ranges from 2 to 60, in seconds. Defaults to 15.
            enable_nqa: '- (Optional, Bool) Whether to enable NQA check. Defaults to false.'
            gateway_id: '- (Required, String, ForceNew) The VPN gateway ID.'
            gateway_ip: '- (Required, String, ForceNew) The VPN gateway IP ID.'
            ha_role: |-
                - (Optional, String, ForceNew) Specifies the mode of the VPN connection.
                The valid values are master and slave, defaults to master.
                This parameter is optional when you create a connection for a VPN gateway in active-active mode.
                When you create a connection for a VPN gateway in active-standby mode, master indicates
                the active connection, and slave indicates the standby connection.
                In active-active mode, this field must be set to master for the connection established
                using the active EIP or active private IP address of the VPN gateway, and must be set to slave
                for the connection established using active EIP 2 or active private IP address 2 of the VPN gateway.
            id: '- The resource ID.'
            ikepolicy: |-
                - (Optional, List) The IKE policy configurations.
                The ikepolicy structure is documented below.
            ikepolicy.authentication_algorithm: |-
                - (Optional, String) The authentication algorithm. The value can be sha1, md5,
                sha2-256, sha2-384, sha2-512. Defaults to sha2-256. sha1 and md5 are less secure,
                please use them with caution.
            ikepolicy.authentication_method: |-
                - (Optional, String, ForceNew) The authentication method during IKE negotiation.
                The value can be pre-share. Defaults to pre-share.
            ikepolicy.dh_group: |-
                - (Optional, String) Specifies the DH group used for key exchange in phase 1.
                The value can be group1, group2, group5, group14, group15, group16, group19, group20,
                or group21. Exercise caution when using group1, group2, group5,
                or group14 as they have low security. Defaults to group15.
            ikepolicy.dpd: |-
                - (Optional, List) Specifies the dead peer detection (DPD) object.
                The dpd structure is documented below.
            ikepolicy.encryption_algorithm: |-
                - (Optional, String) The encryption algorithm. The value can be 3des, aes-128, aes-192,
                aes-256, aes-128-gcm-16, aes-256-gcm-16, aes-128-gcm-128, aes-256-gcm-128. Defaults to aes-128.
                3des is less secure, please use it with caution.
            ikepolicy.ike_version: '- (Optional, String) The IKE negotiation version. The value can be v1 and v2. Defaults to v2.'
            ikepolicy.lifetime_seconds: |-
                - (Optional, Int) The life cycle of SA in seconds. The value ranges from 60 to 604,800.
                Defaults to 86,400. When the life cycle expires, IKE SA will be automatically updated.
            ikepolicy.local_id: '- (Optional, String) The local ID.'
            ikepolicy.local_id_type: '- (Optional, String) The local ID type. The value can be ip or fqdn. Defaults to ip.'
            ikepolicy.peer_id: '- (Optional, String) The peer ID.'
            ikepolicy.peer_id_type: '- (Optional, String) The peer ID type. The value can be ip, fqdn. Defaults to ip.'
            ikepolicy.phase_one_negotiation_mode: |-
                - (Optional, String) The negotiation mode, only works when the ike_version is v1.
                The value can be main or aggressive. Defaults to main.
            ipsecpolicy: |-
                - (Optional, List) The IPsec policy configurations.
                The ipsecpolicy structure is documented below.
            ipsecpolicy.authentication_algorithm: |-
                - (Optional, String) The authentication algorithm. The value can be sha1, md5,
                sha2-256, sha2-384, sha2-512. Defaults to sha2-256. sha1 and md5 are less secure,
                please use them with caution.
            ipsecpolicy.encapsulation_mode: |-
                - (Optional, String) The encapsulation mode, only tunnel supported for now.
                Defaults to tunnel.
            ipsecpolicy.encryption_algorithm: |-
                - (Optional, String) The encryption algorithm. The value can be 3des, aes-128, aes-192,
                aes-256, aes-128-gcm-16, aes-256-gcm-16, aes-128-gcm-128, aes-256-gcm-128. Defaults to aes-128.
                `3des** is less secure, please use it with caution.
            ipsecpolicy.lifetime_seconds: |-
                - (Optional, Int) The lifecycle time of Ipsec tunnel in seconds.
                The value ranges from 60 to 604,800. Defaults to 3600.
            ipsecpolicy.pfs: |-
                - (Optional, String) The DH key group used by PFS. The value can be group1, group2, group5, group14
                group16, group19, group20, group21. Defaults to group14.
            ipsecpolicy.transform_protocol: |-
                - (Optional, String) The transform protocol. Only esp supported for now.
                Defaults to esp.
            name: '- (Required, String) The name of the VPN connection.'
            peer_subnets: |-
                - (Optional, List) The CIDR list of customer subnets. This parameter must be empty
                when the attachment_type of the VPN gateway is set to er and vpn_type is set to policy or bgp.
                This parameter is mandatory in other scenarios.
            policy_rules: |-
                - (Optional, List) The policy rules. Only works when vpn_type is set to policy
                The policy_rules structure is documented below.
            policy_rules.destination: '- (Optional, List) The list of destination CIDRs.'
            policy_rules.rule_index: '- (Optional, Int) The rule index.'
            policy_rules.source: '- (Optional, String) The source CIDR.'
            psk: '- (Required, String) The pre-shared key.'
            region: '- Specifies the region in which resource is created.'
            seq-hash-notify: ': indicates that the payload of DPD packets is in the sequence of hash-notify;'
            seq-notify-hash: ': indicates that the payload of DPD packets is in the sequence of notify-hash;'
            status: '- The status of the VPN connection.'
            tags: '- (Optional, Map) Specifies the tags of the VPN connection.'
            tunnel_local_address: '- (Optional, String) The local tunnel address.'
            tunnel_peer_address: '- (Optional, String) The peer tunnel address.'
            update: '- Default is 10 minutes.'
            updated_at: '- The update time.'
            vpn_type: '- (Required, String, ForceNew) The connection type. The value can be policy, static or bgp.'
        importStatements: []
    opentelekomcloud_enterprise_vpn_customer_gateway_v5:
        subCategory: Virtual Private Network (VPN)
        description: Manages a Enterprise VPN Customer Gateway Service resource within OpenTelekomCloud.
        name: opentelekomcloud_enterprise_vpn_customer_gateway_v5
        title: opentelekomcloud_enterprise_vpn_customer_gateway_v5
        examples:
            - name: test
              manifest: |-
                {
                  "id_value": "${var.id_value}",
                  "name": "${var.name}"
                }
              references:
                id_value: var.id_value
                name: var.name
        argumentDocs:
            asn: |-
                - (Optional, Int, ForceNew) The BGP ASN number of the customer gateway.
                The value ranges from 1 to 4,294,967,295, the default value is 65,000.
                Set this parameter to 0 when id_type is set to fqdn.
            created_at: '- The create time.'
            id: '- The resource ID.'
            id_type: |-
                - (Optional, String, ForceNew) Specifies the identifier type of customer gateway.
                The value can be ip or fqdn. The default value is ip.
            id_value: |-
                - (Required, String, ForceNew) Specifies the identifier of a customer gateway.
                When id_type is set to ip, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
                When id_type is set to fqdn, the value is a string of characters that can contain uppercase letters, lowercase letters,
                digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
            ip: '- Specifies the IP address of the customer gateway.'
            name: |-
                - (Required, String) The customer gateway name.
                The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
            region: '- Specifies the region in which resource is created.'
            route_mode: '- Specifies the routing mode.'
            tags: '- (Optional, Map) Specifies the tags of the customer gateway.'
            updated_at: '- The update time.'
        importStatements: []
    opentelekomcloud_enterprise_vpn_gateway_v5:
        subCategory: Virtual Private Network (VPN)
        description: Manages a Enterprise VPN Gateway Service resource within OpenTelekomCloud.
        name: opentelekomcloud_enterprise_vpn_gateway_v5
        title: opentelekomcloud_enterprise_vpn_gateway_v5
        examples:
            - name: gw_1
              manifest: |-
                {
                  "availability_zones": [
                    "eu-de-01",
                    "eu-de-02"
                  ],
                  "connect_subnet": "${opentelekomcloud_vpc_subnet_v1.subnet.id}",
                  "eip1": [
                    {
                      "id": "${opentelekomcloud_vpc_eip_v1.eip_1.id}"
                    }
                  ],
                  "eip2": [
                    {
                      "id": "${opentelekomcloud_vpc_eip_v1.eip_2.id}"
                    }
                  ],
                  "local_subnets": [
                    "${opentelekomcloud_vpc_subnet_v1.subnet.cidr}"
                  ],
                  "name": "${var.name}",
                  "tags": {
                    "foo": "bar",
                    "key": "val"
                  },
                  "vpc_id": "${opentelekomcloud_vpc_v1.vpc.id}"
                }
              references:
                connect_subnet: opentelekomcloud_vpc_subnet_v1.subnet.id
                eip1.id: opentelekomcloud_vpc_eip_v1.eip_1.id
                eip2.id: opentelekomcloud_vpc_eip_v1.eip_2.id
                local_subnets: opentelekomcloud_vpc_subnet_v1.subnet.cidr
                name: var.name
                vpc_id: opentelekomcloud_vpc_v1.vpc.id
            - name: gw_1
              manifest: |-
                {
                  "availability_zones": [
                    "eu-de-01",
                    "eu-de-02"
                  ],
                  "connect_subnet": "${opentelekomcloud_vpc_subnet_v1.subnet.id}",
                  "eip1": [
                    {
                      "bandwidth_name": "evpn-gw-bw-1",
                      "bandwidth_size": 5,
                      "charge_mode": "traffic",
                      "type": "5_bgp"
                    }
                  ],
                  "eip2": [
                    {
                      "bandwidth_name": "evpn-gw-bw-2",
                      "bandwidth_size": 5,
                      "charge_mode": "traffic",
                      "type": "5_bgp"
                    }
                  ],
                  "ha_mode": "active-standby",
                  "local_subnets": [
                    "${opentelekomcloud_vpc_subnet_v1.subnet.cidr}"
                  ],
                  "name": "${var.name}",
                  "vpc_id": "${opentelekomcloud_vpc_v1.vpc.id}"
                }
              references:
                connect_subnet: opentelekomcloud_vpc_subnet_v1.subnet.id
                local_subnets: opentelekomcloud_vpc_subnet_v1.subnet.cidr
                name: var.name
                vpc_id: opentelekomcloud_vpc_v1.vpc.id
            - name: gw_1
              manifest: |-
                {
                  "access_private_ip_1": "172.16.0.99",
                  "access_private_ip_2": "172.16.0.100",
                  "access_subnet_id": "${opentelekomcloud_vpc_subnet_v1.subnet_er.id}",
                  "access_vpc_id": "${opentelekomcloud_vpc_v1.vpc_er.id}",
                  "attachment_type": "er",
                  "availability_zones": [
                    "eu-de-01",
                    "eu-de-02"
                  ],
                  "er_id": "${var.er_id}",
                  "name": "${var.name}",
                  "network_type": "private"
                }
              references:
                access_subnet_id: opentelekomcloud_vpc_subnet_v1.subnet_er.id
                access_vpc_id: opentelekomcloud_vpc_v1.vpc_er.id
                er_id: var.er_id
                name: var.name
        argumentDocs:
            access_private_ip_1: |-
                - (Optional, String, ForceNew) The private IP 1 in private network type VPN gateway.
                It is the master IP 1 in active-active HA mode, and the master IP in active-standby HA mode.
                Must declare the access_private_ip_2 at the same time, and can not use the same IP value.
                Changing this parameter will create a new resource.
            access_private_ip_2: |-
                - (Optional, String, ForceNew) The private IP 2 in private network type VPN gateway.
                It is the master IP 2 in active-active HA mode, and the slave IP in active-standby HA mode.
                Must declare the access_private_ip_1 at the same time, and can not use the same IP value.
                Changing this parameter will create a new resource.
            access_subnet_id: |-
                - (Optional, String, ForceNew) The access subnet ID.
                The default value is the value of connect_subnet.
                Changing this parameter will create a new resource.
            access_vpc_id: |-
                - (Optional, String, ForceNew) The access VPC ID.
                The default value is the value of vpc_id.
                Changing this parameter will create a new resource.
            asn: |-
                - (Optional, Int, ForceNew) The ASN number of BGP. The value ranges from 1 to 4,294,967,295.
                Defaults to 64,512.
                Changing this parameter will create a new resource.
            attachment_type: |-
                - (Optional, String, ForceNew) The attachment type. The value can be vpc and er.
                Defaults to vpc.
                Changing this parameter will create a new resource.
            availability_zones: |-
                - (Required, List, ForceNew) The list of availability zone IDs.
                Changing this parameter will create a new resource.
            connect_subnet: |-
                - (Optional, String, ForceNew) The Network ID of the VPC subnet used by the VPN gateway.
                This parameter is mandatory when attachment_type is vpc.
                Changing this parameter will create a new resource.
            create: '- Default is 10 minutes.'
            created_at: '- The create time.'
            delete: '- Default is 10 minutes.'
            eip1: |-
                - (Optional, List) The master 1 IP in active-active VPN gateway or the master IP
                in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
                The object structure is documented below.
            eip1.bandwidth_id: '- The bandwidth ID.'
            eip1.bandwidth_name: |-
                - (Optional, String, ForceNew) The bandwidth name.
                The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
                Changing this parameter will create a new resource.
            eip1.bandwidth_size: |-
                - (Optional, Int, ForceNew) Bandwidth size in Mbit/s. When the flavor is Basic, the value
                cannot be greater than 100. When the flavor is Professional1, the value cannot be greater than 300.
                When the flavor is Professional2, the value cannot be greater than 1,000.
                Changing this parameter will create a new resource.
            eip1.charge_mode: |-
                - (Optional, String, ForceNew) The charge mode of the bandwidth. The value can be bandwidth and traffic.
                Changing this parameter will create a new resource.
            eip1.id: |-
                - (Optional, String, ForceNew) The public IP ID.
                Changing this parameter will create a new resource.
            eip1.ip_address: '- The public IP address.'
            eip1.ip_version: '- Specifies the EIP version.'
            eip1.tags: '- (Optional, Map) Specifies the tags of the VPN gateway.'
            eip1.type: |-
                - (Optional, String, ForceNew) The EIP type.
                Changing this parameter will create a new resource.
            eip2: |-
                - (Optional, List, ForceNew) The master 2 IP in active-active VPN gateway or the slave IP
                in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
                The object structure is documented below.
            er_attachment_id: '- The ER attachment ID.'
            er_id: |-
                - (Optional, String, ForceNew) The enterprise router ID to attach with to VPN gateway.
                This parameter is mandatory when attachment_type is er.
                Changing this parameter will create a new resource.
            flavor: |-
                - (Optional, String, ForceNew) The flavor of the VPN gateway.
                The value can be Basic, Professional1, Professional2. Defaults to Professional1.
                Changing this parameter will create a new resource.
            ha_mode: |-
                - (Optional, String, ForceNew) The HA mode of VPN gateway. Valid values are active-active and
                active-standby. The default value is active-active.
                Changing this parameter will create a new resource.
            id: '- The ID of the VPN gateway'
            local_subnets: |-
                - (Optional, List) The list of local subnets.
                This parameter is mandatory when attachment_type is vpc.
            name: |-
                - (Required, String) The name of the VPN gateway.
                The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
            network_type: |-
                - (Optional, String, ForceNew) The network type. The value can be public and private.
                Defaults to public.
                Changing this parameter will create a new resource.
            region: '- Specifies the region in which resource is created.'
            status: '- The status of VPN gateway.'
            update: '- Default is 10 minutes.'
            updated_at: '- The update time.'
            used_connection_group: '- The number of used connection groups.'
            used_connection_number: '- The number of used connections.'
            vpc_id: |-
                - (Optional, String, ForceNew) The ID of the VPC to which the VPN gateway is connected.
                This parameter is mandatory when attachment_type is vpc.
                Changing this parameter will create a new resource.
        importStatements: []
    opentelekomcloud_er_association_v3:
        subCategory: Enterprise Router (ER)
        description: Manages an Enterprise Router Association resource within OpenTelekomCloud.
        name: opentelekomcloud_er_association_v3
        title: opentelekomcloud_er_association_v3
        examples:
            - name: test
              manifest: |-
                {
                  "attachment_id": "${var.attachment_id}",
                  "instance_id": "${var.instance_id}",
                  "route_table_id": "${var.route_table_id}"
                }
              references:
                attachment_id: var.attachment_id
                instance_id: var.instance_id
                route_table_id: var.route_table_id
        argumentDocs:
            attachment_id: '- (Required, String, ForceNew) Specifies the ID of the attachment corresponding to the association.'
            attachment_type: '- The type of the attachment corresponding to the association.'
            create: '- Default is 5 minutes.'
            created_at: '- The creation time.'
            delete: '- Default is 2 minutes.'
            id: '- The resource ID.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies the ID of the ER instance to which the route table and the
                attachment belongs.
            region: '- The region where the ER instance and route table are located.'
            route_table_id: |-
                - (Required, String, ForceNew) Specifies the ID of the route table to which the association
                belongs.
            status: '- The current status of the association.'
            updated_at: '- The latest update time.'
        importStatements: []
    opentelekomcloud_er_instance_v3:
        subCategory: Enterprise Router (ER)
        description: Manages an Enterprise Router Instance resource within OpenTelekomCloud.
        name: opentelekomcloud_er_instance_v3
        title: opentelekomcloud_er_instance_v3
        examples:
            - name: test
              manifest: |-
                {
                  "asn": 64512,
                  "availability_zones": "${var.availability_zones}",
                  "name": "${var.router_name}"
                }
              references:
                availability_zones: var.availability_zones
                name: var.router_name
        argumentDocs:
            asn: |-
                - (Required, Int, ForceNew) The BGP AS number of the ER instance.
                The valid value is range from 64,512 to 65534 or range from 4,200,000,000 to 4,294,967,294.
            auto_accept_shared_attachments: |-
                - (Optional, Bool) Whether to automatically accept the creation of shared
                attachment.
                The default value is false.
            availability_zones: |-
                - (Required, List) The availability zone list where the ER instance is located.
                The maximum number of availability zone is two. Select two AZs to configure active-active deployment for high
                availability which will ensure reliability and disaster recovery.
            create: '- Default is 10 minutes.'
            created_at: '- The creation time.'
            default_association_route_table_id: '- The ID of the default association route table.'
            default_propagation_route_table_id: '- The ID of the default propagation route table.'
            delete: '- Default is 5 minutes.'
            description: |-
                - (Optional, String) The description of the ER instance.
                The description contain a maximum of 255 characters, and the angle brackets (< and >) are not allowed.
            enable_default_association: |-
                - (Optional, Bool) Whether to enable the association of the default route table.
                The default value is false.
            enable_default_propagation: |-
                - (Optional, Bool) Whether to enable the propagation of the default route table.
                The default value is false.
            id: '- The resource ID.'
            name: |-
                - (Required, String) The router name.
                The name can contain 1 to 64 characters, only letters, digits, underscore (_) and hyphens (-) are allowed.
            region: '- Specifies the region of the ER instance.'
            status: '- Current status of the router.'
            update: '- Default is 10 minutes.'
            updated_at: '- The latest update time.'
        importStatements: []
    opentelekomcloud_er_route_table_v3:
        subCategory: Enterprise Router (ER)
        description: Manages an Enterprise Router Route Table resource within OpenTelekomCloud.
        name: opentelekomcloud_er_route_table_v3
        title: opentelekomcloud_er_route_table_v3
        examples:
            - name: test
              manifest: |-
                {
                  "description": "Route table created by terraform",
                  "instance_id": "${var.instance_id}",
                  "name": "${var.route_table_name}"
                }
              references:
                instance_id: var.instance_id
                name: var.route_table_name
        argumentDocs:
            create: '- Default is 5 minutes.'
            created_at: '- The creation time.'
            delete: '- Default is 5 minutes.'
            description: |-
                - (Optional, String) Specifies the description of the route table.
                The description contain a maximum of 255 characters, and the angle brackets (< and >) are not allowed.
            id: '- The resource ID.'
            instance_id: '- (Required, String, ForceNew) Specifies the ID of the ER instance to which the route table belongs.'
            is_default_association: '- Whether this route table is the default association route table.'
            is_default_propagation: '- Whether this route table is the default propagation route table.'
            name: |-
                - (Required, String) Specifies the name of the route table.
                The name can contain 1 to 64 characters, only letters, digits, underscore (_), hyphens (-) and dots (.) allowed.
            region: '- The region where the ER instance and route table are located.'
            status: '- The current status of the route table.'
            update: '- Default is 5 minutes.'
            updated_at: '- The latest update time.'
        importStatements: []
    opentelekomcloud_er_static_route_v3:
        subCategory: Enterprise Router (ER)
        description: Manages an Enterprise Router Static Route resource within OpenTelekomCloud.
        name: opentelekomcloud_er_static_route_v3
        title: opentelekomcloud_er_static_route_v3
        examples:
            - name: test
              manifest: |-
                {
                  "attachment_id": "${var.source_vpc_attachment_id}",
                  "destination": "${var.destination_vpc_cidr}",
                  "route_table_id": "${var.route_table_id}"
                }
              references:
                attachment_id: var.source_vpc_attachment_id
                destination: var.destination_vpc_cidr
                route_table_id: var.route_table_id
            - name: test
              manifest: |-
                {
                  "destination": "${var.destination_vpc_cidr}",
                  "is_blackhole": true,
                  "route_table_id": "${var.route_table_id}"
                }
              references:
                destination: var.destination_vpc_cidr
                route_table_id: var.route_table_id
        argumentDocs:
            attachment_id: '- (Optional, String) Specifies the ID of the corresponding attachment.'
            create: '- Default is 5 minutes.'
            created_at: '- The creation time of the static route.'
            delete: '- Default is 2 minutes.'
            destination: '- (Required, String, ForceNew) Specifies the destination of the static route.'
            "false": ', the parameter attachment_id is required.'
            id: '- The resource ID.'
            is_blackhole: '- (Optional, Bool) Specifies whether route is the black hole route, defaults to false.'
            region: '- The region where the static route and related route table are located.'
            route_table_id: |-
                - (Required, String, ForceNew) Specifies the ID of the route table to which the static route
                belongs.
            status: '- The current status of the static route.'
            "true": ', the parameter attachment_id must be empty.'
            type: '- The type of the static route.'
            update: '- Default is 5 minutes.'
            updated_at: '- The latest update time of the static route.'
        importStatements: []
    opentelekomcloud_er_vpc_attachment_v3:
        subCategory: Enterprise Router (ER)
        description: Manages an Enterprise Router VPC Attachment resource within OpenTelekomCloud.
        name: opentelekomcloud_er_vpc_attachment_v3
        title: opentelekomcloud_er_vpc_attachment_v3
        examples:
            - name: test
              manifest: |-
                {
                  "auto_create_vpc_routes": true,
                  "description": "VPC attachment created by terraform",
                  "instance_id": "${var.instance_id}",
                  "name": "${var.attachment_name}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                instance_id: var.instance_id
                name: var.attachment_name
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
        argumentDocs:
            auto_create_vpc_routes: |-
                - (Optional, Bool, ForceNew) Specifies whether to automatically configure routes for the VPC
                which pointing to the ER instance.
                The destination CIDRs of the routes are fixed as follows:
            create: '- Default is 5 minutes.'
            created_at: '- The creation time.'
            delete: '- Default is 2 minutes.'
            description: |-
                - (Optional, String) Specifies the description of the VPC attachment.
                The description contain a maximum of 255 characters, and the angle brackets (< and >) are not allowed.
            id: '- The resource ID.'
            instance_id: |-
                - (Required, String, ForceNew) Specifies the ID of the ER instance to which the VPC attachment
                belongs.
                Changing this parameter will create a new resource.
            name: |-
                - (Required, String) Specifies the name of the VPC attachment.
                The name can contain 1 to 64 characters, digits, underscore (_), hyphens (-) and
                dots (.) allowed.
            region: '- The region where the ER instance and the VPC attachment are.'
            status: '- The current status of the VPC attachment.'
            subnet_id: |-
                - (Required, String, ForceNew) Specifies the ID of the VPC subnet to which the VPC attachment belongs.
                Changing this parameter will create a new resource.
            update: '- Default is 5 minutes.'
            updated_at: '- The latest update time.'
            vpc_id: |-
                - (Required, String, ForceNew) Specifies the ID of the VPC to which the VPC attachment belongs.
                Changing this parameter will create a new resource.
        importStatements: []
    opentelekomcloud_evs_volume_v3:
        subCategory: Elastic Volume Service (EVS)
        description: Manages an EVS resource within OpenTelekomCloud.
        name: opentelekomcloud_evs_volume_v3
        title: opentelekomcloud_evs_volume_v3
        examples:
            - name: volume_1
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "description": "first test volume",
                  "name": "volume_1",
                  "size": 20,
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume_type": "SATA"
                }
            - name: volume_1
              manifest: |-
                {
                  "availability_zone": "eu-de-01",
                  "description": "first test volume",
                  "kms_id": "${var.kms_id}",
                  "name": "volume_1",
                  "size": 20,
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume_type": "SATA"
                }
              references:
                kms_id: var.kms_id
        argumentDocs:
            attachment: |-
                - If a volume is attached to an instance, this attribute will
                display the Attachment ID, Instance ID, and the Device as the Instance sees it.
            availability_zone: |-
                - (Required) The availability zone for the volume.
                Changing this creates a new volume.
            backup_id: |-
                - (Optional) The backup ID from which to create the volume.
                Changing this creates a new volume.
            cascade: '- (Optional) Specifies to delete all snapshots associated with the EVS disk. Default is false.'
            description: '- (Optional) A description of the volume. Changing this updates the volume''s description.'
            device_type: |-
                - (Optional) The device type of volume to create. Valid options are VBD and SCSI.
                Defaults to VBD. Changing this creates a new volume.
            image_id: |-
                - (Optional) The image ID from which to create the volume.
                Changing this creates a new volume.
            kms_id: |-
                - (Optional) The Encryption KMS ID to create the volume.
                Changing this creates a new volume.
            multiattach: |-
                - (Optional) Specifies whether the disk is shareable. The default value is false.
                Changing this creates a new volume.
            name: '- (Optional) A unique name for the volume. Changing this updates the volume''s name.'
            size: |-
                - (Optional) The size of the volume to create (in gigabytes). This parameter is mandatory when
                you create an empty EVS disk or use an image or a snapshot to create an EVS disk.
                Decreasing this value creates a new volume.
            snapshot_id: |-
                - (Optional) The snapshot ID from which to create the volume.
                Changing this creates a new volume.
            tags: |-
                - (Optional) Tags key/value pairs to associate with the volume.
                Changing this updates the existing volume tags.
            volume_type: |-
                - (Required) The type of volume to create.
                Currently, the value can be SSD, SAS, SATA, co-p1, or uh-l1.
                Changing this creates a new volume.
            wwn: '- Specifies the unique identifier used for mounting the EVS disk.'
        importStatements: []
    opentelekomcloud_fgs_async_invoke_config_v2:
        subCategory: FunctionGraph
        description: Manages an FGS Async Invoke Config resource within OpenTelekomCloud.
        name: opentelekomcloud_fgs_async_invoke_config_v2
        title: opentelekomcloud_fgs_async_invoke_config_v2
        examples:
            - name: test
              manifest: |-
                {
                  "function_urn": "${var.function_urn}",
                  "max_async_event_age_in_seconds": 3500,
                  "max_async_retry_attempts": 2,
                  "on_failure": [
                    {
                      "destination": "SMN",
                      "param": "${jsonencode({\n      topic_urn = var.topic_urn\n    })}"
                    }
                  ],
                  "on_success": [
                    {
                      "destination": "OBS",
                      "param": "${jsonencode({\n      bucket  = var.bucket_name\n      prefix  = \"/success\"\n      expires = 5\n    })}"
                    }
                  ]
                }
              references:
                function_urn: var.function_urn
        argumentDocs:
            bucket: |-
                (bucket name), prefix (object directory prefix) and expires (object
                expiration time, the valid value ranges from 0 to 365. If the value is 0, the object will not expire.).
            func_urn: (function URN).
            function_urn: |-
                - (Required, String, ForceNew) Specifies the function URN to which the asynchronous invocation belongs.
                Changing this will create a new resource.
            id: '- Specifies a resource ID in UUID format.'
            max_async_event_age_in_seconds: '- (Required, Int) Specifies the maximum validity period of a message.'
            max_async_retry_attempts: |-
                - (Required, Int) Specifies the maximum number of retry attempts to be made if
                asynchronous invocation fails.
            on_failure: |-
                - (Optional, List) Specifies the target to be invoked when a function fails to be executed due to a
                system error or an internal error.
                The object structure is documented below.
            on_success: |-
                - (Optional, List) Specifies the target to be invoked when a function is successfully executed.
                The object structure is documented below.
            on_success.destination: |-
                - (Required, String) Specifies the object type.
                The valid values are as follows:
            on_success.param: '- (Required, String) Specifies the parameters (map object in JSON format) corresponding to the target service.'
            region: '- Specifies the region in which the asynchronous invocation is configured.'
            stream_name: .
            topic_urn: .
        importStatements: []
    opentelekomcloud_fgs_event_v2:
        subCategory: FunctionGraph
        description: Manages an FGS Event resource within OpenTelekomCloud.
        name: opentelekomcloud_fgs_event_v2
        title: opentelekomcloud_fgs_event_v2
        examples:
            - name: test
              manifest: |-
                {
                  "content": "${base64encode(var.event_content)}",
                  "function_urn": "${var.function_urn}",
                  "name": "${var.event_name}"
                }
              references:
                function_urn: var.function_urn
                name: var.event_name
        argumentDocs:
            content: |-
                - (Required, String) Specifies the function event content.
                The value is the base64 encoding of the JSON string.
            function_urn: '- (Required, String, ForceNew) Specifies the URN of the function to which the event belongs.'
            id: '- The resource ID in UUID format.'
            name: |-
                - (Required, String) Specifies the function event name.
                The name can contain a maximum of 25, only letters, digits, underscores (_) and hyphens (-) are allowed.
            region: '- The region in which function graph resource is created.'
            updated_at: '- The latest update time of the function event.'
        importStatements: []
    opentelekomcloud_fgs_function_v2:
        subCategory: FunctionGraph
        description: Manages an FGS Function resource within OpenTelekomCloud.
        name: opentelekomcloud_fgs_function_v2
        title: opentelekomcloud_fgs_function_v2
        examples:
            - name: test
              manifest: |-
                {
                  "agency": "${var.agency_name}",
                  "app": "default",
                  "code_type": "inline",
                  "description": "fuction test",
                  "func_code": "${base64encode(var.function_codes)}",
                  "handler": "test.handler",
                  "memory_size": 128,
                  "name": "${var.function_name}",
                  "runtime": "Python2.7",
                  "timeout": 3
                }
              references:
                agency: var.agency_name
                name: var.function_name
            - name: test
              manifest: |-
                {
                  "agency": "${var.agency_name}",
                  "app": "default",
                  "code_type": "inline",
                  "func_code": "# -*- coding:utf-8 -*-\nimport json\ndef handler (event, context):\n    return {\n        \"statusCode\": 200,\n        \"isBase64Encoded\": False,\n        \"body\": json.dumps(event),\n        \"headers\": {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n",
                  "handler": "test.handler",
                  "memory_size": 128,
                  "name": "${var.function_name}",
                  "runtime": "Python2.7",
                  "timeout": 3
                }
              references:
                agency: var.agency_name
                name: var.function_name
            - name: by_swr_image
              manifest: |-
                {
                  "agency": "${var.agency_name}",
                  "app": "default",
                  "custom_image": [
                    {
                      "url": "${var.image_url}"
                    }
                  ],
                  "handler": "-",
                  "memory_size": 128,
                  "name": "${var.function_name}",
                  "runtime": "Custom Image",
                  "timeout": 3
                }
              references:
                agency: var.agency_name
                custom_image.url: var.image_url
                name: var.function_name
            - name: with_alias
              manifest: |-
                {
                  "app": "default",
                  "code_type": "inline",
                  "func_code": "${base64encode(var.function_codes)}",
                  "handler": "test.handler",
                  "memory_size": 128,
                  "name": "${var.function_name}",
                  "runtime": "Python2.7",
                  "timeout": 3,
                  "versions": [
                    {
                      "aliases": [
                        {
                          "name": "demo"
                        }
                      ],
                      "name": "latest"
                    }
                  ]
                }
              references:
                name: var.function_name
            - name: test
              manifest: |-
                {
                  "agency": "test",
                  "app": "default",
                  "code_type": "inline",
                  "description": "fuction test",
                  "func_code": "${base64encode(var.function_codes)}",
                  "handler": "test.handler",
                  "log_group_id": "${var.log_group_id}",
                  "log_group_name": "${var.log_group_name}",
                  "log_topic_id": "${var.log_topic_id}",
                  "log_topic_name": "${var.log_topic_name}",
                  "memory_size": 128,
                  "name": "${var.function_name}",
                  "runtime": "Python2.7",
                  "timeout": 3
                }
              references:
                log_group_id: var.log_group_id
                log_group_name: var.log_group_name
                log_topic_id: var.log_topic_id
                log_topic_name: var.log_topic_name
                name: var.function_name
            - name: test
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${app}",
                        "${func_code}",
                        "${agency}",
                        "${tags}"
                      ]
                    }
                  ]
                }
              references:
                lifecycle.ignore_changes: app
        argumentDocs:
            "-1": and means the number of instances is unlimited.
            "0": means this function is disabled.
            agency: |-
                - (Optional, String) Specifies the agency. This parameter is mandatory if the function needs to access other
                cloud services.
            aliases.description: '- (Optional, String) Specifies the description of the version alias.'
            aliases.name: '- (Required, String) Specifies the name of the version alias.'
            app: '- (Required, String) Specifies the group to which the function belongs.'
            app_agency: |-
                - (Optional, String) Specifies the execution agency enables you to obtain a token or an AK/SK for
                accessing other cloud services.
            code_filename: |-
                - (Optional, String) Specifies the name of a function file.
                Required if the code_type is set to jar or zip.
            code_type: '- (Optional, String) Specifies the function code type, which can be:'
            code_url: |-
                - (Optional, String) Specifies the code url.
                Required if the code_type is set to obs.
            create: '- Default is 10 minutes.'
            custom_image: |-
                - (Optional, List) Specifies the custom image configuration for creating function.
                The custom_image structure is documented below.
            custom_image.url: '- (Required, String) Specifies the URL of SWR image, the URL must start with swr..'
            delete: '- Default is 10 minutes.'
            depend_list: '- (Optional, List) Specifies the ID list of the dependencies.'
            description: '- (Optional, String) Specifies the description of the function.'
            dns_list: '- The private DNS configuration of the function network.'
            encrypted_user_data: |-
                - (Optional, String) Specifies the key/value information defined to be encrypted for the
                function.
            func_code: |-
                - (Optional, String) Specifies the function code.
                The code value can be encoded using Base64 or just with the text code.
                Required if the code_type is set to inline, zip, or jar.
            func_mounts: |-
                - (Optional, List) Specifies the file system list. The func_mounts object structure is documented
                below.
            func_mounts.concurrency_num: |-
                - (Optional, Int) Specifies the number of concurrent requests of the function.
                The valid value ranges from 1 to 1,000, the default value is 1.
            func_mounts.local_mount_path: '- (Required, String) Specifies the function access path.'
            func_mounts.mount_resource: '- (Required, String) Specifies the ID of the mounted resource (corresponding cloud service).'
            func_mounts.mount_share_path: '- (Required, String) Specifies the remote mount path. Example: 192.168.0.12:/data.'
            func_mounts.mount_type: '- (Required, String) Specifies the mount type.'
            func_mounts.v2: version of the function.
            func_mounts/status: '- The status of file system.'
            functiongraph_version: |-
                - (Optional, String, ForceNew) Specifies the FunctionGraph version, default value is v2.
                The valid values are as follows:
            gpu_memory: |-
                - (Optional, Int) Specifies the GPU memory size allocated to the function, in MByte (MB).
                The valid value ranges form 1,024 to 16,384, the value must be a multiple of 1,024.
                If not specified, the GPU function is disabled.
            handler: '- (Required, String) Specifies the entry point of the function.'
            id: '- The resource ID, consist of urn and current version, the format is <urn>:<version>.'
            initializer_handler: '- (Optional, String) Specifies the initializer of the function.'
            initializer_timeout: |-
                - (Optional, Int) Specifies the maximum duration the function can be initialized. Value range:
                1s to 300s.
            log_group_id: '- (Optional, String) Specifies the ID of the LTS log group.'
            log_group_name: '- (Optional, String) Specifies the name of the LTS log group.'
            log_topic_id: '- (Optional, String) Specifies the ID of the LTS log stream.'
            log_topic_name: '- (Optional, String) Specifies the name of the LTS stream.'
            max_instance_num: |-
                - (Optional, String) Specifies the maximum number of instances of the function.
                The valid value ranges from -1 to 1,000, defaults to 400.
            memory_size: '- (Required, Int) Specifies the memory size allocated to the function, in MByte (MB).'
            mount_user_group_id: |-
                - (Optional, Int) Specifies the user group ID, a non-0 integer from –1 to 65,534.
                Defaults to -1.
            mount_user_id: |-
                - (Optional, Int) Specifies the user ID, a non-0 integer from –1 to 65,534.
                Defaults to -1.
            name: |-
                - (Required, String, ForceNew) Specifies the name of the function.
                Changing this will create a new resource.
            network_id: '- (Optional, String) Specifies the network ID of subnet.'
            region: '- The region in which function graph resource is created.'
            reserved_instances: |-
                - (Optional, List) Specifies the reserved instance policies of the function.
                The reserved_instances structure is documented below.
            reserved_instances.count: |-
                - (Required, Int) Specifies the number of reserved instance.
                The valid value ranges from 0 to 1,000.
                If this parameter is set to 0, the reserved instance will not run.
            reserved_instances.idle_mode: |-
                - (Optional, Bool) Specifies whether to enable the idle mode. The default value is false.
                If this parameter is enabled, reserved instances are initialized and the mode change needs some time to take effect.
                You will still be billed at the price of reserved instances for non-idle mode in this period.
            reserved_instances.latest: |-
                version is 1.0 and reserved instances have been configured for this version,
                no more instances can be configured for alias 1.0.
            reserved_instances.qualifier_name: '- (Required, String) Specifies the version name or alias name.'
            reserved_instances.qualifier_type: '- (Required, String) Specifies qualifier type of reserved instance. The valid values are as follows:'
            reserved_instances.tactics_config: |-
                - (Optional, List) Specifies the auto scaling policies for reserved instance.
                The tactics_config structure is documented below.
            runtime: |-
                - (Required, String, ForceNew) Specifies the environment for executing the function.
                The valid values are as follows:
            tactics_config.cron_configs: |-
                - (Optional, List) Specifies the list of scheduled policy configurations.
                The cron_configs structure is documented below.
            tactics_config.cron_configs.count: |-
                - (Required, Int) Specifies the number of reserved instance to which the policy belongs.
                The valid value ranges from 0 to 1,000.
            tactics_config.cron_configs.cron: '- (Required, String) Specifies the cron expression.'
            tactics_config.cron_configs.expired_time: '- (Required, Int) Specifies the expiration timestamp of the policy. The unit is s, e.g. 1740560074.'
            tactics_config.cron_configs.name: |-
                - (Required, String) Specifies the name of scheduled policy configuration.
                The valid length is limited from 1 to 60 characters, only letters, digits, hyphens (-), and underscores (_) are allowed.
                The name must start with a letter and ending with a letter or digit.
            tactics_config.cron_configs.start_time: '- (Required, Int) Specifies the effective timestamp of policy. The unit is s, e.g. 1740560074.'
            tags: '- (Optional, Map) Specifies the key/value pairs to associate with the function.'
            timeout: |-
                - (Required, Int) Specifies the timeout interval of the function, in seconds.
                The value ranges from 3 to 900.
            urn: '- Uniform Resource Name.'
            user_data: '- (Optional, String) Specifies the Key/Value information defined for the function.'
            v2: version of the function.
            version: '- The version of the function.'
            versions: |-
                - (Optional, List) Specifies the versions management of the function.
                The versions structure is documented below.
            versions.aliases: |-
                - (Optional, List) Specifies the aliases management for specified version.
                The aliases structure is documented below.
            versions.name: '- (Required, String) Specifies the version name.'
            vpc_id: '- (Optional, String) Specifies the ID of VPC.'
        importStatements: []
    opentelekomcloud_fgs_trigger_v2:
        subCategory: FunctionGraph
        description: Manages an FGS Trigger resource within OpenTelekomCloud.
        name: opentelekomcloud_fgs_trigger_v2
        title: opentelekomcloud_fgs_trigger_v2
        examples:
            - name: test
              manifest: |-
                {
                  "event_data": "${jsonencode({\n    \"name\" : format(\"%s_rate\", var.trigger_name),\n    \"schedule_type\" : \"Rate\",\n    \"user_event\" : \"Created by terraform script\",\n    \"schedule\" : \"3m\"\n  })}",
                  "function_urn": "${var.function_urn}",
                  "type": "TIMER"
                }
              references:
                function_urn: var.function_urn
            - name: timer_cron
              manifest: |-
                {
                  "event_data": "${jsonencode({\n    \"name\" : format(\"%s_cron\", var.trigger_name),\n    \"schedule_type\" : \"Cron\",\n    \"user_event\" : \"Created by terraform script\",\n    \"schedule\" : \"@every 1h30m\"\n  })}",
                  "function_urn": "${var.function_urn}",
                  "type": "TIMER"
                }
              references:
                function_urn: var.function_urn
        argumentDocs:
            TIMER: |-
                , DDS, DMS, KAFKA and
                LTS. For more details, please refer to the documentation.
            created_at: '- The creation time of the function trigger.'
            delete: '- Default is 3 minutes.'
            event_data: |-
                - (Required, String) Specifies the detailed configuration of the function trigger event.
                For various types of trigger parameter configurations, please refer to the
                documentation.
            function_urn: '- (Required, String, ForceNew) Specifies the function URN to which the function trigger belongs.'
            id: '- resource ID in UUID format.'
            region: '- The region where the function trigger is located.'
            status: |-
                - (Optional, String) Specifies the status of the function trigger.
                The valid values are ACTIVE and DISABLED.
                For DDS and Kafka triggers the default value is DISABLED, for other triggers= the default value is ACTIVE.
            type: |-
                - (Required, String, ForceNew) Specifies the type of the function trigger.
                The valid values are TIMER, APIG, CTS, DDS, DEDICATEDGATEWAY, etc.
            update: '- Default is 5 minutes.'
            updated_at: '- The latest update time of the function trigger.'
        importStatements: []
    opentelekomcloud_fw_firewall_group_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Firewall Group resource within OpenTelekomCloud.
        name: opentelekomcloud_fw_firewall_group_v2
        title: opentelekomcloud_fw_firewall_group_v2
        examples:
            - name: firewall_group_1
              manifest: |-
                {
                  "ingress_policy_id": "${opentelekomcloud_fw_policy_v2.policy_1.id}",
                  "name": "my-firewall-group"
                }
              references:
                ingress_policy_id: opentelekomcloud_fw_policy_v2.policy_1.id
              dependencies:
                opentelekomcloud_fw_policy_v2.policy_1: |-
                    {
                      "name": "my-policy",
                      "rules": [
                        "${opentelekomcloud_fw_rule_v2.rule_1.id}",
                        "${opentelekomcloud_fw_rule_v2.rule_2.id}"
                      ]
                    }
                opentelekomcloud_fw_rule_v2.rule_1: |-
                    {
                      "action": "deny",
                      "description": "drop TELNET traffic",
                      "destination_port": "23",
                      "enabled": "true",
                      "name": "my-rule-1",
                      "protocol": "tcp"
                    }
                opentelekomcloud_fw_rule_v2.rule_2: |-
                    {
                      "action": "deny",
                      "description": "drop NTP traffic",
                      "destination_port": "123",
                      "enabled": "false",
                      "name": "my-rule-2",
                      "protocol": "udp"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) Administrative up/down status for the firewall group
                (must be "true" or "false" if provided - defaults to "true").
                Changing this updates the admin_state_up of an existing firewall group.
            description: |-
                - (Required) A description for the firewall group. Changing this
                updates the description of an existing firewall group.
            egress_policy_id: |-
                - The egress policy resource id for the firewall group. Changing
                this updates the egress_policy_id of an existing firewall group.
            ingress_policy_id: |-
                - The ingress policy resource id for the firewall group. Changing
                this updates the ingress_policy_id of an existing firewall group.
            name: |-
                - (Optional) A name for the firewall group. Changing this
                updates the name of an existing firewall group.
            policy_id: '- See Argument Reference above.'
            ports: |-
                - (Optional) Port(s) to associate this firewall group instance
                with. Must be a list of strings. Changing this updates the associated routers
                of an existing firewall group.
            tenant_id: |-
                - (Optional) The owner of the floating IP. Required if admin wants
                to create a firewall group for another tenant. Changing this creates a new
                firewall group.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_fw_policy_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Firewall Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_fw_policy_v2
        title: opentelekomcloud_fw_policy_v2
        examples:
            - name: policy_1
              manifest: |-
                {
                  "name": "my-policy",
                  "rules": [
                    "${opentelekomcloud_fw_rule_v2.rule_1.id}",
                    "${opentelekomcloud_fw_rule_v2.rule_2.id}"
                  ]
                }
              references:
                rules: opentelekomcloud_fw_rule_v2.rule_1.id
              dependencies:
                opentelekomcloud_fw_rule_v2.rule_1: |-
                    {
                      "action": "deny",
                      "description": "drop TELNET traffic",
                      "destination_port": "23",
                      "enabled": "true",
                      "name": "my-rule-1",
                      "protocol": "tcp"
                    }
                opentelekomcloud_fw_rule_v2.rule_2: |-
                    {
                      "action": "deny",
                      "description": "drop NTP traffic",
                      "destination_port": "123",
                      "enabled": "false",
                      "name": "my-rule-2",
                      "protocol": "udp"
                    }
        argumentDocs:
            audited: |-
                - (Optional) Audit status of the firewall policy
                (must be "true" or "false" if provided - defaults to "false").
                This status is set to "false" whenever the firewall policy or any of its
                rules are changed. Changing this updates the audited status of an existing
                firewall policy.
            description: |-
                - (Optional) A description for the firewall policy. Changing
                this updates the description of an existing firewall policy.
            name: |-
                - (Optional) A name for the firewall policy. Changing this
                updates the name of an existing firewall policy.
            rules: |-
                - (Optional) An array of one or more firewall rules that comprise
                the policy. Changing this results in adding/removing rules from the
                existing firewall policy.
            shared: |-
                - (Optional) Sharing status of the firewall policy (must be "true"
                or "false" if provided). If this is "true" the policy is visible to, and
                can be used in, firewalls in other tenants. Changing this updates the
                shared status of an existing firewall policy. Only administrative users
                can specify if the policy should be shared.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_fw_rule_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Firewall Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_fw_rule_v2
        title: opentelekomcloud_fw_rule_v2
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action": "deny",
                  "description": "drop TELNET traffic",
                  "destination_port": "23",
                  "enabled": "true",
                  "name": "my_rule",
                  "protocol": "tcp"
                }
            - name: rule_1
              manifest: |-
                {
                  "action": "deny",
                  "description": "Ipv6 deny",
                  "destination_ip_address": "2001:db8::",
                  "enabled": true,
                  "ip_version": 6,
                  "name": "rule_1",
                  "protocol": "tcp"
                }
        argumentDocs:
            action: |-
                - (Required) Action to be taken ( must be "allow" or "deny") when the
                firewall rule matches. Changing this updates the action of an existing
                firewall rule.
            description: |-
                - (Optional) A description for the firewall rule. Changing this
                updates the description of an existing firewall rule.
            destination_ip_address: |-
                - (Optional) The destination IP address on which the
                firewall rule operates. Changing this updates the destination_ip_address
                of an existing firewall rule.
            destination_port: |-
                - (Optional) The destination port on which the firewall
                rule operates. Changing this updates the destination_port of an existing
                firewall rule.
            enabled: |-
                - (Optional) Enabled status for the firewall rule (must be "true"
                or "false" if provided - defaults to "true"). Changing this updates the
                enabled status of an existing firewall rule.
            ip_version: |-
                - (Optional) IP version, either 4 (default) or 6. Changing this
                updates the ip_version of an existing firewall rule.
            name: |-
                - (Optional) A unique name for the firewall rule. Changing this
                updates the name of an existing firewall rule.
            protocol: |-
                - (Required) The protocol type on which the firewall rule operates.
                Valid values are: tcp, udp, icmp, and any. Changing this updates the
                protocol of an existing firewall rule.
            source_ip_address: |-
                - (Optional) The source IP address on which the firewall
                rule operates. Changing this updates the source_ip_address of an existing
                firewall rule.
            source_port: |-
                - (Optional) The source port on which the firewall
                rule operates. Changing this updates the source_port of an existing
                firewall rule.
            tenant_id: |-
                - (Optional) The owner of the firewall rule. Required if admin
                wants to create a firewall rule for another tenant. Changing this creates a
                new firewall rule.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_gaussdb_mysql_instance_v3:
        subCategory: GaussDB(for MySQL)
        description: Manages a GaussDB for MySql resource within OpenTelekomCloud.
        name: opentelekomcloud_gaussdb_mysql_instance_v3
        title: opentelekomcloud_gaussdb_mysql_instance_v3
        examples:
            - name: instance
              manifest: |-
                {
                  "availability_zone_mode": "multi",
                  "flavor": "gaussdb.mysql.xlarge.x86.8",
                  "master_availability_zone": "eu-de-01",
                  "name": "gaussdb_instance",
                  "password": "${var.password}",
                  "read_replicas": 1,
                  "security_group_id": "${var.secgroup_id}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                password: var.password
                security_group_id: var.secgroup_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
            - name: instance
              manifest: |-
                {
                  "backup_strategy": [
                    {
                      "keep_days": 7,
                      "start_time": "03:00-04:00"
                    }
                  ],
                  "flavor": "gaussdb.mysql.4xlarge.x86.4",
                  "name": "gaussdb_instance_1",
                  "password": "${var.password}",
                  "security_group_id": "${var.secgroup_id}",
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                password: var.password
                security_group_id: var.secgroup_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
            - name: instance_1
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${password}"
                      ]
                    }
                  ]
                }
              references:
                lifecycle.ignore_changes: password
        argumentDocs:
            alias: '- Indicates the alias of the instance.'
            availability_zone_mode: |-
                - (Optional, String, ForceNew) Specifies the availability zone mode: "single" or "multi".
                Defaults to "single". Changing this parameter will create a new resource.
            backup_strategy: '- (Optional, List) Specifies the advanced backup policy. Structure is documented below.'
            backup_strategy.keep_days: |-
                - (Optional, Int) Specifies the number of days to retain the generated backup files. The value ranges from
                0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
                the automated backup policy is enabled by default. Backup files are stored for seven days by default.
            backup_strategy.start_time: |-
                - (Required, String) Specifies the backup time window. Automated backups will be triggered during the
                backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
                HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
                value: 08:00-09:00, 03:00-04:00.
            charging_mode: '- Indicates the charging mode of the instance.'
            configuration_id: '- (Optional, String, ForceNew) Specifies the configuration ID.'
            configuration_name: '- (Optional, String, ForceNew) Specifies the configuration name.'
            create: '- Default is 60 minutes.'
            created: '- Indicates the created time of the DB instance.'
            datastore: '- (Optional, List, ForceNew) Specifies the database information. Structure is documented below.'
            datastore.engine: '- (Required, String, ForceNew) Specifies the database engine. Only "gaussdb-mysql" is supported now.'
            datastore.version: '- (Required, String, ForceNew) Specifies the database version. Only "8.0" is supported now.'
            db_user_name: '- Indicates the default username.'
            dedicated_resource_id: |-
                - (Optional, String, ForceNew) Specifies the dedicated resource ID. Changing this parameter
                will create a new resource.
            dedicated_resource_name: |-
                - (Optional, String, ForceNew) Specifies the dedicated resource name. Changing this parameter
                will create a new resource.
            delete: '- Default is 30 minutes.'
            flavor: '- (Required, String) Specifies the instance specifications.'
            id: '- Indicates the DB instance ID.'
            master_availability_zone: |-
                - (Optional, String, ForceNew) Specifies the availability zone where the master node
                resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
                resource.
            mode: '- Indicates the instance mode.'
            name: |-
                - (Required, String) Specifies the instance name, which can be the same as an existing instance name. The value
                must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
                digits, hyphens (-), and underscores (_).
            node_count: '- Indicates the amount on nodes of the DB instance.'
            nodes: '- Indicates the instance nodes information. Structure is documented below.'
            nodes.az_code: '- Indicates the availability zone where the node resides.'
            nodes.created: '- Indicates the created time of the DB node.'
            nodes.flavor_ref: '- Indicates the specification code of DB node.'
            nodes.id: '- Indicates the node ID.'
            nodes.max_connections: '- Indicates the maximum number of connections of DB node.'
            nodes.name: '- Indicates the node name.'
            nodes.need_restart: '- Indicates whether the reboot of DB instance is needed for the parameter modifications to take effect.'
            nodes.port: '- Indicates the database port.'
            nodes.priority: '- Indicates the failover priority of the DB node.'
            nodes.private_read_ip: '- Indicates the private IP address of a node.'
            nodes.ram: '- Indicates the memory size in GB of the DB node.'
            nodes.region_code: '- Indicates the region where the node resides.'
            nodes.status: '- Indicates the node status.'
            nodes.type: '- Indicates the node type: master or slave.'
            nodes.updated: '- Indicates the updated time of the DB node.'
            nodes.vcpus: '- Indicates the vCPUs number of DB node.'
            password: |-
                - (Required, String) Specifies the database password. The value must be 8 to 32 characters in length,
                including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+?
            port: '- Indicates the database port.'
            private_write_ip: '- Indicates the private IP address of the DB instance.'
            project_id: '- Indicates the id of the project.'
            public_ip: '- Indicates the public IP address of the DB instance.'
            read_replicas: '- (Optional, Int) Specifies the count of read replicas. Defaults to 1.'
            region: |-
                - (Optional, String, ForceNew) The region in which to create the GaussDB mysql instance resource. If omitted,
                the provider-level region will be used.
            security_group_id: |-
                - (Optional, String, ForceNew) Specifies the security group ID. Required if the selected subnet
                doesn't enable network ACL.
            status: '- Indicates the DB instance status.'
            subnet_id: '- (Required, String, ForceNew) Specifies the network ID of a subnet.'
            time_zone: |-
                - (Optional, String, ForceNew) Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
                will create a new resource.
            update: '- Default is 60 minutes.'
            updated: '- Indicates the updated time of the DB instance.'
            vpc_id: '- (Required, String, ForceNew) Specifies the VPC ID.'
        importStatements: []
    opentelekomcloud_identity_acl_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM ACL resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_acl_v3
        title: opentelekomcloud_identity_acl_v3
        examples:
            - name: acl
              manifest: |-
                {
                  "ip_cidrs": [
                    {
                      "cidr": "159.138.39.192/32",
                      "description": "This is a test ip address"
                    }
                  ],
                  "ip_ranges": [
                    {
                      "description": "This is a test ip range",
                      "range": "0.0.0.0-255.255.255.0"
                    }
                  ],
                  "type": "console"
                }
        argumentDocs:
            id: '- The ID of identity ACL.'
            ip_cidrs: |-
                - (Optional, List) Specifies the IPv4 CIDR blocks from which console access or api access is allowed.
                The ip_cidrs cannot repeat. The object structure is documented below.
            ip_cidrs.cidr: '- (Required, String) Specifies the IPv4 CIDR block, for example, 192.168.0.0/24.'
            ip_cidrs.description: '- (Optional, String) Specifies a description about an IPv4 CIDR block.'
            ip_ranges: |-
                - (Optional, List) Specifies the IP address ranges from which console access or api access is allowed.
                The ip_ranges cannot repeat. The object structure is documented below.
            ip_ranges.description: '- (Optional, String) Specifies a description about an IP address range.'
            ip_ranges.range: '- (Required, String) Specifies the Ip address range, for example, 0.0.0.0-255.255.255.0.'
            type: |-
                - (Required, String, ForceNew) Specifies the ACL is created through the Console or API.
                Valid values are console and api. Changing this parameter will create a new ACL.
        importStatements: []
    opentelekomcloud_identity_agency_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Agency resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_agency_v3
        title: opentelekomcloud_identity_agency_v3
        examples:
            - name: agency
              manifest: |-
                {
                  "delegated_domain_name": "***",
                  "description": "test agency",
                  "domain_roles": [
                    "Anti-DDoS Administrator"
                  ],
                  "name": "test_agency",
                  "project_role": [
                    {
                      "project": "eu-de",
                      "roles": [
                        "KMS Administrator"
                      ]
                    }
                  ]
                }
        argumentDocs:
            create_time: '- The time when the agency was created.'
            delegated_domain_name: '- (Required) The name of delegated domain.'
            description: |-
                - (Optional) Provides supplementary information about the
                agency. The value is a string of 0 to 255 characters.
            domain_roles: |-
                - (optional) An array of role names which stand for the
                permissions to be granted to agency on domain.
            duration: |-
                - Validity period of an agency. The default value is null,
                indicating that the agency is permanently valid.
            expire_time: '- The expiration time of agency'
            id: '- The agency ID.'
            name: |-
                - (Required) The name of agency. The name is a string of 1 to 64
                characters.
            project_role: |-
                - (Optional) An array of roles and projects which are used to
                grant permissions to agency on project. The structure is documented below.
            project_role.project: '- (Required) The name of project'
            project_role.roles: '- (Required) An array of role names'
        importStatements:
            - terraform import opentelekomcloud_identity_agency_v3.this 1bc93b8b-37a4-4b50-92cc-daa4c89d4e4c
    opentelekomcloud_identity_credential_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Credential resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_credential_v3
        title: opentelekomcloud_identity_credential_v3
        examples:
            - name: aksk
              manifest: '{}'
            - name: aksk
              manifest: |-
                {
                  "description": "Created by administrator",
                  "user_id": "${opentelekomcloud_identity_user_v3.user.id}"
                }
              references:
                user_id: opentelekomcloud_identity_user_v3.user.id
              dependencies:
                opentelekomcloud_identity_user_v3.user: |-
                    {
                      "name": "user_1",
                      "password": "password123!"
                    }
        argumentDocs:
            access: '- Access key ID.'
            create_time: '- Time of the access key creation.'
            description: '- (Optional) Description of the access key.'
            last_use_time: '- Time of the access key last usage.'
            pgp_key: |-
                - (Optional, String, ForceNew) Either a base-64 encoded PGP public key, or a keybase username in the form
                keybase:some_person_that_exists. Changing this creates a new resource.
            secret: |-
                - Secret key ID. If pgp_key is not set, secret will be in plain text.
                The encrypted secret, base64 encoded. The encrypted secret may be decrypted using the command
                line, for example: terraform output encrypted_secret | base64 --decode | keybase pgp decrypt.
            status: '- (Optional) Status of the access key to be changed to. The value can be active or inactive.'
            user_id: '- (Optional) IAM user ID. If not set, will create AK/SK for yourself.'
        importStatements: []
    opentelekomcloud_identity_group_membership_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Group Membership resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_group_membership_v3
        title: opentelekomcloud_identity_group_membership_v3
        examples:
            - name: membership_1
              manifest: |-
                {
                  "group": "${opentelekomcloud_identity_group_v3.group_1.id}",
                  "users": [
                    "${opentelekomcloud_identity_user_v3.user_1.id}",
                    "${opentelekomcloud_identity_user_v3.user_2.id}"
                  ]
                }
              references:
                group: opentelekomcloud_identity_group_v3.group_1.id
                users: opentelekomcloud_identity_user_v3.user_1.id
              dependencies:
                opentelekomcloud_identity_group_v3.group_1: |-
                    {
                      "description": "This is a test group",
                      "name": "group1"
                    }
                opentelekomcloud_identity_user_v3.user_1: |-
                    {
                      "enabled": true,
                      "name": "user1",
                      "password": "password12345!"
                    }
                opentelekomcloud_identity_user_v3.user_2: |-
                    {
                      "enabled": true,
                      "name": "user2",
                      "password": "password12345!"
                    }
        argumentDocs:
            group: '- (Required) The group ID of this membership.'
            users: '- (Required) A List of user IDs to associate to the group.'
        importStatements: []
    opentelekomcloud_identity_group_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Group resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_group_v3
        title: opentelekomcloud_identity_group_v3
        examples:
            - name: group_1
              manifest: |-
                {
                  "description": "This is a test group",
                  "name": "group_1"
                }
        argumentDocs:
            description: '- (Optional) A description of the group.'
            domain_id: '- (Optional) The domain this group belongs to.'
            name: '- (Required) The name of the group.The length is less than or equal to 64 bytes.'
        importStatements: []
    opentelekomcloud_identity_login_policy_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Login Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_login_policy_v3
        title: opentelekomcloud_identity_login_policy_v3
        examples:
            - name: policy_1
              manifest: |-
                {
                  "account_validity_period": 0,
                  "custom_info_for_login": "",
                  "lockout_duration": 15,
                  "login_failed_times": 3,
                  "period_with_login_failures": 60,
                  "session_timeout": 1395,
                  "show_recent_login_info": false
                }
        argumentDocs:
            account_validity_period: = 0
            custom_info_for_login: = ""
            id: '- The ID of account login policy, which is the same as the domain ID.'
            lockout_duration: = 15
            login_failed_times: = 3
            period_with_login_failures: = 60
            session_timeout: = 1395
            show_recent_login_info: = false
        importStatements: []
    opentelekomcloud_identity_mapping_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Mapping resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_mapping_v3
        title: opentelekomcloud_identity_mapping_v3
        examples:
            - name: mapping
              manifest: |-
                {
                  "mapping_id": "ACME",
                  "rules": "  [\n    {\n      \"local\":[\n        {\n          \"user\":{\"name\":\"{0}\"}\n        },\n        {\n          \"groups\":\"[\\\"admin\\\",\\\"manager\\\"]\"\n        }\n      ],\n      \"remote\":[\n        {\n          \"type\":\"uid\"\n        }\n      ]\n    }\n  ]\n"
                }
        argumentDocs:
            mapping_id: '- (Required) The ID of the mapping. Changing this creates a new mapping.'
            rules: '- (Required) Rules used to map federated users to local users.'
        importStatements:
            - terraform import opentelekomcloud_identity_mapping_v3.mapping ACME
    opentelekomcloud_identity_password_policy_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Password Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_password_policy_v3
        title: opentelekomcloud_identity_password_policy_v3
        examples:
            - name: policy_1
              manifest: |-
                {
                  "maximum_consecutive_identical_chars": 0,
                  "minimum_password_age": 0,
                  "minimum_password_length": 6,
                  "number_of_recent_passwords_disallowed": 0,
                  "password_not_username_or_invert": true,
                  "password_validity_period": 179
                }
        argumentDocs:
            id: '- The ID of account password policy, which is the same as the domain ID.'
            maximum_consecutive_identical_chars: = 0
            maximum_password_length: '- The maximum number of characters that a password can contain.'
            minimum_password_age: = 0
            minimum_password_length: = 8
            number_of_recent_passwords_disallowed: = 1
            password_not_username_or_invert: = true
            password_validity_period: = 0
        importStatements: []
    opentelekomcloud_identity_project_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Project resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_project_v3
        title: opentelekomcloud_identity_project_v3
        examples:
            - name: project_1
              manifest: |-
                {
                  "description": "This is a test project",
                  "name": "eu-de_project1"
                }
        argumentDocs:
            description: '- (Optional) A description of the project.'
            domain_id: |-
                - (Optional) The domain this project belongs to. Changing this
                creates a new Project.
            name: |-
                - (Required) The name of the project. it must start with
                ID of an existing region and be less than or equal to 64 characters.
                Example: eu-de_project1.
            parent_id: |-
                - (Optional) The parent of this project. Changing this creates
                a new Project.
        importStatements: []
    opentelekomcloud_identity_protection_policy_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Protection Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_protection_policy_v3
        title: opentelekomcloud_identity_protection_policy_v3
        examples:
            - name: policy_1
              manifest: |-
                {
                  "enable_operation_protection_policy": false
                }
        argumentDocs:
            enable_operation_protection_policy: = false
            id: '- The ID of account protection policy, which is the same as the domain ID.'
        importStatements: []
    opentelekomcloud_identity_protocol_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Protocol resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_protocol_v3
        title: opentelekomcloud_identity_protocol_v3
        examples:
            - name: saml
              manifest: |-
                {
                  "mapping_id": "${opentelekomcloud_identity_mapping_v3.mapping.id}",
                  "protocol": "saml",
                  "provider_id": "${opentelekomcloud_identity_provider_v3.provider.id}"
                }
              references:
                mapping_id: opentelekomcloud_identity_mapping_v3.mapping.id
                provider_id: opentelekomcloud_identity_provider_v3.provider.id
              dependencies:
                opentelekomcloud_identity_mapping_v3.mapping: |-
                    {
                      "mapping_id": "ACME",
                      "rules": "${file(\"./rules.json\")}"
                    }
                opentelekomcloud_identity_provider_v3.provider: |-
                    {
                      "description": "This is simple identity provider",
                      "enabled": true,
                      "name": "ACME"
                    }
            - name: saml
              manifest: |-
                {
                  "access_config": [
                    {
                      "access_type": "program_console",
                      "authorization_endpoint": "https://accounts.example.com/o/oauth2/v2/auth",
                      "client_id": "your_client_id",
                      "provider_url": "https://accounts.example.com",
                      "response_mode": "fragment",
                      "response_type": "id_token",
                      "scopes": [
                        "openid"
                      ],
                      "signing_key": "${jsonencode(\n      {\n        keys = [\n          {\n            alg = \"RS256\"\n            e   = \"AQAB\"\n            kid = \"...\"\n            kty = \"RSA\"\n            n   = \"...\"\n            use = \"sig\"\n          },\n        ]\n      }\n    )}"
                    }
                  ],
                  "mapping_id": "${opentelekomcloud_identity_mapping_v3.mapping.id}",
                  "protocol": "oidc",
                  "provider_id": "${opentelekomcloud_identity_provider_v3.provider.id}"
                }
              references:
                mapping_id: opentelekomcloud_identity_mapping_v3.mapping.id
                provider_id: opentelekomcloud_identity_provider_v3.provider.id
              dependencies:
                opentelekomcloud_identity_mapping_v3.mapping: |-
                    {
                      "mapping_id": "ACME",
                      "rules": "${file(\"./rules.json\")}"
                    }
                opentelekomcloud_identity_provider_v3.provider: |-
                    {
                      "description": "This is simple identity provider",
                      "enabled": true,
                      "name": "ACME"
                    }
            - name: saml
              manifest: |-
                {
                  "mapping_id": "${opentelekomcloud_identity_mapping_v3.mapping.id}",
                  "metadata": [
                    {
                      "domain_id": "${var.domain_id}",
                      "metadata": "${file(\"saml-metadata.xml\")}"
                    }
                  ],
                  "protocol": "saml",
                  "provider_id": "${opentelekomcloud_identity_provider_v3.provider.id}"
                }
              references:
                mapping_id: opentelekomcloud_identity_mapping_v3.mapping.id
                metadata.domain_id: var.domain_id
                provider_id: opentelekomcloud_identity_provider_v3.provider.id
              dependencies:
                opentelekomcloud_identity_mapping_v3.mapping: |-
                    {
                      "mapping_id": "ACME",
                      "rules": "${file(\"./rules.json\")}"
                    }
                opentelekomcloud_identity_provider_v3.provider: |-
                    {
                      "description": "This is simple identity provider",
                      "enabled": true,
                      "name": "ACME"
                    }
        argumentDocs:
            access_config: |-
                - (Optional, List) Specifies the description of the identity provider.
                This field is required only if the protocol is set to oidc.
            access_type: |-
                - (Required) Specifies the access type of the identity provider.
                Available options are:
            authorization_endpoint: |-
                - (Optional) Specifies the authorization endpoint of the OpenID Connect identity
                provider. This field is required only if the access type is set to program_console.
            client_id: '- (Required) Specifies the ID of a client registered with the OpenID Connect identity provider.'
            domain_id: '- (Required) ID of the domain that a user belongs to.'
            links: '- Resource links of an identity protocol, including identity_provider and self.'
            mapping_id: '- (Required) ID of an identity mapping.'
            metadata: '- (Optional) Metadata file configuration.'
            program: ': programmatic access only.'
            program_console: ': programmatic access and management console access.'
            protocol: '- (Required) ID of a protocol. Changing this creates a new protocol.'
            provider_id: '- (Required) ID of an identity provider. Changing this creates a new protocol.'
            provider_url: |-
                - (Required) Specifies the URL of the identity provider.
                This field corresponds to the iss field in the ID token.
            response_mode: |-
                - (Optional) Response mode.
                Valid values is form_post and fragment, default value is form_post.
                This field is required only if the access type is set to program_console.
            response_type: |-
                - (Optional) Response type. Valid values is id_token, default value is id_token.
                This field is required only if the access type is set to program_console.
            scopes: |-
                - (Optional) Specifies the scopes of authorization requests. It is an array of one or more scopes.
                Valid values are openid, email, profile and other values defined by you.
                This field is required only if the access type is set to program_console.
            signing_key: |-
                - (Required) Public key used to sign the ID token of the OpenID Connect identity provider.
                This field is required only if the protocol is set to oidc.
            xaccount_type: '- (Optional) Source of a domain. Blank by the default.'
        importStatements:
            - terraform import opentelekomcloud_identity_protocol_v3.protocol ACME/saml
    opentelekomcloud_identity_provider:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Provider resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_provider
        title: opentelekomcloud_identity_provider
        examples:
            - name: provider_1
              manifest: |-
                {
                  "mapping_rules": "${jsonencode(\n    [\n      {\n        \"local\" : [\n          {\n            \"user\" : {\n              \"name\" : \"samltestid\"\n            }\n          }\n        ],\n        \"remote\" : [\n          {\n            \"type\" : \"uid\"\n          }\n        ]\n      }\n    ]\n  )}",
                  "name": "example_com_provider_saml",
                  "protocol": "saml"
                }
            - name: provider_2
              manifest: |-
                {
                  "access_config": [
                    {
                      "access_type": "program_console",
                      "authorization_endpoint": "https://accounts.example.com/o/oauth2/v2/auth",
                      "client_id": "your_client_id",
                      "provider_url": "https://accounts.example.com",
                      "scopes": [
                        "openid"
                      ],
                      "signing_key": "${jsonencode(\n      {\n        keys = [\n          {\n            alg = \"RS256\"\n            e   = \"AQAB\"\n            kid = \"...\"\n            kty = \"RSA\"\n            n   = \"...\"\n            use = \"sig\"\n          },\n        ]\n      }\n    )}"
                    }
                  ],
                  "name": "example_com_provider_oidc",
                  "protocol": "oidc"
                }
        argumentDocs:
            access_config: |-
                - (Optional, List) Specifies the description of the identity provider.
                This field is required only if the protocol is set to oidc.
            access_config.access_type: |-
                - (Required) Specifies the access type of the identity provider.
                Available options are:
            access_config.authorization_endpoint: |-
                - (Optional) Specifies the authorization endpoint of the OpenID Connect identity
                provider. This field is required only if the access type is set to program_console.
            access_config.client_id: '- (Required) Specifies the ID of a client registered with the OpenID Connect identity provider.'
            access_config.provider_url: |-
                - (Required) Specifies the URL of the identity provider.
                This field corresponds to the iss field in the ID token.
            access_config.response_mode: |-
                - (Optional) Response mode.
                Valid values is form_post and fragment, default value is form_post.
                This field is required only if the access type is set to program_console.
            access_config.response_type: |-
                - (Optional) Response type. Valid values is id_token, default value is id_token.
                This field is required only if the access type is set to program_console.
            access_config.scopes: |-
                - (Optional) Specifies the scopes of authorization requests. It is an array of one or more scopes.
                Valid values are openid, email, profile and other values defined by you.
                This field is required only if the access type is set to program_console.
            access_config.signing_key: |-
                - (Required) Public key used to sign the ID token of the OpenID Connect identity provider.
                This field is required only if the protocol is set to oidc.
            conversion_rules: |-
                - The identity conversion rules of the identity provider.
                The structure is documented below.
            conversion_rules.local: '- The federated user information on the cloud platform.'
            conversion_rules.remote: '- The description of the identity provider.'
            description: '- (Optional) Specifies the description of the identity provider.'
            id: '- A resource ID in UUID format.'
            links: '- Resource links of an identity mapping.'
            local.group: '- The user group to which the federated user belongs on the cloud platform.'
            local.groups: '- The user groups to which the federated user belongs on the cloud platform.'
            local.username: '- The name of a federated user on the cloud platform.'
            login_link: '- The login link of the identity provider.'
            mapping_rules: |-
                - (Optional) Rules used to map federated users to local users.
                Details on mapping_rules are available in this link under rules section.
            metadata: |-
                - (Optional) Specifies the metadata of the IDP(Identity Provider) server.
                This field is used to import a metadata file to IAM to implement federated identity authentication.
                This field is required only if the protocol is set to saml.
                The maximum length is 30,000 characters and it stores in the state with SHA1 algorithm.
            name: |-
                - (Required) Specifies the name of the identity provider to be registered.
                The maximum length is 64 characters. Only letters, digits, underscores (_), and hyphens (-) are allowed.
                The name is unique, it is recommended to include domain name information.
                Changing this creates a new resource.
            program: ': programmatic access only.'
            program_console: ': programmatic access and management console access.'
            protocol: |-
                - (Required) Specifies the protocol of the identity provider.
                Valid values are saml and oidc.
            remote.attribute: '- The attribute in the IDP assertion.'
            remote.condition: '- The condition of conversion rule.'
            remote.value: '- The rule is matched only if the specified strings appear in the attribute type.'
            status: '- (Optional) Enabled status for the identity provider. Default: true.'
        importStatements: []
    opentelekomcloud_identity_provider_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Provider v3 resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_provider_v3
        title: opentelekomcloud_identity_provider_v3
        examples:
            - name: provider
              manifest: |-
                {
                  "description": "This is simple identity provider",
                  "enabled": true,
                  "name": "ACME"
                }
        argumentDocs:
            description: '- (Optional) A description of the provider.'
            enabled: '- (Optional) Whether an identity provider is enabled. Default value is false.'
            name: '- (Required) The name (ID) of the provider. Changing this creates a new provider.'
        importStatements: []
    opentelekomcloud_identity_role_assignment_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Role Assignment resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_role_assignment_v3
        title: opentelekomcloud_identity_role_assignment_v3
        examples:
            - name: role_assignment_1
              manifest: |-
                {
                  "group_id": "${opentelekomcloud_identity_group_v3.group_1.id}",
                  "project_id": "${opentelekomcloud_identity_project_v3.project_1.id}",
                  "role_id": "${data.opentelekomcloud_identity_role_v3.role_1.id}"
                }
              references:
                group_id: opentelekomcloud_identity_group_v3.group_1.id
                project_id: opentelekomcloud_identity_project_v3.project_1.id
                role_id: data.opentelekomcloud_identity_role_v3.role_1.id
              dependencies:
                opentelekomcloud_identity_group_v3.group_1: |-
                    {
                      "name": "group_1"
                    }
                opentelekomcloud_identity_project_v3.project_1: |-
                    {
                      "name": "eu-de_project_1"
                    }
            - name: role_assignment_1
              manifest: |-
                {
                  "domain_id": "${var.domain_id}",
                  "group_id": "${opentelekomcloud_identity_group_v3.group_1.id}",
                  "role_id": "${data.opentelekomcloud_identity_role_v3.role_1.id}"
                }
              references:
                domain_id: var.domain_id
                group_id: opentelekomcloud_identity_group_v3.group_1.id
                role_id: data.opentelekomcloud_identity_role_v3.role_1.id
              dependencies:
                opentelekomcloud_identity_group_v3.group_1: |-
                    {
                      "name": "group_1"
                    }
            - name: role_assignment_1
              manifest: |-
                {
                  "all_projects": true,
                  "domain_id": "${var.domain_id}",
                  "group_id": "${opentelekomcloud_identity_group_v3.group_1.id}",
                  "role_id": "${data.opentelekomcloud_identity_role_v3.role_1.id}"
                }
              references:
                domain_id: var.domain_id
                group_id: opentelekomcloud_identity_group_v3.group_1.id
                role_id: data.opentelekomcloud_identity_role_v3.role_1.id
              dependencies:
                opentelekomcloud_identity_group_v3.group_1: |-
                    {
                      "name": "group_1"
                    }
        argumentDocs:
            all_projects: |-
                - (Optional) Whether to assign role for all existing and future projects.
                domain_id has to be specified if all_projects is set to true.
            domain_id: '- (Optional; Required if project_id is empty) The domain to assign the role in.'
            group_id: '- (Required) The group to assign the role to.'
            project_id: '- (Optional; Required if domain_id is empty) The project to assign the role in.'
            role_id: '- (Required) The role to assign.'
        importStatements: []
    opentelekomcloud_identity_role_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM Role resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_role_v3
        title: opentelekomcloud_identity_role_v3
        examples:
            - name: role
              manifest: |-
                {
                  "description": "role",
                  "display_layer": "domain",
                  "display_name": "custom_role",
                  "statement": [
                    {
                      "action": [
                        "obs:bucket:GetBucketAcl"
                      ],
                      "condition": "    {\n      \"StringStartWith\": {\n          \"g:ProjectName\": [\n              \"eu-de\"\n          ]\n      },\n      \"StringNotEqualsIgnoreCase\": {\n          \"g:ServiceName\": [\n              \"iam\"\n          ]\n    }\n",
                      "effect": "Allow",
                      "resource": [
                        "OBS:*:*:bucket:test-bucket"
                      ]
                    },
                    {
                      "action": [
                        "obs:bucket:HeadBucket",
                        "obs:bucket:ListBucketMultipartUploads",
                        "obs:bucket:ListBucket"
                      ],
                      "effect": "Allow"
                    }
                  ]
                }
        argumentDocs:
            catalog: '- Directory where a role locates'
            description: '- (Required) Description of a role. The value cannot exceed 256 characters.'
            display_layer: '- (Required) Display layer of a role.'
            display_name: '- (Required) Displayed name of a role. The value cannot exceed 64 characters.'
            domain: '- A role is displayed at the domain layer.'
            domain_id: '- ID of the domain to which a role belongs'
            name: '- Name of a role'
            project: '- A role is displayed at the project layer.'
            statement: |-
                - (Required) Statement: The Statement field contains the Effect and Action
                elements. Effect indicates whether the policy allows or denies
                access. Action indicates authorization items. The number of
                statements cannot exceed 8. Structure is documented below.
            statement.action: |-
                - (Required) Permission set, which specifies the operation permissions on
                resources. The number of permission sets cannot exceed 100.
                Format:  The value format is Service name:Resource type:Action,
                for example, vpc:ports:create. Service name: indicates the
                product name, such as ecs, evs, or vpc. Only lowercase letters
                are allowed. Resource type and Action: The values are
                case-insensitive, and the wildcard () are allowed. A wildcard
                () can represent all or part of information about resource
                types and actions for the specific service.
            statement.condition: |-
                - (Optional) The conditions for the permission to take effect. A maximum of 10 conditions are allowed.
                Conditions should be provided as string as in example above.
            statement.effect: |-
                - (Required) The value can be Allow and Deny. If both Allow and Deny are
                found in statements, the policy evaluation starts with Deny.
            statement.resource: |-
                - (Optional) The resources which will be granted/denied accesses.
                Format: Service:*:*:resource:resource_path.
                Examples: KMS:*:*:KeyId:your_key, OBS:*:*:bucket:your_bucket, OBS:*:*:object:your_object.
        importStatements: []
    opentelekomcloud_identity_user_group_membership_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM User Group Membership resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_user_group_membership_v3
        title: opentelekomcloud_identity_user_group_membership_v3
        examples:
            - name: membership_1
              manifest: |-
                {
                  "groups": [
                    "${opentelekomcloud_identity_group_v3.group_1.id}",
                    "${opentelekomcloud_identity_group_v3.group_2.id}"
                  ],
                  "user": "${opentelekomcloud_identity_user_v3.user_1.id}"
                }
              references:
                groups: opentelekomcloud_identity_group_v3.group_1.id
                user: opentelekomcloud_identity_user_v3.user_1.id
              dependencies:
                opentelekomcloud_identity_group_v3.group_1: |-
                    {
                      "name": "group-1"
                    }
                opentelekomcloud_identity_group_v3.group_2: |-
                    {
                      "name": "group-2"
                    }
                opentelekomcloud_identity_user_v3.user_1: |-
                    {
                      "enabled": true,
                      "name": "user-1",
                      "password": "password123@#"
                    }
        argumentDocs:
            groups: '- (Required) IDs of the groups for the user to be assigned to.'
            user: '- (Required) ID of a user.'
        importStatements: []
    opentelekomcloud_identity_user_v3:
        subCategory: Identity and Access Management (IAM)
        description: Manages a IAM User resource within OpenTelekomCloud.
        name: opentelekomcloud_identity_user_v3
        title: opentelekomcloud_identity_user_v3
        examples:
            - name: user_1
              manifest: |-
                {
                  "name": "user_1",
                  "password": "password123!"
                }
            - name: user_1
              manifest: |-
                {
                  "email": "test@acme.org",
                  "enabled": true,
                  "login_protection": [
                    {
                      "enabled": true,
                      "verification_method": "email"
                    }
                  ],
                  "name": "user_protected",
                  "password": "password123@!",
                  "send_welcome_email": true
                }
            - name: user_1
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${password}"
                      ]
                    }
                  ]
                }
              references:
                lifecycle.ignore_changes: password
        argumentDocs:
            access_type: '- (Optional, String) Specifies the access type of the user. Available values are:'
            country_code: '- (Optional, String) Specifies the country code. This parameter must be used together with phone.'
            create_time: '- The time when the IAM user was created.'
            description: '- (Optional, String) Specifies the description of the user.'
            domain_id: '- The domain user belongs to.'
            email: '- (Optional, String) Specifies the email address with a maximum of 255 characters.'
            enabled: '- (Optional, Bool) Specifies whether the user is enabled or disabled. Valid values are true and false.'
            id: '- The resource ID in UUID format.'
            last_login: '- The time when the IAM user last login.'
            login_protection: |-
                - (Optional, List) Login protection configuration.
                The login_protection block supports:
            name: |-
                - (Required, String) Specifies the name of the user. The user name consists of 5 to 32 characters. It can
                contain only uppercase letters, lowercase letters, digits, spaces, and special characters (-_) and cannot start with a
                digit.
            password: |-
                - (Optional, String) Specifies the password for the user with 6 to 32 characters. It must contain at least
                two of the following character types: uppercase letters, lowercase letters, digits, and special characters.
            password_strength: '- Indicates the password strength.'
            phone: |-
                - (Optional, String) Specifies the mobile number with a maximum of 32 digits. This parameter must be used
                together with country_code.
            pwd_reset: |-
                - (Optional, Bool) Specifies whether the password should be reset. By default, the password is asked
                to reset at the first login.
            send_welcome_email: |-
                - (Optional, Bool) Whether to send a Welcome Email or not.
                Possible values are true and false.
            verification_method: '- (Required, String) Login authentication method of the user. Options: sms, email, and vmfa.'
            xuser_id: '- ID of the user in the external system.'
            xuser_type: '- Type of the user in the external system.'
        importStatements: []
    opentelekomcloud_images_image_access_accept_v2:
        subCategory: Image Management Service (IMS)
        description: Manages an Image Sharing Accept resource within OpenTelekomCloud.
        name: opentelekomcloud_images_image_access_accept_v2
        title: opentelekomcloud_images_image_access_accept_v2
        examples:
            - name: rancheros_member
              manifest: |-
                {
                  "image_id": "${data.opentelekomcloud_images_image_v2.rancheros.id}",
                  "member_id": "bed6b6cbb86a4e2d8dc2735c2f1000e4",
                  "status": "accepted"
                }
              references:
                image_id: data.opentelekomcloud_images_image_v2.rancheros.id
        argumentDocs:
            created_at: '- Specifies the time when a shared image was created. The value is in UTC format.'
            image_id: '- (Required) The proposed image ID.'
            member_id: '- (Required) The member ID, e.g. the target project ID.'
            schema: '- Specifies the sharing schema.'
            status: '- (Required) The membership proposal status. Can either be accepted, rejected or pending.'
            updated_at: '- Specifies the time when a shared image was updated. The value is in UTC format.'
        importStatements: []
    opentelekomcloud_images_image_access_v2:
        subCategory: Image Management Service (IMS)
        description: Manages an Image Sharing resource within OpenTelekomCloud.
        name: opentelekomcloud_images_image_access_v2
        title: opentelekomcloud_images_image_access_v2
        examples:
            - name: rancheros_member
              manifest: |-
                {
                  "image_id": "${opentelekomcloud_images_image_v2.rancheros.id}",
                  "member_id": "bed6b6cbb86a4e2d8dc2735c2f1000e4"
                }
              references:
                image_id: opentelekomcloud_images_image_v2.rancheros.id
              dependencies:
                opentelekomcloud_images_image_v2.rancheros: |-
                    {
                      "container_format": "bare",
                      "disk_format": "qcow2",
                      "image_source_url": "https://releases.rancher.com/os/latest/rancheros-openstack.img",
                      "name": "RancherOS"
                    }
            - name: rancheros_member
              manifest: |-
                {
                  "image_id": "${opentelekomcloud_images_image_v2.rancheros.id}",
                  "member_id": "bed6b6cbb86a4e2d8dc2735c2f1000e4",
                  "status": "accepted"
                }
              references:
                image_id: opentelekomcloud_images_image_v2.rancheros.id
              dependencies:
                opentelekomcloud_images_image_v2.rancheros: |-
                    {
                      "container_format": "bare",
                      "disk_format": "qcow2",
                      "image_source_url": "https://releases.rancher.com/os/latest/rancheros-openstack.img",
                      "name": "RancherOS"
                    }
        argumentDocs:
            created_at: '- Specifies the time when a shared image was created. The value is in UTC format.'
            image_id: '- (Required) The proposed image ID.'
            member_id: |-
                - (Required) The member ID, e.g. the target project ID. Optional
                for admin accounts. Defaults to the current scope project ID.
            schema: '- Specifies the sharing schema.'
            status: |-
                - (Required) The member proposal status. Optional if admin wants to force the member
                proposal acceptance. Can either be accepted, rejected or pending. Defaults to
                pending. Forbidden for non-admin users.
            updated_at: '- Specifies the time when a shared image was updated. The value is in UTC format.'
        importStatements: []
    opentelekomcloud_images_image_v2:
        subCategory: Image Management Service (IMS)
        description: Manages an Image Management resource within OpenTelekomCloud.
        name: opentelekomcloud_images_image_v2
        title: opentelekomcloud_images_image_v2
        examples:
            - name: rancheros
              manifest: |-
                {
                  "container_format": "bare",
                  "disk_format": "qcow2",
                  "image_source_url": "https://releases.rancher.com/os/latest/rancheros-openstack.img",
                  "name": "RancherOS",
                  "tags": [
                    "foo.bar",
                    "tag.value"
                  ]
                }
        argumentDocs:
            checksum: '- The checksum of the data associated with the image.'
            container_format: |-
                - (Required) The container format. Must be one of
                ami, ari, aki, bare, ovf.
            created_at: '- The date the image was created.'
            disk_format: |-
                - (Required) The disk format. Must be one of
                ami, ari, aki, vhd, vmdk, raw, qcow2, vdi, iso.
            file: |-
                - the trailing path after the glance
                endpoint that represent the location of the image
                or the path to retrieve it.
            id: '- A unique ID assigned by Glance.'
            image_cache_path: |-
                - (Optional) This is the directory where the images will
                be downloaded. Images will be stored with a filename corresponding to
                the url's md5 hash. Defaults to "$HOME/.terraform/image_cache"
            image_source_url: |-
                - (Optional) This is the url of the raw image that will
                be downloaded in the image_cache_path before being uploaded to Glance.
                Glance is able to download image from internet but the gophercloud library
                does not yet provide a way to do so.
                Conflicts with local_file_path.
            local_file_path: |-
                - (Optional) This is the filepath of the raw image file
                that will be uploaded to Glance. Conflicts with image_source_url.
            metadata: |-
                - The metadata associated with the image.
                Image metadata allow for meaningfully define the image properties
                and tags. See http://docs.openstack.org/developer/glance/metadefs-concepts.html.
            min_disk_gb: |-
                - (Optional) Amount of disk space (in GB) required to boot image.
                Defaults to 0.
            min_ram_mb: |-
                - (Optional) Amount of ram (in MB) required to boot image.
                Defauts to 0.
            name: '- (Required) The name of the image.'
            owner: '- The id of the opentelekomcloud user who owns the image.'
            protected: |-
                - (Optional) If true, image will not be deletable.
                Defaults to false.
            schema: |-
                - The path to the JSON-schema that represent
                the image or image
            size_bytes: '- The size in bytes of the data associated with the image.'
            status: |-
                - The status of the image. It can be queued, active
                or saving.
            tags: |-
                - (Optional) The tags of the image. It must be a list of strings.
                At this time, it is not possible to delete all tags of an image.
            update_at: '- The date the image was last updated.'
            visibility: |-
                - (Optional) The visibility of the image. Must be one of
                "public", "private", "community", or "shared". The ability to set the
                visibility depends upon the configuration of the OpenTelekomCloud cloud.
        importStatements: []
    opentelekomcloud_ims_data_image_v2:
        subCategory: Image Management Service (IMS)
        description: Manages a IMS Data Image resource within OpenTelekomCloud.
        name: opentelekomcloud_ims_data_image_v2
        title: opentelekomcloud_ims_data_image_v2
        examples:
            - name: ims_test
              manifest: |-
                {
                  "description": "Create an image using an ECS.",
                  "name": "imt_test",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume_id": "54a6c3a4-8511-4d01-818f-3fe5177cbb06"
                }
            - name: ims_test_file
              manifest: |-
                {
                  "description": "Create an image using a file in the OBS bucket.",
                  "image_url": "ims-image:centos70.qcow2",
                  "min_disk": 40,
                  "name": "ims_test_file",
                  "os_type": "Linux",
                  "tags": {
                    "foo": "bar1",
                    "key": "value"
                  }
                }
        argumentDocs:
            cmk_id: |-
                - (Optional) The master key used for encrypting an image.
                Changing this creates a new image.
            data_origin: '- The image resource. The pattern can be ''instance,instance_id'' or ''file,image_url''.'
            description: '- (Optional) A description of the image. Changing this creates a new image.'
            disk_format: '- The image file format. The value can be vhd, zvhd, raw, zvhd2, or qcow2.'
            id: '- A unique ID assigned by IMS.'
            image_size: '- The size(bytes) of the image file format.'
            image_url: |-
                - (Optional) The URL of the external image file in the OBS bucket.
                This parameter is mandatory when you create a private image from an external file
                uploaded to an OBS bucket. The format is OBS bucket name:Image file name.
                Changing this creates a new image.
            min_disk: |-
                - (Optional) The minimum size of the system disk in the unit of GB.
                This parameter is mandatory when you create a private image from an external file
                uploaded to an OBS bucket. The value ranges from 1 GB to 1024 GB.
                Changing this creates a new image.
            name: '- (Required) The name of the image.'
            os_type: |-
                - (Optional) The OS type. It can only be Windows or Linux.
                This parameter is valid when you create a private image from an external file
                uploaded to an OBS bucket. Changing this creates a new image.
            tags: '- (Optional) The tags of the image.'
            visibility: '- Whether the image is visible to other tenants.'
            volume_id: |-
                - (Optional) The ID of the ECS atatched volume that needs to be converted into an image.
                This parameter is mandatory when you create a privete image from an ECS.
                Changing this creates a new image.
        importStatements: []
    opentelekomcloud_ims_image_v2:
        subCategory: Image Management Service (IMS)
        description: Manages a IMS Image resource within OpenTelekomCloud.
        name: opentelekomcloud_ims_image_v2
        title: opentelekomcloud_ims_image_v2
        examples:
            - name: ims_test
              manifest: |-
                {
                  "description": "Create an image using an ECS.",
                  "instance_id": "54a6c3a4-8511-4d01-818f-3fe5177cbb06",
                  "name": "imt_test",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  }
                }
            - name: ims_test_file
              manifest: |-
                {
                  "description": "Create an image using a file in the OBS bucket.",
                  "image_url": "ims-image:centos70.qcow2",
                  "min_disk": 40,
                  "name": "ims_test_file",
                  "tags": {
                    "foo": "bar1",
                    "key": "value"
                  }
                }
            - name: image_volume
              manifest: |-
                {
                  "description": "created by Terraform",
                  "name": "image_volume",
                  "os_version": "Debian GNU/Linux 10.0.0 64bit",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume_id": "54a6c3a4-8511-4d01-818f-3fe5177cbb07"
                }
        argumentDocs:
            cmk_id: |-
                - (Optional) The master key used for encrypting an image.
                Changing this creates a new image.
            data_origin: '- The image resource. The pattern can be ''instance,instance_id'' or ''file,image_url''.'
            description: '- (Optional) A description of the image. Changing this creates a new image.'
            disk_format: '- The image file format. The value can be vhd, zvhd, raw, zvhd2, or qcow2.'
            file: '- The URL for uploading and downloading the image file.'
            id: '- A unique ID assigned by IMS.'
            image_size: '- The size(bytes) of the image file format.'
            image_url: |-
                - (Optional) The URL of the external image file in the OBS bucket.
                This parameter is mandatory when you create a private image from an external file
                uploaded to an OBS bucket. The format is OBS bucket name:Image file name.
                Changing this creates a new image.
            instance_id: |-
                - (Optional) The ID of the ECS that needs to be converted into an image.
                This parameter is mandatory when you create a private image from an ECS.
                Changing this creates a new image.
            is_config: |-
                - (Optional) If automatic configuration is required, set the value to true.
                Otherwise, set the value to false. Changing this creates a new image.
            max_ram: |-
                - (Optional) The maximum memory of the image in the unit of MB.
                Changing this creates a new image.
            min_disk: |-
                - (Optional) The minimum size of the system disk in the unit of GB.
                This parameter is mandatory when you create a private image from an external file
                uploaded to an OBS bucket. The value ranges from 1 GB to 1024 GB.
                Changing this creates a new image.
            min_ram: |-
                - (Optional) The minimum memory of the image in the unit of MB.
                The default value is 0, indicating that the memory is not restricted.
                Changing this creates a new image.
            name: '- (Required) The name of the image.'
            os_version: |-
                - (Optional) The OS version.
                This parameter is valid when you create a private image from an external file.
                This parameter is mandatory when you create a private image from a volume.
                uploaded to an OBS bucket. Changing this creates a new image.
            tags: '- (Optional) The tags of the image.'
            type: |-
                - (Optional) The image type. Must be one of ECS, FusionCompute, BMS,
                Ironic or IsoImage. Changing this creates a new image.
            visibility: '- Whether the image is visible to other tenants.'
            volume_id: |-
                - (Optional) Specifies the data disk ID.
                This parameter is mandatory when you create a private image from a volume.
                Changing this creates a new image.
        importStatements: []
    opentelekomcloud_kms_grant_v1:
        subCategory: Key Management Service (KMS)
        description: Manages a KMS Grant resource within OpenTelekomCloud.
        name: opentelekomcloud_kms_grant_v1
        title: opentelekomcloud_kms_grant_v1
        examples:
            - name: grant_1
              manifest: |-
                {
                  "grantee_principal": "${var.user_id}",
                  "key_id": "${var.kms_id}",
                  "name": "my_grant",
                  "operations": [
                    "describe-key",
                    "create-datakey",
                    "encrypt-datakey"
                  ]
                }
              references:
                grantee_principal: var.user_id
                key_id: var.kms_id
        argumentDocs:
            creation_date: |-
                - Creation time. The value is a timestamp expressed in the number of
                seconds since 00:00:00 UTC on January 1, 1970.
            grantee_principal: |-
                - (Required) Indicates the ID of the authorized user.
                Changing this creates new grant.
            issuing_principal: '- Indicates the ID of the user who created the grant.'
            key_id: '- (Required) Indicates the ID of the KMS. Changing this creates new grant.'
            name: |-
                - (Optional) Name of a grant which can be 1 to 255 characters in length
                and matches the regular expression ^[a-zA-Z0-9:/_-]{1,255}$.
                Changing this creates new grant.
            operations: |-
                - (Required) Permissions that can be granted.
                The valid values are: create-datakey, create-datakey-without-plaintext,
                encrypt-datakey, decrypt-datakey, describe-key, create-grant, retire-grant.
                Changing this creates new grant.
            retiring_principal: |-
                - (Optional) Indicates the ID of the retiring user.
                Changing this creates new grant.
        importStatements:
            - terraform import opentelekomcloud_kms_grant_v1.grant_1 4779ab1c-7c1a-44b1-a02e-93dfc361b32d/7056d636-ac60-4663-8a6c-82d3c32c1c64
    opentelekomcloud_kms_key_v1:
        subCategory: Key Management Service (KMS)
        description: Manages a KMS Key resource within OpenTelekomCloud.
        name: opentelekomcloud_kms_key_v1
        title: opentelekomcloud_kms_key_v1
        examples:
            - name: key_1
              manifest: |-
                {
                  "is_enabled": true,
                  "key_alias": "key_1",
                  "key_description": "first test key",
                  "pending_days": "7",
                  "realm": "eu-de-01",
                  "tags": {
                    "muh": "kuh"
                  }
                }
        argumentDocs:
            allow_cancel_deletion: |-
                - (Optional) Specifies whether the key is enabled from Pending Deletion state. The value true indicates
                that the key state Pending Deletion will be cancelled.
            creation_date: '- Creation time (time stamp) of a key.'
            default_key_flag: |-
                - Identification of a Master Key. The value 1 indicates a Default
                Master Key, and the value 0 indicates a key.
            domain_id: '- ID of a user domain for the key.'
            expiration_time: '- Expiration time.'
            id: '- The globally unique identifier for the key.'
            is_enabled: |-
                - (Optional) Specifies whether the key is enabled. Defaults to true.
                Changing this updates the state of existing key.
            key_alias: |-
                - (Required) The alias in which to create the key. It is required when
                we create a new key. Changing this updates the alias of key.
            key_description: |-
                - (Optional) The description of the key as viewed in OpenTelekomCloud console.
                Changing this updates the description of key.
            origin: '- Origin of a key. The default value is kms.'
            pending_days: |-
                - (Optional) Duration in days after which the key is deleted
                after destruction of the resource, must be between 7 and 1096 days. Defaults to 7.
                It only is used when delete a key.
            realm: '- (Optional) Region where a key resides. Changing this creates a new key.'
            rotation_enabled: '- (Optional) Specifies whether the key is enabled for rotation.'
            rotation_interval: |-
                - (Optional) Rotation interval. The value is an integer ranging from 30 to 365.
                Set the interval based on how often a CMK is used.
                If it is frequently used, set a short interval; otherwise, set a long one.
            rotation_number: '- Number of key rotations.'
            scheduled_deletion_date: '- Scheduled deletion time (time stamp) of a key.'
            tags: '- (Optional) Tags key/value pairs to associate with the AutoScaling Group.'
        importStatements: []
    opentelekomcloud_lb_certificate_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB Certificate resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_certificate_v2
        title: opentelekomcloud_lb_certificate_v2
        examples:
            - name: certificate_1
              manifest: |-
                {
                  "certificate": "-----BEGIN CERTIFICATE-----\nMIIDpTCCAo2gAwIBAgIJAKdmmOBYnFvoMA0GCSqGSIb3DQEBCwUAMGkxCzAJBgNV\nBAYTAnh4MQswCQYDVQQIDAJ4eDELMAkGA1UEBwwCeHgxCzAJBgNVBAoMAnh4MQsw\nCQYDVQQLDAJ4eDELMAkGA1UEAwwCeHgxGTAXBgkqhkiG9w0BCQEWCnh4QDE2My5j\nb20wHhcNMTcxMjA0MDM0MjQ5WhcNMjAxMjAzMDM0MjQ5WjBpMQswCQYDVQQGEwJ4\neDELMAkGA1UECAwCeHgxCzAJBgNVBAcMAnh4MQswCQYDVQQKDAJ4eDELMAkGA1UE\nCwwCeHgxCzAJBgNVBAMMAnh4MRkwFwYJKoZIhvcNAQkBFgp4eEAxNjMuY29tMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwZ5UJULAjWr7p6FVwGRQRjFN\n2s8tZ/6LC3X82fajpVsYqF1xqEuUDndDXVD09E4u83MS6HO6a3bIVQDp6/klnYld\niE6Vp8HH5BSKaCWKVg8lGWg1UM9wZFnlryi14KgmpIFmcu9nA8yV/6MZAe6RSDmb\n3iyNBmiZ8aZhGw2pI1YwR+15MVqFFGB+7ExkziROi7L8CFCyCezK2/oOOvQsH1dz\nQ8z1JXWdg8/9Zx7Ktvgwu5PQM3cJtSHX6iBPOkMU8Z8TugLlTqQXKZOEgwajwvQ5\nmf2DPkVgM08XAgaLJcLigwD513koAdtJd5v+9irw+5LAuO3JclqwTvwy7u/YwwID\nAQABo1AwTjAdBgNVHQ4EFgQUo5A2tIu+bcUfvGTD7wmEkhXKFjcwHwYDVR0jBBgw\nFoAUo5A2tIu+bcUfvGTD7wmEkhXKFjcwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0B\nAQsFAAOCAQEAWJ2rS6Mvlqk3GfEpboezx2J3X7l1z8Sxoqg6ntwB+rezvK3mc9H0\n83qcVeUcoH+0A0lSHyFN4FvRQL6X1hEheHarYwJK4agb231vb5erasuGO463eYEG\nr4SfTuOm7SyiV2xxbaBKrXJtpBp4WLL/s+LF+nklKjaOxkmxUX0sM4CTA7uFJypY\nc8Tdr8lDDNqoUtMD8BrUCJi+7lmMXRcC3Qi3oZJW76ja+kZA5mKVFPd1ATih8TbA\ni34R7EQDtFeiSvBdeKRsPp8c0KT8H1B4lXNkkCQs2WX5p4lm99+ZtLD4glw8x6Ic\ni1YhgnQbn5E0hz55OLu5jvOkKQjPCW+8Kg==\n-----END CERTIFICATE-----\n",
                  "description": "terraform test certificate",
                  "domain": "www.elb.com",
                  "name": "certificate_1",
                  "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwZ5UJULAjWr7p6FVwGRQRjFN2s8tZ/6LC3X82fajpVsYqF1x\nqEuUDndDXVD09E4u83MS6HO6a3bIVQDp6/klnYldiE6Vp8HH5BSKaCWKVg8lGWg1\nUM9wZFnlryi14KgmpIFmcu9nA8yV/6MZAe6RSDmb3iyNBmiZ8aZhGw2pI1YwR+15\nMVqFFGB+7ExkziROi7L8CFCyCezK2/oOOvQsH1dzQ8z1JXWdg8/9Zx7Ktvgwu5PQ\nM3cJtSHX6iBPOkMU8Z8TugLlTqQXKZOEgwajwvQ5mf2DPkVgM08XAgaLJcLigwD5\n13koAdtJd5v+9irw+5LAuO3JclqwTvwy7u/YwwIDAQABAoIBACU9S5fjD9/jTMXA\nDRs08A+gGgZUxLn0xk+NAPX3LyB1tfdkCaFB8BccLzO6h3KZuwQOBPv6jkdvEDbx\nNwyw3eA/9GJsIvKiHc0rejdvyPymaw9I8MA7NbXHaJrY7KpqDQyk6sx+aUTcy5jg\niMXLWdwXYHhJ/1HVOo603oZyiS6HZeYU089NDUcX+1SJi3e5Ke0gPVXEqCq1O11/\nrh24bMxnwZo4PKBWdcMBN5Zf/4ij9vrZE+fFzW7vGBO48A5lvZxWU2U5t/OZQRtN\n1uLOHmMFa0FIF2aWbTVfwdUWAFsvAOkHj9VV8BXOUwKOUuEktdkfAlvrxmsFrO/H\nyDeYYPkCgYEA/S55CBbR0sMXpSZ56uRn8JHApZJhgkgvYr+FqDlJq/e92nAzf01P\nRoEBUajwrnf1ycevN/SDfbtWzq2XJGqhWdJmtpO16b7KBsC6BdRcH6dnOYh31jgA\nvABMIP3wzI4zSVTyxRE8LDuboytF1mSCeV5tHYPQTZNwrplDnLQhywcCgYEAw8Yc\nUk/eiFr3hfH/ZohMfV5p82Qp7DNIGRzw8YtVG/3+vNXrAXW1VhugNhQY6L+zLtJC\naKn84ooup0m3YCg0hvINqJuvzfsuzQgtjTXyaE0cEwsjUusOmiuj09vVx/3U7siK\nHdjd2ICPCvQ6Q8tdi8jV320gMs05AtaBkZdsiWUCgYEAtLw4Kk4f+xTKDFsrLUNf\n75wcqhWVBiwBp7yQ7UX4EYsJPKZcHMRTk0EEcAbpyaJZE3I44vjp5ReXIHNLMfPs\nuvI34J4Rfot0LN3n7cFrAi2+wpNo+MOBwrNzpRmijGP2uKKrq4JiMjFbKV/6utGF\nUp7VxfwS904JYpqGaZctiIECgYA1A6nZtF0riY6ry/uAdXpZHL8ONNqRZtWoT0kD\n79otSVu5ISiRbaGcXsDExC52oKrSDAgFtbqQUiEOFg09UcXfoR6HwRkba2CiDwve\nyHQLQI5Qrdxz8Mk0gIrNrSM4FAmcW9vi9z4kCbQyoC5C+4gqeUlJRpDIkQBWP2Y4\n2ct/bQKBgHv8qCsQTZphOxc31BJPa2xVhuv18cEU3XLUrVfUZ/1f43JhLp7gynS2\nep++LKUi9D0VGXY8bqvfJjbECoCeu85vl8NpCXwe/LoVoIn+7KaVIZMwqoGMfgNl\nnEqm7HWkNxHhf8A6En/IjleuddS1sf9e/x+TJN1Xhnt9W6pe7Fk1\n-----END RSA PRIVATE KEY-----\n"
                }
        argumentDocs:
            certificate: '- (Required) The public encrypted key of the Certificate, PEM format.'
            create: '- Default is 10 minutes.'
            create_time: '- Indicates the creation time.'
            delete: '- Default is 5 minutes.'
            description: '- (Optional) Human-readable description for the Certificate.'
            domain: '- (Optional) The domain of the Certificate.'
            expire_time: '- Indicates certificate expiration time.'
            name: |-
                - (Optional) Human-readable name for the Certificate. Does not have
                to be unique.
            private_key: |-
                - (Optional) The private encrypted key of the Certificate, PEM format.
                Required for certificates of type server.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an LB certificate. If omitted, the
                region argument of the provider is used. Changing this creates a new
                LB certificate.
            type: |-
                - (Optional) The type of certificate the container holds. Either server or client.
                Defaults to server if not set. Changing this creates a new LB certificate.
            update: '- Default is 10 minutes.'
            update_time: '- Indicates the update time.'
        importStatements:
            - terraform import opentelekomcloud_lb_certificate_v2.certificate_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_lb_certificate_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Certificate resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_certificate_v3
        title: opentelekomcloud_lb_certificate_v3
        examples:
            - name: certificate_1
              manifest: |-
                {
                  "certificate": "-----BEGIN CERTIFICATE-----\nMIIB4TCCAYugAwIBAgIUPXCpWJCiy5mI79NIfenl5KNWPzkwDQYJKoZIhvcNAQEL\nBQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\nGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yMTExMDIxMDM3MjBaFw0yMTEy\nMDIxMDM3MjBaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw\nHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwXDANBgkqhkiG9w0BAQEF\nAANLADBIAkEAu+qgVpV6mqbaGW1Qn6eDPzhwentQPPiXwG1665M9+gjW4pUQ0Rud\nBc0fkUU/O+Q0UMT8ZV/I2hSenCVyJoyPEwIDAQABo1MwUTAdBgNVHQ4EFgQUtItI\nIAXZDIEfuvCX7AY3s//wlI8wHwYDVR0jBBgwFoAUtItIIAXZDIEfuvCX7AY3s//w\nlI8wDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAANBAEkgP/JlpVKc4j+Z\nKRcMa7RAXYJqCbRxtpqRU7OOAhDmBnldtS5CTMoh1r7TOGMfM1Npa+kGV5QnjRzI\nFzFSymo=\n-----END CERTIFICATE-----\n",
                  "description": "terraform test certificate",
                  "domain": "www.elb.com",
                  "name": "certificate_1",
                  "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEAu+qgVpV6mqbaGW1Q\nn6eDPzhwentQPPiXwG1665M9+gjW4pUQ0RudBc0fkUU/O+Q0UMT8ZV/I2hSenCVy\nJoyPEwIDAQABAkAbyksEAv8qt9oxQHVX5xIF23bm5i2rlqf6kTZIeHIF89/NNJ2E\nsejiqFIWqPc5a00Scn+ymdCvjC25JVyup9cBAiEA4a+7WhPmgS54yNHjwkG2pflz\ncfH1V7qPqlBKIGLwZbMCIQDVKCsZ6eoNdQoLVmK0zii8XDCgL8HWMrm/bytbYM9B\nIQIgVdcAXKebEeF6IW/rwDQ8Y2644UsVdTPJdw8o0p6vLw8CIDqm191EiPt09fOS\nrIxVoc3ajCK3oV2ADa5IN6ToKX8hAiBPuNCCIYcZz0tAzWX7I1OYMI3UhJjtrESg\nmYFrsJ4gHw==\n-----END RSA PRIVATE KEY-----\n"
                }
        argumentDocs:
            certificate: '- (Required) The public encrypted key of the Certificate, PEM format.'
            createa_at: '- Indicates the creation time.'
            description: '- (Optional) Provides supplementary information about the certificate.'
            domain: '- (Optional) The domain of the Certificate.'
            expire_time: '- Indicates the expiration time.'
            name: |-
                - (Optional) Specifies the certificate name. Only letters,
                digits, underscores, and hyphens are allowed.
            private_key: |-
                - (Optional) The private encrypted key of the Certificate, PEM format.
                Required for certificates of type server.
            region: |-
                - (Optional) The region in which to obtain the V3 ELB client.
                An ELB client is needed to create an LB certificate. If omitted, the
                region argument of the provider is used. Changing this creates a new
                LB certificate.
            type: |-
                - (Optional) The type of certificate the container holds. Either server or client.
                Defaults to server if not set. Changing this creates a new LB certificate.
            updated_at: '- Indicates the update time.'
        importStatements:
            - terraform import opentelekomcloud_lb_certificate_v3.certificate_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_lb_ipgroup_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB IpGroup resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_ipgroup_v3
        title: opentelekomcloud_lb_ipgroup_v3
        examples:
            - name: group_1
              manifest: |-
                {
                  "description": "group description",
                  "ip_list": [
                    {
                      "description": "one",
                      "ip": "192.168.50.10"
                    },
                    {
                      "description": "two",
                      "ip": "192.168.100.10"
                    },
                    {
                      "description": "three",
                      "ip": "192.168.150.10"
                    }
                  ],
                  "name": "group_1"
                }
            - name: group_1
              manifest: |-
                {
                  "description": "group description",
                  "name": "group_1"
                }
        argumentDocs:
            created_at: '- Indicates the creation time.'
            description: '- (Optional, String) Provides supplementary information about the IP address group.'
            ip_list: |-
                - (Optional, List) Specifies the IP addresses or CIDR blocks in the IP address group.
                Any IP address can be used if this block isn't specified.
            ip_list.description: '- (Optional, String) Provides remarks about the IP address group.'
            ip_list.ip: |-
                - (Required, String) Specifies the IP addresses in the IP address group.
                IPv6 is unsupported. The value cannot be an IPv6 address.
            listeners: '- Lists the IDs of listeners with which the IP address group is associated.'
            name: '- (Optional, String) Specifies the IP address group name.'
            project_id: '- (Optional, String) Specifies the project ID of the IP address group.'
            updated_at: '- Indicates the update time.'
        importStatements:
            - terraform import opentelekomcloud_lb_ipgroup_v3.group_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_lb_l7policy_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB L7 Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_l7policy_v2
        title: opentelekomcloud_lb_l7policy_v2
        examples:
            - name: l7policy_1
              manifest: |-
                {
                  "action": "REDIRECT_TO_POOL",
                  "description": "test l7 policy",
                  "listener_id": "${opentelekomcloud_lb_listener_v2.listener_1.id}",
                  "name": "test",
                  "position": 1,
                  "redirect_pool_id": "${opentelekomcloud_lb_pool_v2.pool_1.id}"
                }
              references:
                listener_id: opentelekomcloud_lb_listener_v2.listener_1.id
                redirect_pool_id: opentelekomcloud_lb_pool_v2.pool_1.id
              dependencies:
                opentelekomcloud_lb_listener_v2.listener_1: |-
                    {
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "listener_1",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1: |-
                    {
                      "name": "loadbalancer_1",
                      "vip_subnet_id": "SUBNET_ID"
                    }
                opentelekomcloud_lb_pool_v2.pool_1: |-
                    {
                      "lb_method": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "pool_1",
                      "protocol": "HTTP"
                    }
        argumentDocs:
            action: |-
                - (Required) The L7 Policy action - can either be REDIRECT_TO_POOL,
                or REDIRECT_TO_LISTENER. Changing this creates a new L7 Policy.
            admin_state_up: |-
                - (Optional) The administrative state of the L7 Policy.
                This value can only be true (UP).
            description: '- (Optional) Human-readable description for the L7 Policy.'
            id: '- The unique ID for the L7 policy.'
            listener_id: |-
                - (Required) The Listener on which the L7 Policy will be associated with.
                Changing this creates a new L7 Policy.
            name: |-
                - (Optional) Human-readable name for the L7 Policy. Does not have
                to be unique.
            position: '- (Optional) The position of this policy on the listener. Positions start at 1. Changing this creates a new L7 Policy.'
            redirect_listener_id: |-
                - (Optional) Requests matching this policy will be redirected to the listener with this ID.
                Only valid if action is REDIRECT_TO_LISTENER.
            redirect_pool_id: |-
                - (Optional) Requests matching this policy will be redirected to the pool with this ID.
                Only valid if action is REDIRECT_TO_POOL.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                If omitted, the region argument of the provider is used.
                Changing this creates a new L7 Policy.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the L7 Policy. Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new L7 Policy.
        importStatements: []
    opentelekomcloud_lb_l7rule_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB L7 Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_l7rule_v2
        title: opentelekomcloud_lb_l7rule_v2
        examples:
            - name: l7rule_1
              manifest: |-
                {
                  "compare_type": "EQUAL_TO",
                  "l7policy_id": "${opentelekomcloud_lb_l7policy_v2.l7policy_1.id}",
                  "type": "PATH",
                  "value": "/api"
                }
              references:
                l7policy_id: opentelekomcloud_lb_l7policy_v2.l7policy_1.id
              dependencies:
                opentelekomcloud_lb_l7policy_v2.l7policy_1: |-
                    {
                      "action": "REDIRECT_TO_URL",
                      "description": "test description",
                      "listener_id": "${opentelekomcloud_lb_listener_v2.listener_1.id}",
                      "name": "test",
                      "position": 1,
                      "redirect_url": "http://www.example.com"
                    }
                opentelekomcloud_lb_listener_v2.listener_1: |-
                    {
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "listener_1",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1: |-
                    {
                      "name": "loadbalancer_1",
                      "vip_subnet_id": "SUBNET_ID"
                    }
                opentelekomcloud_lb_pool_v2.pool_1: |-
                    {
                      "lb_method": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "pool_1",
                      "protocol": "HTTP"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the L7 Rule.
                The value can only be true (UP).
            compare_type: |-
                - (Required) The comparison type for the L7 rule - can either be
                STARTS_WITH, EQUAL_TO or REGEX
            description: '- (Optional) Human-readable description for the L7 Rule.'
            id: '- The unique ID for the L7 Rule.'
            invert: '- See Argument Reference above.'
            key: |-
                - (Optional) The key to use for the comparison. For example, the name of the cookie to
                evaluate. Valid when type is set to COOKIE or HEADER. Changing this creates a new L7 Rule.
            l7policy_id: |-
                - (Required) The ID of the L7 Policy to query. Changing this creates a new
                L7 Rule.
            listener_id: '- The ID of the Listener owning this resource.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                If omitted, the region argument of the provider is used.
                Changing this creates a new L7 Rule.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the L7 Rule.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new L7 Rule.
            type: '- (Required) The L7 Rule type - can either be HOST_NAME or PATH. Changing this creates a new L7 Rule.'
            value: |-
                - (Required) The value to use for the comparison. For example, the file type to
                compare.
        importStatements: []
    opentelekomcloud_lb_listener_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB Listener resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_listener_v2
        title: opentelekomcloud_lb_listener_v2
        examples:
            - name: listener_1
              manifest: |-
                {
                  "loadbalancer_id": "d9415786-5f1a-428b-b35f-2f1523e146d2",
                  "protocol": "HTTP",
                  "protocol_port": 8080,
                  "tags": {
                    "muh": "kuh"
                  }
                }
            - name: listener_1
              manifest: |-
                {
                  "ip_group": [
                    {
                      "enable": false,
                      "id": "${opentelekomcloud_lb_ipgroup_v3.group_1.id}"
                    }
                  ],
                  "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1.id}",
                  "name": "listener_1_updated",
                  "protocol": "HTTP",
                  "protocol_port": 8080
                }
              references:
                ip_group.id: opentelekomcloud_lb_ipgroup_v3.group_1.id
                loadbalancer_id: opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1.id
              dependencies:
                opentelekomcloud_lb_ipgroup_v3.group_1: |-
                    {
                      "description": "some interesting description 1",
                      "ip_list": [
                        {
                          "description": "first",
                          "ip": "192.168.10.10"
                        }
                      ],
                      "name": "group_1"
                    }
                opentelekomcloud_lb_loadbalancer_v2.loadbalancer_1: |-
                    {
                      "name": "loadbalancer_1",
                      "vip_subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.subnet_id}"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the Listener.
                A valid value is true (UP) or false (DOWN).
            client_ca_tls_container_ref: |-
                (Optional) Specifies the ID of a certificate container of type client
                used by the listener. The value contains a maximum of 128 characters. The default value is null.
                The loadbalancer only establishes a TLS connection if the client presents a certificate delivered by
                the client CA whose certificate is registered in the referenced certificate container. The option is
                effective only in conjunction with TERMINATED_HTTPS.
            default_pool_id: |-
                - (Optional) The ID of the default pool with which the
                Listener is associated. Changing this creates a new Listener.
            default_port_id: '- See Argument Reference above.'
            default_tls_container_ref: |-
                - (Optional) Specifies the ID of a certificate container of type server
                used by the listener. The value contains a maximum of 128 characters. The default value is null.
                This parameter is required when protocol is set to TERMINATED_HTTPS.
                See here
                for more information.
            description: '- (Optional) Human-readable description for the Listener.'
            enable: |-
                - (Optional, Bool) Specifies whether to enable access control.
                true: Access control will be enabled.
                false (default): Access control will be disabled.
            http2_enable: |-
                - (Optional) true to enable HTTP/2 mode of ELB.
                HTTP/2 is disabled by default if not set.
            id: |-
                - (Required, String) Specifies the ID of the IP address group associated with the listener.
                Specifies the ID of the IP address group associated with the listener.
                If ip_list in opentelekomcloud_lb_ipgroup_v3 is set to an empty array [] and type to whitelist, no IP addresses are allowed to access the listener.
                If ip_list in opentelekomcloud_lb_ipgroup_v3 is set to an empty array [] and type to blacklist, any IP address is allowed to access the listener.
            ip_group: '- (Optional, Map) Specifies the IP address group associated with the listener.'
            loadbalancer_id: |-
                - (Required) The load balancer on which to provision this
                Listener. Changing this creates a new Listener.
            name: |-
                - (Optional) Human-readable name for the Listener. Does not have
                to be unique.
            protocol: |-
                - (Required) The protocol - can either be TCP, HTTP, HTTPS or TERMINATED_HTTPS.
                Changing this creates a new Listener.
            protocol_port: |-
                - (Required) The port on which to listen for client traffic.
                Changing this creates a new Listener.
            sni_container_refs: |-
                - (Optional) Lists the IDs of SNI certificates (server certificates with a domain name) used
                by the listener. If the parameter value is an empty list, the SNI feature is disabled.
                The default value is []. It only works in conjunction with TERMINATED_HTTPS.
            tags: '- (Optional) Tags key/value pairs to associate with the loadbalancer listener.'
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the Listener.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new Listener.
            tls_ciphers_policy: |-
                - (Optional) Controls the TLS version used. Supported values are tls-1-0, tls-1-1,
                tls-1-2 and tls-1-2-strict. If not set, the loadbalancer uses tls-1-0. See
                here for details about the supported cipher
                suites. The option is effective only in conjunction with TERMINATED_HTTPS.
            transparent_client_ip_enable: |-
                - (Optional) Specifies whether to pass source IP addresses of the clients to
                backend servers. The value is always true for HTTP and HTTPS listeners. For TCP and UDP listeners the
                value can be true or false with false by default.
            type: |-
                - (Optional, String) Specifies how access to the listener is controlled.
                white (default): A whitelist will be configured. Only IP addresses in the whitelist can access the listener.
                black: A blacklist will be configured. IP addresses in the blacklist are not allowed to access the listener.
        importStatements:
            - terraform import opentelekomcloud_lb_listener_v2.listener_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_lb_listener_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Listener resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_listener_v3
        title: opentelekomcloud_lb_listener_v3
        examples:
            - name: listener_1
              manifest: |-
                {
                  "loadbalancer_id": "${var.loadbalancer_id}",
                  "protocol": "HTTP",
                  "protocol_port": 8080,
                  "tags": {
                    "muh": "kuh"
                  }
                }
              references:
                loadbalancer_id: var.loadbalancer_id
            - name: listener_1
              manifest: |-
                {
                  "advanced_forwarding": true,
                  "description": "some interesting description",
                  "insert_headers": [
                    {
                      "forwarded_host": true
                    }
                  ],
                  "ip_group": [
                    {
                      "enable": true,
                      "id": "${opentelekomcloud_lb_ipgroup_v3.group_1.id}"
                    }
                  ],
                  "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.loadbalancer_1.id}",
                  "name": "listener_1",
                  "protocol": "HTTP",
                  "protocol_port": 8080,
                  "sni_match_algo": "wildcard"
                }
              references:
                ip_group.id: opentelekomcloud_lb_ipgroup_v3.group_1.id
                loadbalancer_id: opentelekomcloud_lb_loadbalancer_v3.loadbalancer_1.id
              dependencies:
                opentelekomcloud_lb_ipgroup_v3.group_1: |-
                    {
                      "description": "some interesting description 2",
                      "ip_list": [
                        {
                          "description": "one",
                          "ip": "192.168.10.11"
                        }
                      ],
                      "name": "group_2"
                    }
        argumentDocs:
            HTTP: and HTTPS listeners, the value ranges from 0 to 4000, and the default value is 60.
            TCP: listeners, the value ranges from 10 to 4000, and the default value is 300.
            UDP: |-
                listeners, this parameter is not available. An error will be returned if you
                configure this parameter for UDP listeners.
            advanced_forwarding: |-
                - (Optional, ForceNew, Bool) Specifies whether to enable advanced forwarding.
                If advanced forwarding is enabled, more flexible forwarding policies and rules are supported.
                The value can be true (enable advanced forwarding) or false (disable advanced forwarding),
                and the default value is false. Changing this creates a new Listener.
            client_ca_tls_container_ref: '- (Optional, String) Specifies the ID of the CA certificate used by the listener.'
            client_timeout: |-
                - (Optional, Int) Specifies the timeout duration for waiting for a request from a client, in seconds.
                This parameter is available only for HTTP and HTTPS listeners. The value ranges from 1 to 300, and
                the default value is 60. An error will be returned if you configure this parameter for TCP and UDP listeners.
            created_at: '- Indicates the creation time.'
            default_pool_id: |-
                - (Optional, String) Specifies the ID of the default backend server group. If there is no
                matched forwarding policy, requests are forwarded to the default backend server for processing.
            default_tls_container_ref: '- (Optional, String) Specifies the ID of the server certificate used by the listener.'
            description: '- (Optional, String) Provides supplementary information about the listener.'
            enable: |-
                - (Optional, Bool) Specifies whether to enable access control.
                true: Access control will be enabled.
                false (default): Access control will be disabled.
            forward_elb_ip: |-
                - (Optional, Bool) Specifies whether to transparently transmit the load balancer EIP
                to backend servers. If forward_elb_ip is set to true, the load balancer EIP will be stored in
                the HTTP header and passed to backend servers.
            forwarded_for_port: |-
                - (Optional, Bool) Specifies whether to transparently transmit the source port of
                the client to backend servers. If forwarded_for_port is set to true, the source port of the
                client will be stored in the HTTP header and passed to backend servers.
            forwarded_host: |-
                - (Optional, Bool) Specifies whether to rewrite the X-Forwarded-Host header.
                If forwarded_host is set to true, X-Forwarded-Host in the request header from the clients
                can be set to Host in the request header sent from the load balancer to backend servers.
            forwarded_port: |-
                - (Optional, Bool) Specifies whether to transparently transmit the listening port of
                the load balancer to backend servers. If forwarded_port is set to true, the listening port of
                the load balancer will be stored in the HTTP header and passed to backend servers.
            http2_enable: |-
                - (Optional, Bool) Specifies whether to use HTTP/2. This parameter is available only for HTTPS
                listeners. If you configure this parameter for other types of listeners, it will not take effect. Enable
                HTTP/2 if you want the clients to use HTTP/2 to communicate with the load balancer.
                However, connections between the load balancer and backend servers use HTTP/1.x by default.
            id: |-
                - (Required, String) Specifies the ID of the IP address group associated with the listener.
                Specifies the ID of the IP address group associated with the listener.
                If ip_list in opentelekomcloud_lb_ipgroup_v3 is set to an empty array [] and type to whitelist, no IP addresses are allowed to access the listener.
                If ip_list in opentelekomcloud_lb_ipgroup_v3 is set to an empty array [] and type to blacklist, any IP address is allowed to access the listener.
            insert_headers: '- (Optional, List) Specifies the HTTP header fields.'
            ip_group: '- (Optional, List) Specifies the IP address group associated with the listener.'
            keep_alive_timeout: '- (Optional, Int) Specifies the idle timeout duration, in seconds.'
            loadbalancer_id: '- (Required, ForceNew, String) Specifies the ID of the load balancer that the listener is added to.'
            member_retry_enable: |-
                - (Optional, Bool) Specifies whether to enable health check retries for backend servers.
                This parameter is available only for HTTP and HTTPS listeners. An error will be returned if you configure
                this parameter for TCP and UDP listeners.
            member_timeout: |-
                - (Optional, Int) Specifies the timeout duration for waiting for a request from a
                backend server, in seconds. This parameter is available only for HTTP and HTTPS listeners.
                The value ranges from 1 to 300, and the default value is 60. An error will be returned if
                you configure this parameter for TCP and UDP listeners.
            name: '- (Optional, String) Specifies the listener name.'
            protocol: |-
                - (Required, ForceNew, String) The protocol - can either be TCP, HTTP, HTTPS or UDP.
                Changing this creates a new Listener.
            protocol_port: '- (Required, ForceNew, Int) Specifies the port used by the listener. Changing this creates a new Listener.'
            security_policy_id: '- (Optional, String) Specifies the ID of the custom security policy.'
            sni_container_refs: |-
                - (Optional, List) Lists the IDs of SNI certificates (server certificates with domain names) used by the listener.
                Each SNI certificate can have up to 30 domain names, and each domain name in the SNI certificate must be unique.
                This parameter will be ignored and an empty array will be returned if the listener's protocol is not HTTPS.
            sni_match_algo: |-
                - (Optional, String) Specifies how wildcard domain name matches with the SNI certificates
                used by the listener.
            tags: '- (Optional, ForceNew, Map) Tags key/value pairs to associate with the loadbalancer listener.'
            tls_ciphers_policy: |-
                - (Optional, String) Specifies the security policy that will be used by the listener.
                This parameter is available only for HTTPS listeners. An error will be returned if the protocol
                of the listener is not HTTPS. Possible values are: tls-1-0, tls-1-1, tls-1-0-inherit, tls-1-2,
                tls-1-2-strict, tls-1-2-fs, tls-1-0-with-1-3, tls-1-2-fs-with-1-3, hybrid-policy-1-0, tls-1-2-strict-no-cbc.
            type: |-
                - (Optional, String) Specifies how access to the listener is controlled.
                white (default): A whitelist will be configured. Only IP addresses in the whitelist can access the listener.
                black: A blacklist will be configured. IP addresses in the blacklist are not allowed to access the listener.
            updated_at: '- Indicates the update time.'
        importStatements:
            - terraform import opentelekomcloud_lb_listener_v3.listener_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_lb_loadbalancer_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB Loadbalancer resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_loadbalancer_v2
        title: opentelekomcloud_lb_loadbalancer_v2
        examples:
            - name: lb_1
              manifest: |-
                {
                  "tags": {
                    "muh": "kuh"
                  },
                  "vip_subnet_id": "d9415786-5f1a-428b-b35f-2f1523e146d2"
                }
            - name: lb_1
              manifest: |-
                {
                  "vip_subnet_id": "${opentelekomcloud_vpc_subnet_v1.private.subnet_id}"
                }
              references:
                vip_subnet_id: opentelekomcloud_vpc_subnet_v1.private.subnet_id
              dependencies:
                opentelekomcloud_vpc_subnet_v1.private: |-
                    {
                      "cidr": "${cidrsubnet(opentelekomcloud_vpc_v1.main.cidr, 8, 0)}",
                      "dns_list": [
                        "1.1.1.1",
                        "8.8.8.8"
                      ],
                      "gateway_ip": "${cidrhost(cidrsubnet(opentelekomcloud_vpc_v1.main.cidr, 8, 0), 1)}",
                      "name": "${opentelekomcloud_vpc_v1.main.name}-private",
                      "vpc_id": "${opentelekomcloud_vpc_v1.main.id}"
                    }
                opentelekomcloud_vpc_v1.main: |-
                    {
                      "cidr": "192.168.0.0/16",
                      "name": "test-vpc-1"
                    }
            - name: lb_1
              manifest: |-
                {
                  "name": "example-loadbalancer",
                  "vip_subnet_id": "d9415786-5f1a-428b-b35f-2f1523e146d2"
                }
              dependencies:
                opentelekomcloud_networking_floatingip_associate_v2.associate: |-
                    {
                      "floating_ip": "${var.floating_ip_address}",
                      "port_id": "${opentelekomcloud_lb_loadbalancer_v2.lb_1.vip_port_id}"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the loadbalancer.
                A valid value is only true (UP).
            description: '- (Optional) Human-readable description for the loadbalancer.'
            loadbalancer_provider: |-
                - (Optional) The name of the provider. Changing this
                creates a new loadbalancer.
            name: |-
                - (Optional) Human-readable name for the loadbalancer. Does not have
                to be unique.
            tags: '- (Optional) Tags key/value pairs to associate with the loadbalancer.'
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the Loadbalancer.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new loadbalancer.
            vip_address: |-
                - (Optional) The ip address of the load balancer.
                Changing this creates a new loadbalancer.
            vip_port_id: '- The Port ID of the Load Balancer IP.'
            vip_subnet_id: |-
                - (Required) The network on which to allocate the
                loadbalancer's address. A tenant can only create loadalancers on networks
                authorized by policy (e.g. networks that belong to them or networks that
                are shared). Changing this creates a new loadbalancer.
        importStatements: []
    opentelekomcloud_lb_loadbalancer_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Loadbalancer resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_loadbalancer_v3
        title: opentelekomcloud_lb_loadbalancer_v3
        examples:
            - name: lb_1
              manifest: |-
                {
                  "availability_zones": [
                    "${var.az}"
                  ],
                  "network_ids": [
                    "${var.network_id}"
                  ],
                  "router_id": "${var.router_id}",
                  "tags": {
                    "muh": "kuh"
                  }
                }
              references:
                availability_zones: var.az
                network_ids: var.network_id
                router_id: var.router_id
            - name: lb_1
              manifest: |-
                {
                  "availability_zones": [
                    "${var.az}"
                  ],
                  "network_ids": [
                    "${opentelekomcloud_vpc_subnet_v1.this.network_id}"
                  ],
                  "subnet_id": "${opentelekomcloud_vpc_subnet_v1.this.subnet_id}"
                }
              references:
                availability_zones: var.az
                network_ids: opentelekomcloud_vpc_subnet_v1.this.network_id
                subnet_id: opentelekomcloud_vpc_subnet_v1.this.subnet_id
              dependencies:
                opentelekomcloud_vpc_subnet_v1.this: |-
                    {
                      "cidr": "${cidrsubnet(opentelekomcloud_vpc_v1.this.cidr, 8, 0)}",
                      "dns_list": [
                        "1.1.1.1",
                        "8.8.8.8"
                      ],
                      "gateway_ip": "${cidrhost(cidrsubnet(opentelekomcloud_vpc_v1.this.cidr, 8, 0), 1)}",
                      "name": "${opentelekomcloud_vpc_v1.this.name}-private",
                      "vpc_id": "${opentelekomcloud_vpc_v1.this.id}"
                    }
                opentelekomcloud_vpc_v1.this: |-
                    {
                      "cidr": "192.168.0.0/16",
                      "name": "test-vpc-1"
                    }
            - name: lb_1
              manifest: |-
                {
                  "availability_zones": [
                    "${var.az}"
                  ],
                  "name": "example-loadbalancer",
                  "network_ids": [
                    "${var.network_id}"
                  ],
                  "public_ip": [
                    {
                      "bandwidth_name": "lb-bandwidth",
                      "bandwidth_share_type": "PER",
                      "bandwidth_size": 10,
                      "ip_type": "5_bgp"
                    }
                  ],
                  "subnet_id": "${var.subnet_id}"
                }
              references:
                availability_zones: var.az
                network_ids: var.network_id
                subnet_id: var.subnet_id
            - name: loadbalancer_1
              manifest: |-
                {
                  "availability_zones": [
                    "eu-de-01"
                  ],
                  "name": "loadbalancer_1",
                  "network_ids": [
                    "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}"
                  ],
                  "public_ip": [
                    {
                      "id": "${opentelekomcloud_networking_floatingip_v2.fip_1.id}"
                    }
                  ],
                  "router_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                }
              references:
                network_ids: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id
                public_ip.id: opentelekomcloud_networking_floatingip_v2.fip_1.id
                router_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
              dependencies:
                opentelekomcloud_networking_floatingip_v2.fip_1: '{}'
            - name: loadbalancer_1
              manifest: |-
                {
                  "availability_zones": [
                    "eu-de-01"
                  ],
                  "name": "loadbalancer_1",
                  "network_ids": [
                    "${opentelekomcloud_vpc_subnet_v1.this.network_id}"
                  ],
                  "public_ip": [
                    {
                      "id": "${opentelekomcloud_vpc_eip_v1.fip_1.id}"
                    }
                  ],
                  "router_id": "${opentelekomcloud_vpc_subnet_v1.this.vpc_id}"
                }
              references:
                network_ids: opentelekomcloud_vpc_subnet_v1.this.network_id
                public_ip.id: opentelekomcloud_vpc_eip_v1.fip_1.id
                router_id: opentelekomcloud_vpc_subnet_v1.this.vpc_id
              dependencies:
                opentelekomcloud_vpc_eip_v1.fip_1: |-
                    {
                      "bandwidth": [
                        {
                          "charge_mode": "traffic",
                          "name": "eip",
                          "share_type": "PER",
                          "size": 100
                        }
                      ],
                      "publicip": [
                        {
                          "type": "5_bgp"
                        }
                      ]
                    }
            - name: loadbalancer_1
              manifest: |-
                {
                  "availability_zones": [
                    "eu-de-01"
                  ],
                  "name": "loadbalancer_1",
                  "network_ids": [
                    "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}"
                  ],
                  "public_ip": [
                    {
                      "bandwidth_name": "lb_band",
                      "bandwidth_share_type": "PER",
                      "bandwidth_size": 10,
                      "ip_type": "5_bgp"
                    }
                  ],
                  "router_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}",
                  "tags": {
                    "kuh": "value-create",
                    "muh": "value-create"
                  }
                }
              references:
                network_ids: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id
                router_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
              dependencies:
                opentelekomcloud_vpc_bandwidth_associate_v2.associate: |-
                    {
                      "bandwidth": "${opentelekomcloud_vpc_bandwidth_v2.bw.id}",
                      "floating_ips": [
                        "${opentelekomcloud_lb_loadbalancer_v3.loadbalancer_1.public_ip.0.id}"
                      ]
                    }
                opentelekomcloud_vpc_bandwidth_v2.bw: |-
                    {
                      "name": "lb_band",
                      "size": 20
                    }
        argumentDocs:
            admin_state_up: '- (Optional) The administrative state of the LoadBalancer. A valid value is only true (UP).'
            availability_zones: |-
                - (Required) Specifies the availability zones where the LoadBalancer will be located.
                Changing this creates a new LoadBalancer.
            created_at: '- The time the LoadBalancer was created.'
            description: '- (Optional) Provides supplementary information about the load balancer.'
            ip_target_enable: '- (Optional) The value can be true (enabled) or false (disabled).'
            l4_flavor: '- (Optional) The ID of the Layer-4 flavor.'
            l7_flavor: '- (Optional) The ID of the Layer-7 flavor.'
            name: '- (Optional) The LoadBalancer name.'
            network_ids: '- (Required) Specifies the subnet Network ID.'
            public_ip: |-
                - (Optional) The elastic IP address of the instance. The public_ip structure
                is described below. Changing this creates a new LoadBalancer.
            public_ip.bandwidth_charge_mode: '- (Optional) Bandwidth billing type. Possible value is traffic.'
            public_ip.bandwidth_name: '- (Optional) Bandwidth name. Required when creating a new EIP.'
            public_ip.bandwidth_share_type: |-
                - (Optional) Bandwidth sharing type. Possible values are: PER, WHOLE.
                Required when creating a new EIP.
            public_ip.bandwidth_size: '- (Optional) Bandwidth size. Required when creating a new EIP.'
            public_ip.deletion_protection: |-
                - (Optional) Specifies whether to enable deletion protection for the load balancer.
                true: Enable deletion protection.
                false (default): Disable deletion protection.
            public_ip.id: '- (Optional) ID of an existing elastic IP. Required when using existing EIP.'
            public_ip.ip_type: |-
                - (Optional) Elastic IP type. The value can be 5_bgp or 5_mailbgp.
                Required when creating a new EIP.
            public_ip.tags: '- (Optional, Map) Tags key/value pairs to associate with the load balancer.'
            router_id: |-
                - (Optional) ID of the router (or VPC) this LoadBalancer belongs to. Changing
                this creates a new LoadBalancer.
            subnet_id: '- (Optional) The ID of the subnet to which the LoadBalancer belongs. Required when using vip_address.'
            updated_at: '- The time the LoadBalancer was last updated.'
            vip_address: '- (Optional) The ip address of the LoadBalancer. Changing this creates a new LoadBalancer.'
            vip_port_id: '- The Port ID of the Load Balancer IP.'
        importStatements: []
    opentelekomcloud_lb_member_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB Member resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_member_v2
        title: opentelekomcloud_lb_member_v2
        examples:
            - name: member1
              manifest: |-
                {
                  "address": "192.168.199.23",
                  "pool_id": "${var.pool_id}",
                  "protocol_port": 8080,
                  "subnet_id": "${var.subnet_id}"
                }
              references:
                pool_id: var.pool_id
                subnet_id: var.subnet_id
        argumentDocs:
            address: |-
                - (Required) The IP address of the member to receive traffic from
                the load balancer. Changing this creates a new member.
            admin_state_up: |-
                - (Optional) The administrative state of the member.
                A valid value is true (UP) or false (DOWN).
            id: '- The unique ID for the member.'
            name: '- (Optional) Human-readable name for the member.'
            pool_id: |-
                - (Required) The id of the pool that this member will be
                assigned to.
            protocol_port: |-
                - (Required) The port on which to listen for client traffic.
                Changing this creates a new member.
            subnet_id: '- (Required) The subnet in which to access the member'
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the member.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new member.
            weight: |-
                - (Optional)  A positive integer value that indicates the relative
                portion of traffic that this member should receive from the pool. For
                example, a member with a weight of 10 receives five times as much traffic
                as a member with a weight of 2. If the value is 0, the backend server will not accept new requests
        importStatements: []
    opentelekomcloud_lb_member_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Member resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_member_v3
        title: opentelekomcloud_lb_member_v3
        examples:
            - name: member
              manifest: |-
                {
                  "address": "${cidrhost(var.subnet_cidr, 3)}",
                  "name": "member-1",
                  "pool_id": "${opentelekomcloud_lb_pool_v3.pool.id}",
                  "protocol_port": 8080
                }
              references:
                pool_id: opentelekomcloud_lb_pool_v3.pool.id
              dependencies:
                opentelekomcloud_lb_loadbalancer_v3.lb: |-
                    {
                      "availability_zones": [
                        "${var.availability_zone}"
                      ],
                      "ip_target_enable": true,
                      "name": "loadbalancer_1",
                      "network_ids": [
                        "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}"
                      ],
                      "router_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                    }
                opentelekomcloud_lb_pool_v3.pool: |-
                    {
                      "lb_algorithm": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.lb.id}",
                      "name": "pool_1",
                      "protocol": "TCP"
                    }
        argumentDocs:
            "0": ', the backend server will not accept new requests.'
            IPv4: subnets are supported.
            NO_MONITOR: ': No health check is configured for the backend server group to which the backend server belongs.'
            OFFLINE: ': The cloud server used as the backend server is stopped or does not exist.'
            ONLINE: ': The backend server is running normally.'
            address: '- (Required) Specifies the IP address of the backend server.'
            ip_version: '- Version of IP based on the address parameter. The value can be v4 or v6.'
            lb_algorithm: |-
                is set to SOURCE_IP for the backend server group that contains the
                backend server.
            member_id: '- ID of the pool member.'
            name: '- (Optional) Specifies the backend server name. The value is a string of 0 to 255 characters.'
            operating_status: '- Specifies the operating status of the backend server.'
            project_id: '- (Optional) Specifies the project ID.'
            protocol_port: |-
                - (Required) Specifies the port used by the backend server to receive requests. The value should be a
                valid port.
            subnet_id: ', for example, 192.168.3.11.'
            weight: '- (Optional) Specifies the weight of the backend server.'
        importStatements: []
    opentelekomcloud_lb_monitor_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB Monitor resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_monitor_v2
        title: opentelekomcloud_lb_monitor_v2
        examples:
            - name: monitor_1
              manifest: |-
                {
                  "delay": 20,
                  "max_retries": 5,
                  "pool_id": "${opentelekomcloud_lb_pool_v2.pool_1.id}",
                  "timeout": 10,
                  "type": "HTTP",
                  "url_path": "/"
                }
              references:
                pool_id: opentelekomcloud_lb_pool_v2.pool_1.id
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the monitor.
                A valid value is true (UP) or false (DOWN).
            delay: '- (Required) The time, in seconds, between sending probes to members.'
            domain_name: '- (Optional) The domain_name of the HTTP request during the health check.'
            expected_codes: |-
                - (Optional) Required for HTTP types. Expected HTTP codes
                for a passing HTTP monitor. You can either specify a single status like
                "200", or a list like "200,202".
            http_method: |-
                - (Optional) Required for HTTP types. The HTTP method used
                for requests by the monitor. If this attribute is not specified, it
                defaults to GET. The value can be GET, HEAD, POST, PUT, DELETE,
                TRACE, OPTIONS, CONNECT, and PATCH.
            id: '- The unique ID for the monitor.'
            max_retries: |-
                - (Required) Number of permissible ping failures before
                changing the member's status to INACTIVE. Must be a number between 1 and 10.
            monitor_port: |-
                - (Optional) Specifies the health check port. The port number
                ranges from 1 to 65535. The value is left blank by default, indicating that
                the port of the backend server is used as the health check port.
            name: '- (Optional) The Name of the Monitor.'
            pool_id: '- (Required) The id of the pool that this monitor will be assigned to.'
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the monitor. Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new monitor.
            timeout: |-
                - (Required) Maximum number of seconds for a monitor to wait for a
                ping reply before it times out. The value must be less than the delay value.
            type: |-
                - (Required) The type of probe, which is TCP, UDP_CONNECT, or HTTP,
                that is sent by the load balancer to verify the member state. Changing this
                creates a new monitor.
            url_path: |-
                - (Optional) Required for HTTP types. URI path that will be
                accessed if monitor type is HTTP.
        importStatements: []
    opentelekomcloud_lb_monitor_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Monitor resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_monitor_v3
        title: opentelekomcloud_lb_monitor_v3
        examples:
            - name: monitor
              manifest: |-
                {
                  "delay": 3,
                  "max_retries": 5,
                  "max_retries_down": 1,
                  "monitor_port": 8080,
                  "pool_id": "${opentelekomcloud_lb_pool_v3.pool.id}",
                  "timeout": 30,
                  "type": "HTTP"
                }
              references:
                pool_id: opentelekomcloud_lb_pool_v3.pool.id
              dependencies:
                opentelekomcloud_lb_loadbalancer_v3.lb: |-
                    {
                      "availability_zones": [
                        "${var.availability_zone}"
                      ],
                      "name": "loadbalancer_1",
                      "network_ids": [
                        "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}"
                      ],
                      "router_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                    }
                opentelekomcloud_lb_pool_v3.pool: |-
                    {
                      "lb_algorithm": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.lb.id}",
                      "protocol": "HTTP"
                    }
        argumentDocs:
            /: .
            GET: ', HEAD, POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, or PATCH.'
            HTTP: .
            TCP: ', UDP_CONNECT, HTTP, HTTPS, or PING.'
            admin_state_up: |-
                - (Optional) Specifies the administrative status of the health check.
                true indicates that the health check is enabled, and false indicates that the health check is disabled.
            delay: '- (Required) Specifies the interval between health checks, in seconds.'
            domain_name: '- (Optional) Specifies the domain name that HTTP requests are sent to during the health check.'
            expected_codes: |-
                - (Optional) Specifies the expected HTTP status code. This parameter will take effect only
                when type is set to HTTP.
            http_method: '- (Optional) Specifies the HTTP method.'
            id: '- Specifies the health check (monitor) ID.'
            max_retries: |-
                - (Required) Specifies the number of consecutive health checks when the health check result of a backend
                server changes from OFFLINE to ONLINE.
            max_retries_down: |-
                - (Optional) Specifies the number of consecutive health checks when the health check result of a
                backend server changes from ONLINE to OFFLINE.
            monitor_port: |-
                - (Optional) Specifies the port used for the health check. If this parameter is left blank, the port of
                the backend server group will be used by default.
            name: '- (Optional) Specifies the health check name.'
            pool_id: |-
                - (Required) Specifies the ID of the backend server group for which the health check is configured.
                Changing this creates a new monitor.
            project_id: '- (Optional) Specifies the project ID. Changing this creates a new monitor.'
            timeout: |-
                - (Required) Specifies the maximum time required for waiting for a response from the health check, in
                seconds.
            type: '- (Required) Specifies the health check protocol.'
            url_path: '- (Optional) Specifies the HTTP request path for the health check.'
        importStatements:
            - terraform import opentelekomcloud_lb_monitor_v3.monitor b4ef7345-cf1a-41ca-8baa-941466a66853
    opentelekomcloud_lb_policy_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_policy_v3
        title: opentelekomcloud_lb_policy_v3
        examples:
            - name: this
              manifest: |-
                {
                  "action": "REDIRECT_TO_POOL",
                  "listener_id": "${opentelekomcloud_lb_listener_v3.this.id}",
                  "position": 37,
                  "redirect_pool_id": "${opentelekomcloud_lb_pool_v3.this.id}"
                }
              references:
                listener_id: opentelekomcloud_lb_listener_v3.this.id
                redirect_pool_id: opentelekomcloud_lb_pool_v3.this.id
              dependencies:
                opentelekomcloud_lb_listener_v3.this: |-
                    {
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                opentelekomcloud_lb_loadbalancer_v3.this: |-
                    {
                      "availability_zones": [
                        "${var.az}"
                      ],
                      "network_ids": [
                        "${var.network_id}"
                      ],
                      "router_id": "${var.router_id}"
                    }
                opentelekomcloud_lb_pool_v3.this: |-
                    {
                      "lb_algorithm": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP"
                    }
            - name: this
              manifest: |-
                {
                  "action": "FIXED_RESPONSE",
                  "fixed_response_config": [
                    {
                      "content_type": "text/plain",
                      "message_body": "Fixed Response",
                      "status_code": "200"
                    }
                  ],
                  "listener_id": "${opentelekomcloud_lb_listener_v3.this.id}",
                  "position": 37,
                  "priority": 10
                }
              references:
                listener_id: opentelekomcloud_lb_listener_v3.this.id
              dependencies:
                opentelekomcloud_lb_listener_v3.this: |-
                    {
                      "advanced_forwarding": true,
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                opentelekomcloud_lb_loadbalancer_v3.this: |-
                    {
                      "availability_zones": [
                        "${var.az}"
                      ],
                      "network_ids": [
                        "${var.network_id}"
                      ],
                      "router_id": "${var.router_id}"
                    }
                opentelekomcloud_lb_pool_v3.this: |-
                    {
                      "lb_algorithm": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP"
                    }
            - name: this
              manifest: |-
                {
                  "action": "REDIRECT_TO_URL",
                  "listener_id": "${opentelekomcloud_lb_listener_v3.this.id}",
                  "position": 37,
                  "priority": 10,
                  "redirect_url": "https://www.google.com:443",
                  "redirect_url_config": [
                    {
                      "query": "name=my_name",
                      "status_code": "301"
                    }
                  ]
                }
              references:
                listener_id: opentelekomcloud_lb_listener_v3.this.id
              dependencies:
                opentelekomcloud_lb_listener_v3.this: |-
                    {
                      "advanced_forwarding": true,
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                opentelekomcloud_lb_loadbalancer_v3.this: |-
                    {
                      "availability_zones": [
                        "${var.az}"
                      ],
                      "network_ids": [
                        "${var.network_id}"
                      ],
                      "router_id": "${var.router_id}"
                    }
                opentelekomcloud_lb_pool_v3.this: |-
                    {
                      "lb_algorithm": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP"
                    }
        argumentDocs:
            HOST_NAME: |-
                , the value can contain letters, digits, hyphens -, and periods .
                and must start with a letter or digit. If you want to use a wildcard domain name, enter an asterisk *
                as the leftmost label of the domain name.
                If type is set to PATH and compare_type to STARTS_WITH or EQUAL_TO, the value must start with
                a slash / and can contain only letters, digits, and special characters _~';@^-%#&$.*+?,=!:|/()[]{}.
            action: |-
                - (Required) The Policy action - can either be REDIRECT_TO_POOL,
                or REDIRECT_TO_LISTENER. Changing this creates a new Policy.
            compare_type: |-
                - (Required) - Specifies how requests are matched with the domain name or URL.
                The values can be: EQUAL_TO, REGEX, STARTS_WITH.
            content_type: '- (Optional) - Specifies the format of the response body.'
            description: '- (Optional) Provides supplementary information about the forwarding policy.'
            fixed_response_config: |-
                - (Optional) Specifies the configuration of the page that will be returned.
                This parameter will take effect when advanced_forwarding is set to true.
                If this parameter is passed and advanced_forwarding is set to false, an error will be returned.
                Not available in eu-nl.
            host: |-
                - (Optional) - Specifies the host name that requests are redirected to.
                The value can contain only letters, digits, hyphens (-), and periods (.) and must start with a letter or digit.
                The default value is ${host}, indicating that the host of the request will be used.
            id: '- The unique ID for the policy.'
            listener_id: |-
                - (Required) The Listener on which the Policy will be associated with.
                Changing this creates a new Policy.
            message_body: '- (Optional) - Specifies the content of the response message body.'
            name: '- (Optional) Specifies the forwarding policy name.'
            path: |-
                - (Optional) - Specifies the path that requests are redirected to.
                The default value is ${path}, indicating that the path of the request will be used.
                The value can contain only letters, digits, and special characters _~';@^- %#&$.*+?,=!:|/()[]{}
                and must start with a slash (/).
            pool_id: '- (Required) - Specifies the ID of the backend server group.'
            port: |-
                - (Optional) - Specifies the port that requests are redirected to. The default value is ${port},
                indicating that the port of the request will be used.
            position: |-
                - (Optional) The position of this policy on the listener. Positions start at 1.
                Changing this creates a new Policy.
            priority: |-
                - (Optional) Specifies the forwarding policy priority.
                A smaller value indicates a higher priority. The value must be unique for forwarding policies of the same listener.
                This parameter will take effect only when advanced_forwarding is set to true.
                If this parameter is passed and advanced_forwarding is set to false, an error will be returned.
                This parameter is unsupported for shared load balancers and not available in eu-nl.
            project_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the Policy. Only administrative users can specify a tenant UUID other than
                their own. Changing this creates a new Policy.
            protocol: |-
                - (Optional) - Specifies the protocol for redirection. The value can be HTTP, HTTPS,
                or ${protocol}.
                The default value is ${protocol}, indicating that the protocol of the request will be used.
            query: |-
                - (Optional) - Specifies the query string set in the URL for redirection.
                The default value is ${query}, indicating that the query string of the request will be used.
            redirect_listener_id: |-
                - (Optional) Requests matching this policy will be redirected to the listener with this ID.
                Only valid if action is REDIRECT_TO_LISTENER.
            redirect_pool_id: |-
                - (Optional) Requests matching this policy will be redirected to the pool with this ID.
                Only valid if action is REDIRECT_TO_POOL.
            redirect_pools_config: |-
                - (Optional) Specifies the configuration of the backend server group that the requests
                are forwarded to. This parameter is valid only when action is set to REDIRECT_TO_POOL.
            redirect_url: '- (Optional) Specifies the URL to which requests are forwarded.'
            redirect_url_config: |-
                - (Optional) Specifies the URL to which requests are forwarded.
                For dedicated load balancers, This parameter will take effect when advanced_forwarding is set to true.
                If it is passed when advanced_forwarding is set to false, an error will be returned. Not available in eu-nl.
            rules: '- (Optional) Lists the forwarding rules in the forwarding policy.'
            status: '- Specifies the provisioning status of the forwarding policy.'
            status_code: |-
                - (Required) Specifies the fixed HTTP status code configured in the forwarding rule.
                The value can be any integer in the range of 200-299, 400-499, or 500-599.
            type: '- (Required) Specifies the match content. The value can be one of the following: HOST_NAME, PATH.'
            value: |-
                - (Required) Specifies the value of the match item. For example, if a domain name is
                used for matching, value is the domain name.
            weight: '- (Required) - Specifies the weight of the backend server group. The value ranges from 0 to 100.'
        importStatements:
            - terraform import opentelekomcloud_lb_policy_v3.this 8a7a79c2-cf17-4e65-b2ae-ddc8bfcf6c74
    opentelekomcloud_lb_pool_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB Pool resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_pool_v2
        title: opentelekomcloud_lb_pool_v2
        examples:
            - name: pool_1
              manifest: |-
                {
                  "lb_method": "ROUND_ROBIN",
                  "listener_id": "d9415786-5f1a-428b-b35f-2f1523e146d2",
                  "persistence": [
                    {
                      "cookie_name": "testCookie",
                      "type": "APP_COOKIE"
                    }
                  ],
                  "protocol": "HTTP"
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the pool.
                A valid value is true (UP) or false (DOWN).
            cookie_name: |-
                - (Optional; Required if type = APP_COOKIE) The name of the cookie if persistence mode is set
                appropriately.
            description: '- (Optional) Human-readable description for the pool.'
            id: '- The unique ID for the pool.'
            lb_method: |-
                - (Required) The load balancing algorithm to
                distribute traffic to the pool's members. Must be one of
                ROUND_ROBIN, LEAST_CONNECTIONS, or SOURCE_IP.
            listener_id: |-
                - (Optional) The Listener on which the members of the pool
                will be associated with. Changing this creates a new pool.
            loadbalancer_id: |-
                - (Optional) The load balancer on which to provision this
                pool. Changing this creates a new pool.
            name: '- (Optional) Human-readable name for the pool.'
            persistence: |-
                - (Optional) Omit this field to prevent session persistence. Indicates
                whether connections in the same session will be processed by the same Pool
                member or not. Changing this creates a new pool.
            protocol: |-
                - (Required) The protocol - can either be TCP, UDP or HTTP.
                Changing this creates a new pool.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the pool.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new pool.
            type: |-
                - (Optional; Required if type != null) The type of persistence mode. The current specification
                supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
        importStatements: []
    opentelekomcloud_lb_pool_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Pool resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_pool_v3
        title: opentelekomcloud_lb_pool_v3
        examples:
            - name: pool
              manifest: |-
                {
                  "lb_algorithm": "ROUND_ROBIN",
                  "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.lb.id}",
                  "name": "pool_1",
                  "protocol": "TCP",
                  "session_persistence": [
                    {
                      "persistence_timeout": "30",
                      "type": "SOURCE_IP"
                    }
                  ]
                }
              references:
                loadbalancer_id: opentelekomcloud_lb_loadbalancer_v3.lb.id
              dependencies:
                opentelekomcloud_lb_loadbalancer_v3.lb: |-
                    {
                      "availability_zones": [
                        "${var.availability_zone}"
                      ],
                      "name": "loadbalancer_1",
                      "network_ids": [
                        "${var.network_id}"
                      ],
                      "router_id": "${var.router_id}"
                    }
        argumentDocs:
            "1": to 60, and the default value is 1.
            HTTP: listeners, the protocol of the backend server group must be HTTP.
            HTTPS: listeners, the protocol of the backend server group must be HTTPS.
            LEAST_CONNECTIONS: ': weighted least connections'
            ROUND_ROBIN: ': weighted round-robin'
            SOURCE_IP: ': source IP hash'
            TCP: listeners, the protocol of the backend server group must be TCP.
            UDP: listeners, the protocol of the backend server group must be UDP.
            description: '- (Optional) Provides supplementary information about the backend server group.'
            id: '- Specifies the backend server group ID.'
            ip_version: '- Specifies the IP version supported by the backend server group.'
            lb_algorithm: '- (Required) Specifies the load balancing algorithm used by the load balancer to route requests to backend servers.'
            listener_id: '- (Optional) Specifies the ID of the listener associated with the backend server group.'
            loadbalancer_id: '- (Optional) Specifies the ID of the associated load balancer.'
            name: '- (Optional) Specifies the backend server group name.'
            project_id: '- (Optional) Specifies the project ID.'
            protocol: |-
                - (Required) Specifies the protocol used by the backend server group to receive requests.
                TCP, UDP, HTTP, HTTPS, and QUIC are supported.
            session_persistence: '- (Optional) Specifies whether to enable sticky sessions.'
            session_persistence.cookie_name: |-
                - (Optional) Specifies the cookie name. This parameter will take effect only when type is set to APP_COOKIE.
                The value can contain only letters, digits, hyphens (-), underscores (_), and periods (.).
            session_persistence.member_deletion_protection: |-
                - (Optional) Specifies whether to enable removal protection for the pool members.
                true: Enable removal protection.
                false (default): Disable removal protection.
            session_persistence.persistence_timeout: |-
                - (Optional) Specifies the stickiness duration, in minutes.
                This parameter will not take effect when type is set to APP_COOKIE.
            session_persistence.type: '- (Required) Specifies the sticky session type. The value can be SOURCE_IP, HTTP_COOKIE, or APP_COOKIE.'
            session_persistence.vpc_id: '- (Optional) Specifies the ID of the VPC where the backend server group works.'
        importStatements: []
    opentelekomcloud_lb_rule_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_rule_v3
        title: opentelekomcloud_lb_rule_v3
        examples:
            - name: this
              manifest: |-
                {
                  "compare_type": "REGEX",
                  "policy_id": "${opentelekomcloud_lb_policy_v3.this.id}",
                  "type": "PATH",
                  "value": "^.+$"
                }
              references:
                policy_id: opentelekomcloud_lb_policy_v3.this.id
              dependencies:
                opentelekomcloud_lb_listener_v3.this: |-
                    {
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                opentelekomcloud_lb_loadbalancer_v3.this: |-
                    {
                      "availability_zones": [
                        "${var.az}"
                      ],
                      "network_ids": [
                        "${var.network_id}"
                      ],
                      "router_id": "${var.router_id}"
                    }
                opentelekomcloud_lb_policy_v3.this: |-
                    {
                      "action": "REDIRECT_TO_POOL",
                      "listener_id": "${opentelekomcloud_lb_listener_v3.this.id}",
                      "position": 37,
                      "redirect_pool_id": "${opentelekomcloud_lb_pool_v3.this.id}"
                    }
                opentelekomcloud_lb_pool_v3.this: |-
                    {
                      "lb_algorithm": "ROUND_ROBIN",
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.this.id}",
                      "protocol": "HTTP"
                    }
        argumentDocs:
            compare_type: |-
                - (Required) - Specifies how requests are matched with the domain name or URL.
                The values can be: EQUAL_TO, REGEX, STARTS_WITH.
            conditions: |-
                - (Optional) Specifies the matching conditions of the forwarding rule.
                This parameter is available only when advanced_forwarding is set to true.
                Not available in eu-nl.
            key: '- (Optional) Specifies the key of match item.'
            policy_id: '- (Required) ID of the policy.'
            project_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the Policy. Only administrative users can specify a tenant UUID other than
                their own. Changing this creates a new Policy.
            rule_id: '- ID of the policy rule.'
            type: '- (Required) Specifies the match content. The value can be one of the following: HOST_NAME, PATH.'
            value: |-
                - (Required) Specifies the value of the match item. For example, if a domain name is
                used for matching, value is the domain name.
        importStatements:
            - terraform import opentelekomcloud_lb_rule_v3.this 8a7a79c2-cf17-4e65-b2ae-ddc8bfcf6c74/1bb93b8b-37a4-4b50-92cc-daa4c89d4e4c
    opentelekomcloud_lb_security_policy_v3:
        subCategory: Dedicated Load Balancer (DLB)
        description: Manages a LB Security Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_security_policy_v3
        title: opentelekomcloud_lb_security_policy_v3
        examples:
            - name: policy_1
              manifest: |-
                {
                  "ciphers": [
                    "ECDHE-ECDSA-AES128-SHA",
                    "ECDHE-RSA-AES128-SHA"
                  ],
                  "description": "This is security policy",
                  "name": "elb-security-policy",
                  "protocols": [
                    "TLSv1",
                    "TLSv1.1"
                  ]
                }
            - name: policy_1
              manifest: |-
                {
                  "ciphers": [
                    "ECDHE-ECDSA-AES128-SHA",
                    "ECDHE-RSA-AES128-SHA"
                  ],
                  "name": "security-policy",
                  "protocols": [
                    "TLSv1",
                    "TLSv1.1"
                  ]
                }
              dependencies:
                opentelekomcloud_lb_certificate_v3.certificate_1: |-
                    {
                      "certificate": "${var.certificate}",
                      "name": "certificate_1",
                      "private_key": "${var.private_key}",
                      "type": "server"
                    }
                opentelekomcloud_lb_listener_v3.listener_1: |-
                    {
                      "advanced_forwarding": true,
                      "default_tls_container_ref": "${opentelekomcloud_lb_certificate_v3.certificate_1.id}",
                      "description": "some interesting description",
                      "insert_headers": [
                        {
                          "forwarded_host": true
                        }
                      ],
                      "loadbalancer_id": "${opentelekomcloud_lb_loadbalancer_v3.loadbalancer_1.id}",
                      "name": "listener_1",
                      "protocol": "HTTPS",
                      "protocol_port": 443,
                      "security_policy_id": "${opentelekomcloud_lb_security_policy_v3.policy_1.id}",
                      "sni_match_algo": "wildcard"
                    }
                opentelekomcloud_lb_loadbalancer_v3.loadbalancer_1: |-
                    {
                      "availability_zones": [
                        "${var.az}"
                      ],
                      "name": "loadbalancer_1",
                      "network_ids": [
                        "${opentelekomcloud_vpc_subnet_v1.subnet_v1.network_id}"
                      ],
                      "router_id": "${opentelekomcloud_vpc_subnet_v1.subnet_v1.vpc_id}"
                    }
                opentelekomcloud_vpc_subnet_v1.subnet_v1: |-
                    {
                      "cidr": "${var.subnet_cidr}",
                      "gateway_ip": "${var.subnet_gateway_ip}",
                      "name": "${var.subnet_name}",
                      "ntp_addresses": "10.100.0.33,10.100.0.34",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_v1.id}"
                    }
                opentelekomcloud_vpc_v1.vpc_v1: |-
                    {
                      "cidr": "${var.vpc_cidr}",
                      "name": "${var.vpc_name}"
                    }
        argumentDocs:
            ECDHE-RSA-AES256-GCM-SHA384: |-
                , ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,
                ECDHE-ECDSA-AES128-GCM-SHA256, AES128-GCM-SHA256, AES256-GCM-SHA384, ECDHE-ECDSA-AES128-SHA256,
                ECDHE-RSA-AES128-SHA256, AES128-SHA256,AES256-SHA256, ECDHE-ECDSA-AES256-SHA384, ECDHE-RSA-AES256-SHA384,
                ECDHE-ECDSA-AES128-SHA, ECDHE-RSA-AES128-SHA, ECDHE-RSA-AES256-SHA, ECDHE-ECDSA-AES256-SHA,
                AES128-SHA, AES256-SHA, CAMELLIA128-SHA, DES-CBC3-SHA, CAMELLIA256-SHA, ECDHE-RSA-CHACHA20-POLY1305,
                ECDHE-ECDSA-CHACHA20-POLY1305, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256,
                TLS_AES_128_CCM_SHA256, TLS_AES_128_CCM_8_SHA256.
            TLSv1: ', TLSv1.1, TLSv1.2, and TLSv1.3.'
            ciphers: '- (Required) Lists the cipher suites supported by the custom security policy.'
            created_at: '- The time when the custom security policy was created.'
            description: '- (Optional) Provides supplementary information about the security policy.'
            id: '- The unique ID for the policy.'
            listeners: '- The listeners that use the custom security policies.'
            name: '- (Optional) Specifies the security policy name.'
            project_id: '- The project ID of the custom security policy.'
            protocols: '- (Required) Lists the TLS protocols supported by the custom security policy.'
            updated_at: '- The time when the custom security policy was updated.'
        importStatements:
            - terraform import opentelekomcloud_lb_security_policy_v3.this 8a7a79c2-cf17-4e65-b2ae-ddc8bfcf6c74
    opentelekomcloud_lb_whitelist_v2:
        subCategory: Elastic Load Balancer (ELB)
        description: Manages a ELB Whitelist resource within OpenTelekomCloud.
        name: opentelekomcloud_lb_whitelist_v2
        title: opentelekomcloud_lb_whitelist_v2
        examples:
            - name: whitelist_1
              manifest: |-
                {
                  "enable_whitelist": true,
                  "listener_id": "d9415786-5f1a-428b-b35f-2f1523e146d2",
                  "whitelist": "192.168.11.1,192.168.0.1/24,192.168.201.18/8"
                }
        argumentDocs:
            enable_whitelist: '- (Optional) Specify whether to enable access control.'
            id: '- The unique ID for the whitelist.'
            listener_id: '- (Required) The Listener ID that the whitelist will be associated with. Changing this creates a new whitelist.'
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the whitelist.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new whitelist.
            whitelist: |-
                - (Optional) Specifies the IP addresses in the whitelist. Use commas(,) to separate
                the multiple IP addresses.
        importStatements:
            - terraform import opentelekomcloud_lb_whitelist_v2.this 8a7a79c2-cf17-4e65-b2ae-ddc8bfcf6c74
    opentelekomcloud_logtank_group_v2:
        subCategory: Log Tank Service (LTS)
        description: Manages a LTS Log Group resource within OpenTelekomCloud.
        name: opentelekomcloud_logtank_group_v2
        title: opentelekomcloud_logtank_group_v2
        examples:
            - name: log_group1
              manifest: |-
                {
                  "group_name": "log_group1",
                  "ttl_in_days": 7
                }
        argumentDocs:
            creation_time: '- Specifies the time when a log group was created.'
            group_name: |-
                - (Required) Specifies the log group name.
                Changing this parameter will create a new resource.
            id: '- The log group ID.'
            ttl_in_days: |-
                - (Required) Specifies the log retention time in days.
                The value is fixed to 7 days.
        importStatements: []
    opentelekomcloud_logtank_topic_v2:
        subCategory: Log Tank Service (LTS)
        description: Manages a LTS Log Topic resource within OpenTelekomCloud.
        name: opentelekomcloud_logtank_topic_v2
        title: opentelekomcloud_logtank_topic_v2
        examples:
            - name: test_topic
              manifest: |-
                {
                  "group_id": "${opentelekomcloud_logtank_group_v2.test_group.id}",
                  "topic_name": "test1"
                }
              references:
                group_id: opentelekomcloud_logtank_group_v2.test_group.id
              dependencies:
                opentelekomcloud_logtank_group_v2.test_group: |-
                    {
                      "topic_name": "test_group"
                    }
        argumentDocs:
            creation_time: '- Specifies the time when a log group was created.'
            group_id: |-
                - (Required) Specifies the ID of a created log group.
                Changing this parameter will create a new resource.
            id: '- The log topic ID.'
            topic_name: |-
                - (Required) Specifies the log topic name.
                Changing this parameter will create a new resource.
        importStatements: []
    opentelekomcloud_logtank_transfer_v2:
        subCategory: Log Tank Service (LTS)
        description: Manages a LTS Log Transfer resource within OpenTelekomCloud.
        name: opentelekomcloud_logtank_transfer_v2
        title: opentelekomcloud_logtank_transfer_v2
        examples:
            - name: transfer
              manifest: |-
                {
                  "dir_prefix_name": "dir",
                  "log_group_id": "${opentelekomcloud_logtank_group_v2.testacc_group.id}",
                  "log_stream_ids": [
                    "${opentelekomcloud_logtank_topic_v2.testacc_topic.id}",
                    "${opentelekomcloud_logtank_topic_v2.testacc_topic-2.id}"
                  ],
                  "obs_bucket_name": "${opentelekomcloud_obs_bucket.bucket.bucket}",
                  "period": 30,
                  "period_unit": "min",
                  "prefix_name": "prefix",
                  "storage_format": "JSON",
                  "switch_on": false
                }
              references:
                log_group_id: opentelekomcloud_logtank_group_v2.testacc_group.id
                log_stream_ids: opentelekomcloud_logtank_topic_v2.testacc_topic.id
                obs_bucket_name: opentelekomcloud_obs_bucket.bucket.bucket
              dependencies:
                opentelekomcloud_logtank_group_v2.testacc_group: |-
                    {
                      "group_name": "test_group",
                      "ttl_in_days": 7
                    }
                opentelekomcloud_logtank_topic_v2.testacc_topic: |-
                    {
                      "group_id": "${opentelekomcloud_logtank_group_v2.testacc_group.id}",
                      "topic_name": "test-topic-1"
                    }
                opentelekomcloud_logtank_topic_v2.testacc_topic-2: |-
                    {
                      "group_id": "${opentelekomcloud_logtank_group_v2.testacc_group.id}",
                      "topic_name": "test-topic-2"
                    }
                opentelekomcloud_obs_bucket.bucket: |-
                    {
                      "acl": "private",
                      "bucket": "test-bucket",
                      "storage_class": "STANDARD"
                    }
        argumentDocs:
            create_time: '- Specifies the time when a log transfer was created.'
            dir_prefix_name: '- (Optional) Indicates a custom path to store the log files.'
            id: '- The log transfer ID.'
            log_group_id: '- (Required) Specifies the ID of a log transfer.'
            log_group_name: '- The name of log group.'
            log_stream_ids: '- (Required) Specifies the log topics(streams) ids.'
            log_transfer_mode: '- The log transfer mode. cycle indicates periodical transfer.'
            log_transfer_type: '- The log transfer type.'
            obs_bucket_name: '- (Required) Specifies the name of an OBS bucket.'
            obs_encryption_enable: '- Specifies whether OBS bucket encryption is enabled.'
            obs_encryption_id: '- Specifies the KMS key ID for an OBS transfer task.'
            period: |-
                - (Required) Indicates the length of the log transfer interval.
                Possible values: 1, 2, 3, 5, 6, 12, and 30.
            period_unit: |-
                - (Required) Indicates the unit of the log transfer interval.
                Possible values: min, hour.
            prefix_name: '- (Optional) Indicates the file name prefix of the log files transferred to an OBS bucket.'
            status: |-
                - The log transfer status.
                ENABLE/DISABLE indicates that log transfer is enabled/disabled.
                EXCEPTION indicates that log transfer is abnormal.
            storage_format: '- (Required) Indicates storage format for logs. Possible values are: RAW, JSON.'
            switch_on: '- (Optional) Indicates whether the log transfer is enabled. Default: true.'
        importStatements: []
    opentelekomcloud_mrs_cluster_v1:
        subCategory: MapReduce Service (MRS)
        description: Manages a MRS Cluster resource within OpenTelekomCloud.
        name: opentelekomcloud_mrs_cluster_v1
        title: opentelekomcloud_mrs_cluster_v1
        examples:
            - name: this
              manifest: |-
                {
                  "available_zone_id": "${var.az}",
                  "billing_type": 12,
                  "bootstrap_scripts": [
                    {
                      "active_master": true,
                      "before_component_start": true,
                      "fail_action": "continue",
                      "name": "Modify os config",
                      "nodes": [
                        "master",
                        "core",
                        "task"
                      ],
                      "parameters": "param1 param2",
                      "uri": "s3a://bootstrap/modify_os_config.sh"
                    }
                  ],
                  "cluster_admin_secret": "Qwerty!123",
                  "cluster_name": "mrs-cluster",
                  "cluster_type": 0,
                  "cluster_version": "MRS 2.1.0",
                  "component_list": [
                    {
                      "component_name": "Presto"
                    },
                    {
                      "component_name": "Hadoop"
                    },
                    {
                      "component_name": "Spark"
                    },
                    {
                      "component_name": "HBase"
                    },
                    {
                      "component_name": "Hive"
                    },
                    {
                      "component_name": "Hue"
                    },
                    {
                      "component_name": "Loader"
                    },
                    {
                      "component_name": "Tez"
                    },
                    {
                      "component_name": "Flink"
                    }
                  ],
                  "core_node_num": 3,
                  "core_node_size": "c3.xlarge.4.linux.mrs",
                  "master_node_num": 2,
                  "master_node_size": "c3.xlarge.4.linux.mrs",
                  "node_public_cert_name": "%s",
                  "safe_mode": 1,
                  "subnet_id": "${var.network_id}",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume_size": 100,
                  "volume_type": "SATA",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                available_zone_id: var.az
                subnet_id: var.network_id
                vpc_id: var.vpc_id
        argumentDocs:
            add_jobs: |-
                - (Optional) You can submit a job when you create a cluster to
                save time and use MRS easily. Only one job can be added.
            arguments: |-
                - (Optional) Key parameter for program execution. The parameter
                is specified by the function of the user's program. MRS is only responsible
                for loading the parameter. The parameter contains a maximum of 2047 characters,
                excluding special characters such as ;|&>'<$, and can be empty.
            available_zone_id: |-
                - (Required) ID of an available zone. Obtain the value
                from Regions and Endpoints.
            available_zone_name: '- Name of an availability zone.'
            billing_type: '- (Required) The value is 12, indicating on-demand payment.'
            bootstrap_scripts: |-
                - (Optional) Bootstrap action scripts. For details, see
                bootstrap_scripts block below.
            bootstrap_scripts.active_master: '- (Optional) Whether the bootstrap action script runs only on active Master nodes.'
            bootstrap_scripts.before_component_start: |-
                - (Optional) Time when the bootstrap action script is executed. Currently, the script
                can be executed before and after the component is started.
            bootstrap_scripts.fail_action: |-
                - (Required) Whether to continue to execute subsequent scripts and create a cluster after the
                bootstrap action script fails to be executed. continue: Continue to execute subsequent scripts.
                errorout: Stop the action.
            bootstrap_scripts.name: '- (Required) Name of a bootstrap action script.'
            bootstrap_scripts.nodes: '- (Required) Type of node where the bootstrap action script is executed, including master, core, and task.'
            bootstrap_scripts.parameters: '- (Optional) Bootstrap action script parameters.'
            bootstrap_scripts.uri: |-
                - (Required) Path of the shell script. Set this parameter to an OBS bucket path
                or a local VM path.
            charging_start_time: '- Time when charging starts.'
            cluster_admin_secret: |-
                - (Optional) Indicates the password of the MRS Manager
                administrator. The password must contain 8 to 32 characters. Must contain
                at least two types of the following: Lowercase letters, Uppercase letters,
                Digits, Special characters ~!@#$%^&*()-_=+\|[{}];:'",<.>/? and spaces.
            cluster_id: '- Cluster ID.'
            cluster_name: |-
                - (Required) Cluster name, which is globally unique and contains
                only 1 to 64 letters, digits, hyphens (-), and underscores (_).
            cluster_state: |-
                - Cluster status. Valid values include: existing history: starting,
                running, terminated, failed, abnormal, terminating, rebooting,
                shutdown, frozen, scaling-out, scaling-in, scaling-error.
            cluster_type: |-
                - (Optional) Type of clusters 0: analysis cluster, 1: streaming
                cluster The default value is 0.
            cluster_version: |-
                - (Optional) Version of the clusters Currently, MRS 1.6.3,
                MRS 1.7.0, MRS 1.9.2, MRS 2.1.0, MRS 3.0.2 are supported. The latest
                version of MRS is used by default.
            componen_desc: '- Component description.'
            component_id: '- Component ID.'
            component_list: '- (Required) Service component list.'
            component_name: '- (Required) Component name.'
            component_version: '- Component version.'
            core_data_volume_count: |-
                - (Optional) Number of data disks of the Core node.
                Value range: 1 to 10.
            core_data_volume_size: |-
                - (Optional) Data disk size of the Core node.
                Value range: 100 GB to 32000 GB.
            core_data_volume_type: |-
                - (Optional) Data disk storage type of the Core node,
                supporting SATA, SAS and SSD. SATA: Common I/O, SAS: High I/O, SSD: Ultra-high I/O.
            core_node_num: |-
                - (Required) Number of Core nodes Value range: 1 to 500. A
                maximum of 500 Core nodes are supported by default. If more than 500 Core nodes
                are required, contact technical support engineers or invoke background APIs
                to modify the database.
            core_node_product_id: '- Product ID of a Core node.'
            core_node_size: |-
                - (Required) Instance specification of a Core node Configuration
                method of this parameter is identical to that of master_node_size.
            core_node_spec_id: '- Specification ID of a Core node.'
            create: '- Default is 30 minutes.'
            create_at: '- Cluster creation time.'
            delete: '- Default is 5 minutes.'
            deployment_id: '- Deployment ID of a cluster.'
            duration: '- Cluster subscription duration.'
            error_info: '- Error information.'
            external_alternate_ip: '- Backup external IP address.'
            external_ip: '- External IP address.'
            externalIp: '- Internal IP address.'
            fee: '- Cluster creation fee, which is automatically calculated.'
            file_action: '- (Optional) Data import and export import export'
            hadoop_version: '- Hadoop version.'
            hive_script_path: |-
                - (Optional) SQL program path. This parameter is needed
                by Spark Script and Hive Script jobs only and must meet the following requirements:
                Contains a maximum of 1023 characters, excluding special characters such as
                ;|&><'$. The address cannot be empty or full of spaces. Starts with / or s3a://.
                Ends with .sql. sql is case-insensitive.
            hql: '- (Optional) HiveQL statement.'
            input: |-
                - (Optional) Path for inputting data, which must start with / or s3a://.
                A correct OBS path is required. The parameter contains a maximum of 1023 characters,
                excluding special characters such as ;|&>'<$, and can be empty.
            instance_id: '- Instance ID.'
            jar_path: |-
                - (Required) Path of the .jar file or .sql file for program execution
                The parameter must meet the following requirements: Contains a maximum of 1023
                characters, excluding special characters such as ;|&><'$. The address cannot
                be empty or full of spaces. Starts with / or s3a://. Spark Script must end with
                .sql while MapReduce and Spark Jar must end with .jar. sql and jar are case-insensitive.
            job_log: |-
                - (Optional) Path for storing job logs that record job running status.
                This path must start with / or s3a://. A correct OBS path is required. The parameter
                contains a maximum of 1023 characters, excluding special characters such as
                ;|&>'<$, and can be empty.
            job_name: |-
                - (Required) It contains only 1 to 64 letters, digits,
                hyphens (-), and underscores (_).
            job_type: |-
                - (Required) Type. 1: MapReduce, 2: Spark, 3: Hive Script,
                4: HiveQL (not supported currently), 5: DistCp, importing and exporting data (not
                supported in this API currently), 6: Spark Script, 7: Spark SQL, submitting Spark
                SQL statements (not supported in this API currently).
            log_collection: |-
                - (Optional) Indicates whether logs are collected when cluster
                installation fails. 0: not collected. 1: collected. The default value is 0. If
                log_collection is set to 1, OBS buckets will be created to collect the MRS logs.
                These buckets will be charged.
            master_data_volume_count: |-
                - (Optional) Number of data disks of the Master node.
                The value can be set to 1 only.
            master_data_volume_size: |-
                - (Optional) Data disk size of the Master node.
                Value range: 100 GB to 32000 GB.
            master_data_volume_type: |-
                - (Optional) Data disk storage type of the Master node,
                supporting SATA, SAS and SSD. SATA: Common I/O, SAS: High I/O, SSD: Ultra-high I/O.
            master_node_ip: '- IP address of a Master node.'
            master_node_num: '- (Required) Number of Master nodes.'
            master_node_product_id: '- Product ID of a Master node.'
            master_node_size: |-
                - (Required) Best match based on several years of commissioning
                experience. MRS supports specifications of hosts, and host specifications are
                determined by CPUs, memory, and disks space. Master nodes support h1.2xlarge.linux.mrs
                h1.4xlarge.linux.mrs, h1.8xlarge.linux.mrs, s1.4xlarge.linux.mrs,
                and s1.8xlarge.linux.mrs. Core nodes of a streaming cluster support all specifications
                c2.2xlarge.linux.mrs, c2.4xlarge.linux.mrs, s1.xlarge.linux.mrs, s1.4xlarge.linux.mrs,
                s1.8xlarge.linux.mrs, d1.xlarge.linux.mrs, d1.2xlarge.linux.mrs, d1.4xlarge.linux.mrs,
                d1.8xlarge.linux.mrs, h1.2xlarge.linux.mrs, h1.4xlarge.linux.mrs and h1.8xlarge.linux.mrs.
                Task nodes support c2.2xlarge.linux.mrs, c2.4xlarge.linux.mrs, s1.xlarge.linux.mrs,
                s1.4xlarge.linux.mrs, s1.8xlarge.linux.mrs, h1.2xlarge.linux.mrs, h1.4xlarge.linux.mrs,
                and h1.8xlarge.linux.mrs.
            master_node_spec_id: '- Specification ID of a Master node.'
            node_public_cert_name: |-
                - (Required) Name of a key pair You can use a key
                to log in to the Master node in the cluster.
            order_id: '- Order ID for creating clusters.'
            output: |-
                - (Optional) Path for outputting data, which must start with / or
                s3a://. A correct OBS path is required. If the path does not exist, the system
                automatically creates it. The parameter contains a maximum of 1023 characters,
                excluding special characters such as ;|&>'<$, and can be empty.
            private_ip_first: '- Primary private IP address.'
            remark: '- Remarks of a cluster.'
            safe_mode: |-
                - (Required) MRS cluster running mode 0: common mode. The value
                indicates that the Kerberos authentication is disabled. Users can use all functions
                provided by the cluster. 1: safe mode. The value indicates that the Kerberos
                authentication is enabled. Common users cannot use the file management or job
                management functions of an MRS cluster and cannot view cluster resource usage
                or the job records of Hadoop and Spark. To use these functions, the users must
                obtain the relevant permissions from the MRS Manager administrator. The request
                has the cluster_admin_secret parameter only when safe_mode is set to 1.
            security_groups_id: '- Security group ID.'
            shutdown_cluster: |-
                - (Optional) Whether to delete the cluster after the jobs
                are complete. true: Yes, false: No.
            slave_security_groups_id: '- Standby security group ID.'
            submit_job_once_cluster_run: |-
                - (Required) Possible values are: true a job is submitted when a
                cluster is created and false a job is submitted separately.
            subnet_id: |-
                - (Required) Subnet ID Obtain the subnet ID from the management
                console as follows: Register an account and log in to the management console.
                Click Virtual Private Cloud and select Virtual Private Cloud from the left list.
                On the Virtual Private Cloud page, obtain the subnet ID from the list.
            tags: '- (Optional) Tags key/value pairs to associate with the cluster.'
            tenant_id: '- Project ID.'
            update_at: '- Cluster update time.'
            vnc: '- URI address for remote login of the elastic cloud server.'
            volume_size: |-
                - (Optional) Data disk storage space of a Core node Users can
                add disks to expand storage capacity when creating a cluster. There are the
                following scenarios: Separation of data storage and computing: Data is stored
                in the OBS system. Costs of clusters are relatively low but computing performance
                is poor. The clusters can be deleted at any time. It is recommended when data
                computing is not frequently performed. Integration of data storage and computing:
                Data is stored in the HDFS system. Costs of clusters are relatively high but
                computing performance is good. The clusters cannot be deleted in a short term.
                It is recommended when data computing is frequently performed. Value range:
                100 GB to 32000 GB.
            volume_type: |-
                - (Optional) Type of disks SATA, SAS and SSD are supported. SATA:
                common I/O, SAS: High I/O, SSD: Ultra-high I/O.
            vpc_id: |-
                - (Required) ID of the VPC where the subnet locates Obtain the VPC
                ID from the management console as follows: Register an account and log in to
                the management console. Click Virtual Private Cloud and select Virtual Private
                Cloud from the left list. On the Virtual Private Cloud page, obtain the VPC
                ID from the list.
        importStatements:
            - terraform import opentelekomcloud_mrs_cluster_v1.cluster_1 4729ab1c-7c1a-4411-a02e-93dfc361b32d
    opentelekomcloud_mrs_job_v1:
        subCategory: MapReduce Service (MRS)
        description: Manages a MRS Job resource within OpenTelekomCloud.
        name: opentelekomcloud_mrs_job_v1
        title: opentelekomcloud_mrs_job_v1
        examples:
            - name: job1
              manifest: |-
                {
                  "arguments": "wordcount",
                  "cluster_id": "ef43d2ff-1ecf-4f13-bd0c-0004c429a058",
                  "input": "s3a://wordcount/input/",
                  "jar_path": "s3a://wordcount/program/hadoop-mapreduce-examples-2.7.5.jar",
                  "job_log": "s3a://wordcount/log/",
                  "job_name": "test_mapreduce_job1",
                  "job_type": 1,
                  "output": "s3a://wordcount/output/"
                }
        argumentDocs:
            arguments: |-
                - (Optional) Key parameter for program execution. The parameter
                is specified by the function of the user's program. MRS is only responsible
                for loading the parameter. The parameter contains a maximum of 2047 characters,
                excluding special characters such as ;|&>'<$, and can be empty.
            cluster_id: '- (Required) Cluster ID'
            hive_script_path: |-
                - (Optional) SQL program path This parameter is needed
                by Spark Script and Hive Script jobs only and must meet the following requirements:
                Contains a maximum of 1023 characters, excluding special characters such as
                ;|&><'$. The address cannot be empty or full of spaces. Starts with / or s3a://.
                Ends with .sql. sql is case-insensitive.
            input: |-
                - (Optional) Path for inputting data, which must start with / or s3a://.
                A correct OBS path is required. The parameter contains a maximum of 1023 characters,
                excluding special characters such as ;|&>'<$, and can be empty.
            is_protected: |-
                - (Optional) Whether a job is protected true false The current
                version does not support this function.
            is_public: |-
                - (Optional) Whether a job is public true false The current version
                does not support this function.
            jar_path: |-
                - (Required) Path of the .jar package or .sql file for program
                execution The parameter must meet the following requirements: Contains a maximum
                of 1023 characters, excluding special characters such as ;|&><'$. The address
                cannot be empty or full of spaces. Starts with / or s3a://. Spark Script must
                end with .sql; while MapReduce and Spark Jar must end with .jar. sql and jar
                are case-insensitive.
            job_log: |-
                - (Optional) Path for storing job logs that record job running status.
                This path must start with / or s3a://. A correct OBS path is required. The parameter
                contains a maximum of 1023 characters, excluding special characters such as
                ;|&>'<$, and can be empty.
            job_name: |-
                - (Required) Job name Contains only 1 to 64 letters, digits, hyphens
                (-), and underscores (_).
            job_type: '- (Required) Job type'
            output: |-
                - (Optional) Path for outputting data, which must start with / or
                s3a://. A correct OBS path is required. If the path does not exist, the system
                automatically creates it. The parameter contains a maximum of 1023 characters,
                excluding special characters such as ;|&>'<$, and can be empty.
        importStatements: []
    opentelekomcloud_nat_dnat_rule_v2:
        subCategory: NAT
        description: Manages a NAT DNAT Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_nat_dnat_rule_v2
        title: opentelekomcloud_nat_dnat_rule_v2
        examples:
            - name: dnat_1
              manifest: |-
                {
                  "external_service_port": 242,
                  "floating_ip_id": "${var.floating_ip_id}",
                  "internal_service_port": 993,
                  "nat_gateway_id": "${var.nat_gw_id}",
                  "private_ip": "${var.private_id}",
                  "protocol": "tcp"
                }
              references:
                floating_ip_id: var.floating_ip_id
                nat_gateway_id: var.nat_gw_id
                private_ip: var.private_id
        argumentDocs:
            created_at: '- DNAT rule creation time.'
            external_service_port: |-
                - (Required) Specifies port used by ECSs or
                BMSs to provide services for external systems. Changing this creates a new DNAT rule.
            floating_ip_address: '- The actual floating IP address.'
            floating_ip_id: |-
                - (Required) Specifies the ID of the floating IP address.
                Changing this creates a new resource.
            internal_service_port: |-
                - (Required) Specifies port used by ECSs or BMSs
                to provide services for external systems. Changing this creates a new resource.
            nat_gateway_id: |-
                - (Required) ID of the NAT gateway this DNAT rule belongs to.
                Changing this creates a new DNAT rule.
            port_id: |-
                - (Optional) Specifies the port ID of an ECS or a BMS.
                This parameter and private_ip are alternative. Changing this creates a
                new DNAT rule.
            private_ip: |-
                - (Optional) Specifies the private IP address of a
                user, for example, the IP address of a VPC for dedicated connection.
                This parameter and port_id are alternative. Changing this creates a new DNAT rule.
            protocol: |-
                - (Required) Specifies the protocol type. Currently,
                tcp, udp, and any are supported. Changing this creates a new DNAT rule.
            status: '- DNAT rule status.'
        importStatements: []
    opentelekomcloud_nat_gateway_v2:
        subCategory: NAT
        description: Manages a NAT Gateway resource within OpenTelekomCloud.
        name: opentelekomcloud_nat_gateway_v2
        title: opentelekomcloud_nat_gateway_v2
        examples:
            - name: this
              manifest: |-
                {
                  "description": "NAT GW created by terraform",
                  "internal_network_id": "${var.internal_network_id}",
                  "name": "tf_nat",
                  "router_id": "${var.router_id}",
                  "spec": "0",
                  "tags": {
                    "muh": "kuh"
                  }
                }
              references:
                internal_network_id: var.internal_network_id
                router_id: var.router_id
        argumentDocs:
            description: '- (Optional) The description of the NAT Gateway.'
            internal_network_id: |-
                - (Required) ID of the network this NAT Gateway connects to.
                Changing this creates a new NAT Gateway.
            name: '- (Required) The name of the NAT Gateway.'
            router_id: |-
                - (Required) ID of the router (or VPC) this NAT Gateway belongs to. Changing
                this creates a new NAT Gateway.
            spec: '- (Required) The specification of the NAT Gateway, valid values are "0","1", "2", "3", "4".'
            tags: '- (Optional) Tags key/value pairs to associate with the NAT Gateway.'
            tenant_id: |-
                - (Optional) The target tenant ID in which to allocate the NAT
                Gateway. Changing this creates a new NAT Gateway.
        importStatements: []
    opentelekomcloud_nat_snat_rule_v2:
        subCategory: NAT
        description: Manages a NAT SNAT Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_nat_snat_rule_v2
        title: opentelekomcloud_nat_snat_rule_v2
        examples:
            - name: snat_1
              manifest: |-
                {
                  "cidr": "192.168.0.0/24",
                  "floating_ip_id": "${opentelekomcloud_networking_floatingip_v2.fip_1.id}",
                  "nat_gateway_id": "${opentelekomcloud_nat_gateway_v2.nat_1.id}",
                  "source_type": 0
                }
              references:
                floating_ip_id: opentelekomcloud_networking_floatingip_v2.fip_1.id
                nat_gateway_id: opentelekomcloud_nat_gateway_v2.nat_1.id
              dependencies:
                opentelekomcloud_nat_gateway_v2.nat_1: |-
                    {
                      "description": "test for terraform",
                      "internal_network_id": "${var.network_id}",
                      "name": "nat_1",
                      "router_id": "${var.vpc_id}",
                      "spec": "1"
                    }
                opentelekomcloud_networking_floatingip_v2.fip_1: '{}'
        argumentDocs:
            cidr: |-
                - (Optional) Specifies CIDR, which can be in the format of a network segment or
                a host IP address. This parameter and network_id are alternative. If the value of
                source_type is 0, the CIDR block must be a subset of the VPC subnet CIDR block. If
                the value of source_type is 1, the CIDR block must be a CIDR block of Direct Connect
                and cannot conflict with the VPC CIDR blocks. Changing this creates a new snat rule.
            floating_ip_id: |-
                - (Required) ID of the floating ip this snat rule connects to.
                Changing this creates a new snat rule.
            nat_gateway_id: |-
                - (Required) ID of the nat gateway this snat rule belongs to.
                Changing this creates a new snat rule.
            network_id: |-
                - (Optional) ID of the network this snat rule connects to. This parameter
                and cidr are alternative. Changing this creates a new snat rule.
            source_type: |-
                - (Optional) 0: Either network_id or cidr can be specified in a VPC. 1:
                Only cidr can be specified over a dedicated network. Changing this creates a new snat rule.
        importStatements: []
    opentelekomcloud_networking_floatingip_associate_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Floating IP Association resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_floatingip_associate_v2
        title: opentelekomcloud_networking_floatingip_associate_v2
        examples:
            - name: fip_1
              manifest: |-
                {
                  "floating_ip": "1.2.3.4",
                  "port_id": "${opentelekomcloud_networking_port_v2.port_1.id}"
                }
              references:
                port_id: opentelekomcloud_networking_port_v2.port_1.id
              dependencies:
                opentelekomcloud_networking_port_v2.port_1: |-
                    {
                      "network_id": "a5bbd213-e1d3-49b6-aed1-9df60ea94b9a"
                    }
            - name: this
              manifest: |-
                {
                  "floating_ip": "${opentelekomcloud_networking_floatingip_v2.this.address}",
                  "port_id": "${opentelekomcloud_compute_instance_v2.this.network.0.port}"
                }
              references:
                floating_ip: opentelekomcloud_networking_floatingip_v2.this.address
                port_id: opentelekomcloud_compute_instance_v2.this.network.0.port
              dependencies:
                opentelekomcloud_compute_instance_v2.this: |-
                    {
                      "flavor_id": "s2.large.4",
                      "image_id": "${var.image_id}",
                      "key_pair": "${var.keypair}",
                      "name": "example-instance",
                      "network": [
                        {
                          "name": "${var.network_name}"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                opentelekomcloud_networking_floatingip_v2.this: |-
                    {
                      "pool": "admin_external_net"
                    }
        argumentDocs:
            floating_ip: '- (Required) IP Address of an existing floating IP.'
            port_id: |-
                - (Required) ID of an existing port with at least one IP address to
                associate with this floating IP.
        importStatements: []
    opentelekomcloud_networking_floatingip_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Floating IP resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_floatingip_v2
        title: opentelekomcloud_networking_floatingip_v2
        examples:
            - name: floatip_1
              manifest: '{}'
        argumentDocs:
            address: '- The actual floating IP address itself.'
            fixed_ip: |-
                - Fixed IP of the port to associate with this floating IP. Required if
                the port has multiple fixed IPs.
            pool: |-
                - (Optional) The name of the pool from which to obtain the floating
                IP. Default value is admin_external_net. Changing this creates a new floating IP.
            port_id: |-
                - (Optional) ID of an existing port with at least one IP address to
                associate with this floating IP.
            tenant_id: |-
                - (Optional) The target tenant ID in which to allocate the floating
                IP, if you specify this together with a port_id, make sure the target port
                belongs to the same tenant. Changing this creates a new floating IP (which
                may or may not have a different address).
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_networking_network_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Network resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_network_v2
        title: opentelekomcloud_networking_network_v2
        examples:
            - name: network_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "name": "network_1"
                }
              dependencies:
                opentelekomcloud_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "network": [
                        {
                          "port": "${opentelekomcloud_networking_port_v2.port_1.id}"
                        }
                      ],
                      "security_groups": [
                        "${opentelekomcloud_compute_secgroup_v2.secgroup_1.name}"
                      ]
                    }
                opentelekomcloud_compute_secgroup_v2.secgroup_1: |-
                    {
                      "description": "a security group",
                      "name": "secgroup_1",
                      "rule": [
                        {
                          "cidr": "0.0.0.0/0",
                          "from_port": 22,
                          "ip_protocol": "tcp",
                          "to_port": 22
                        }
                      ]
                    }
                opentelekomcloud_networking_port_v2.port_1: |-
                    {
                      "admin_state_up": "true",
                      "fixed_ip": [
                        {
                          "ip_address": "192.168.199.10",
                          "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                        }
                      ],
                      "name": "port_1",
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}",
                      "security_group_ids": [
                        "${opentelekomcloud_compute_secgroup_v2.secgroup_1.id}"
                      ]
                    }
                opentelekomcloud_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the network.
                Acceptable values are "true" and "false". Changing this value updates the
                state of the existing network.
            name: |-
                - (Optional) The name of the network. Changing this updates the name of
                the existing network.
            segments: '- (Optional) An array of one or more provider segment objects.'
            segments.network_type: '- The type of physical network.'
            segments.physical_network: '- The physical network where this network is implemented.'
            segments.segmentation_id: '- An isolated segment on the physical network.'
            shared: |-
                - (Optional)  Specifies whether the network resource can be accessed
                by any tenant or not. Changing this updates the sharing capabilities of the
                existing network. Shared SNAT only available in eu-de region.
            tenant_id: |-
                - (Optional) The owner of the network. Required if admin wants to
                create a network for another tenant. Changing this creates a new network.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_networking_port_secgroup_associate_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Port's Security Groups resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_port_secgroup_associate_v2
        title: opentelekomcloud_networking_port_secgroup_associate_v2
        examples:
            - name: port_1
              manifest: |-
                {
                  "port_id": "${data.opentelekomcloud_networking_port_v2.system_port.id}",
                  "security_group_ids": [
                    "${data.opentelekomcloud_networking_secgroup_v2.secgroup.id}"
                  ]
                }
              references:
                port_id: data.opentelekomcloud_networking_port_v2.system_port.id
                security_group_ids: data.opentelekomcloud_networking_secgroup_v2.secgroup.id
        argumentDocs:
            all_security_group_ids: |-
                - The collection of Security Group IDs on the port
                which have been explicitly and implicitly added.
            force: |-
                - (Optional) Whether to replace or append the list of security
                groups, specified in the security_group_ids. Defaults to false.
            port_id: '- (Required) An UUID of the port to apply security groups to.'
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to manage a port. If omitted, the
                region argument of the provider is used. Changing this creates a new
                resource.
            security_group_ids: |-
                - (Required) A list of security group IDs to apply to
                the port. The security groups must be specified by ID and not name (as
                opposed to how they are configured with the Compute Instance).
        importStatements: []
    opentelekomcloud_networking_port_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Port resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_port_v2
        title: opentelekomcloud_networking_port_v2
        examples:
            - name: port_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "fixed_ip": [
                    {
                      "ip_address": "192.168.199.23",
                      "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                    }
                  ],
                  "name": "port_1",
                  "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                }
              references:
                fixed_ip.subnet_id: opentelekomcloud_networking_subnet_v2.subnet_1.id
                network_id: opentelekomcloud_networking_network_v2.network_1.id
              dependencies:
                opentelekomcloud_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                opentelekomcloud_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional, Bool) Administrative up/down status for the port
                (must be "true" or "false" if provided). Changing this updates the
                admin_state_up of an existing port.
            all fixed_ips: '- The collection of Fixed IP addresses on the port in the order returned by the Network v2 API.'
            allowed_address_pairs: |-
                - (Optional, Map) An IP/MAC Address pair of additional IP
                addresses that can be active on this port. The structure is described below.
                The allowed_address_pairs block supports:
            allowed_address_pairs.ip_address: '- (Required, String) The additional IP address.'
            allowed_address_pairs.mac_address: '- (Optional, String) The additional MAC address.'
            device_id: |-
                - (Optional, String, ForceNew) The ID of the device attached to the port. Changing this
                creates a new port.
            device_owner: |-
                - (Optional. String, ForceNew) The device owner of the Port. Changing this creates
                a new port.
            extra_dhcp_option: |-
                - (Optional, Map) Specifies the extended DHCP option. This is an extended attribute.
                The extra_dhcp_option block supports:
            extra_dhcp_option.name: '- (Required, String) Specifies the option name.'
            extra_dhcp_option.value: '- (Required, String) Specifies the option value.'
            fixed_ip: |-
                - (Optional, List) An array of desired IPs for this port. The structure is
                described below. A single fixed_ip entry is allowed for a port.
                The fixed_ip block supports:
            fixed_ip.ip_address: |-
                - (Optional, String) IP address desired in the subnet for this port. If
                you don't specify ip_address, an available IP address from the specified
                subnet will be allocated to this port.
            fixed_ip.subnet_id: |-
                - (Required, String) Subnet in which to allocate IP address for
                this port.
            mac_address: |-
                - (Optional, String, ForceNew) Specify a specific MAC address for the port. Changing
                this creates a new port.
            name: |-
                - (Optional, String) A unique name for the port. Changing this
                updates the name of an existing port.
            network_id: |-
                - (Required, String, ForceNew) The ID of the network to attach the port to. Changing
                this creates a new port.
            no_security_groups: |-
                - (Optional, Bool) If set to true, then no security groups
                are applied to the port. If set to false and no security_group_ids are specified,
                then the port will yield to the default behavior of the Networking service,
                which is to usually apply the "default" security group.
            port_security_enabled: |-
                - (Optional, Bool) Whether to explicitly enable or disable
                port security on the port. Port Security is usually enabled by default, so
                omitting argument will usually result in a value of true. Setting this
                explicitly to false will disable port security. In order to disable port
                security, the port must not have any security groups. Valid values are true
                and false.
            security_group_ids: |-
                - (Optional, List) A list of security group IDs to apply to the
                port. The security groups must be specified by ID and not name (as opposed
                to how they are configured with the Compute Instance).
            tenant_id: |-
                - (Optional, String, ForceNew) The owner of the Port. Required if admin wants
                to create a port for another tenant. Changing this creates a new port.
            value_specs: '- (Optional, Map) Map of additional options.'
        importStatements: []
    opentelekomcloud_networking_router_interface_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Router Interface resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_router_interface_v2
        title: opentelekomcloud_networking_router_interface_v2
        examples:
            - name: router_interface_1
              manifest: |-
                {
                  "router_id": "${opentelekomcloud_networking_router_v2.router_1.id}",
                  "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                }
              references:
                router_id: opentelekomcloud_networking_router_v2.router_1.id
                subnet_id: opentelekomcloud_networking_subnet_v2.subnet_1.id
              dependencies:
                opentelekomcloud_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "tf_test_network"
                    }
                opentelekomcloud_networking_router_v2.router_1: |-
                    {
                      "external_gateway": "f67f0d72-0ddf-11e4-9d95-e1f29f417e2f",
                      "name": "my_router"
                    }
                opentelekomcloud_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            port_id: |-
                - ID of the port this interface connects to. Changing
                this creates a new router interface.
            router_id: |-
                - (Required) ID of the router this interface belongs to. Changing
                this creates a new router interface.
            subnet_id: |-
                - ID of the subnet this interface connects to. Changing
                this creates a new router interface.
        importStatements: []
    opentelekomcloud_networking_router_route_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Router Route resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_router_route_v2
        title: opentelekomcloud_networking_router_route_v2
        examples:
            - name: router_route_1
              manifest: |-
                {
                  "depends_on": [
                    "opentelekomcloud_networking_router_interface_v2.int_1"
                  ],
                  "destination_cidr": "10.0.1.0/24",
                  "next_hop": "192.168.199.254",
                  "router_id": "${opentelekomcloud_networking_router_v2.router_1.id}"
                }
              references:
                router_id: opentelekomcloud_networking_router_v2.router_1.id
              dependencies:
                opentelekomcloud_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                opentelekomcloud_networking_router_interface_v2.int_1: |-
                    {
                      "router_id": "${opentelekomcloud_networking_router_v2.router_1.id}",
                      "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                    }
                opentelekomcloud_networking_router_v2.router_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "router_1"
                    }
                opentelekomcloud_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            destination_cidr: |-
                - (Required) CIDR block to match on the packet’s destination IP. Changing
                this creates a new routing entry.
            next_hop: |-
                - (Required) IP address of the next hop gateway.  Changing
                this creates a new routing entry.
            router_id: |-
                - (Required) ID of the router this routing entry belongs to. Changing
                this creates a new routing entry.
        importStatements: []
    opentelekomcloud_networking_router_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Router resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_router_v2
        title: opentelekomcloud_networking_router_v2
        examples:
            - name: router_1
              manifest: |-
                {
                  "external_gateway": "f67f0d72-0ddf-11e4-9d95-e1f29f417e2f",
                  "name": "my_router"
                }
            - name: router_1
              manifest: |-
                {
                  "admin_state_up": true,
                  "distributed": false,
                  "enable_snat": true,
                  "external_gateway": "${data.opentelekomcloud_networking_network_v2.admin_external_net.id}",
                  "name": "my_router"
                }
              references:
                external_gateway: data.opentelekomcloud_networking_network_v2.admin_external_net.id
        argumentDocs:
            admin_state_up: |-
                - (Optional) Administrative up/down status for the router
                (must be true or false if provided). Changing this updates the
                admin_state_up of an existing router.
            distributed: |-
                - (Optional) Indicates whether or not to create a
                distributed router. The default policy setting in Neutron restricts
                usage of this property to administrative users only.
            enable_snat: |-
                - (Optional) Enable Source NAT for the router. Valid values are
                true or false. An external_gateway has to be set in order to set this
                property. Changing this updates the enable_snat of the router.
            external_gateway: |-
                - (Optional) The network UUID of an external gateway for
                the router. A router with an external gateway is required if any compute
                instances or load balancers will be using floating IPs. Changing this
                updates the external_gateway of an existing router.
            id: '- ID of the router.'
            name: |-
                - (Optional) A unique name for the router. Changing this
                updates the name of an existing router.
            tenant_id: |-
                - (Optional) The owner of the floating IP. Required if admin wants
                to create a router for another tenant. Changing this creates a new router.
            value_specs: '- (Optional) Map of additional driver-specific options.'
        importStatements: []
    opentelekomcloud_networking_secgroup_rule_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Security Group Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_secgroup_rule_v2
        title: opentelekomcloud_networking_secgroup_rule_v2
        examples:
            - name: secgroup_rule_1
              manifest: |-
                {
                  "direction": "ingress",
                  "ethertype": "IPv4",
                  "port_range_max": 22,
                  "port_range_min": 22,
                  "protocol": "tcp",
                  "remote_ip_prefix": "0.0.0.0/0",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}"
                }
              references:
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "My neutron security group",
                      "name": "secgroup_1"
                    }
            - name: secgroup_rule_icmp_echo_reply
              manifest: |-
                {
                  "direction": "ingress",
                  "ethertype": "IPv4",
                  "port_range_max": 0,
                  "port_range_min": 0,
                  "protocol": "icmp",
                  "remote_ip_prefix": "0.0.0.0/0",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}"
                }
              references:
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "My neutron security group",
                      "name": "secgroup_1"
                    }
            - name: secgroup_rule_icmp_any
              manifest: |-
                {
                  "direction": "ingress",
                  "ethertype": "IPv4",
                  "port_range_max": 255,
                  "port_range_min": 0,
                  "protocol": "icmp",
                  "remote_ip_prefix": "0.0.0.0/0",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}"
                }
              references:
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "My neutron security group",
                      "name": "secgroup_1"
                    }
            - name: secgroup_rule_v6
              manifest: |-
                {
                  "direction": "ingress",
                  "ethertype": "IPv6",
                  "port_range_max": 8080,
                  "port_range_min": 8080,
                  "protocol": "tcp",
                  "remote_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup_2.id}"
                }
              references:
                remote_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_1.id
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup_2.id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "My neutron security group",
                      "name": "secgroup_1"
                    }
        argumentDocs:
            description: '- (Optional) A description of the rule. Changing this creates a new security group rule.'
            direction: |-
                - (Required) The direction of the rule, valid values are ingress
                or egress. Changing this creates a new security group rule.
            ethertype: |-
                - (Required) The layer 3 protocol type, valid values are IPv4
                or IPv6. Changing this creates a new security group rule.
            port_range_max: = 255
            port_range_min: = 0
            protocol: |-
                - (Optional) The layer 4 protocol type, valid values are following. Changing this creates a new security group rule.
                This is required if you want to specify a port range.
            remote_group_id: |-
                - (Optional) The remote group id, the value needs to be an
                OpenTelekomCloud ID of a security group in the same tenant. Changing this creates
                a new security group rule.
            remote_ip_prefix: |-
                - (Optional) The remote CIDR, the value needs to be a valid
                CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
            security_group_id: |-
                - (Required) The security group id the rule should belong
                to, the value needs to be an OpenTelekomCloud ID of a security group in the same
                tenant. Changing this creates a new security group rule.
            tcp: |-
                , udp, icmp, ah, dccp, egp, esp, gre, igmp, ipv6-encap,
                ipv6-frag, ipv6-icmp, ipv6-nonxt, ipv6-opts, ipv6-route, ospf,
                pgm, rsvp, sctp, udplite, vrrp
            tenant_id: |-
                - (Optional) The owner of the security group. Required if admin
                wants to create a port for another tenant. Changing this creates a new
                security group rule.
        importStatements: []
    opentelekomcloud_networking_secgroup_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Security Group resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_secgroup_v2
        title: opentelekomcloud_networking_secgroup_v2
        examples:
            - name: secgroup_1
              manifest: |-
                {
                  "description": "My neutron security group",
                  "name": "secgroup_1"
                }
        argumentDocs:
            delete_default_rules: |-
                - (Optional) Whether or not to delete the default
                egress security rules. This is false by default.
            description: '- (Optional) A unique name for the security group.'
            name: '- (Required) A unique name for the security group.'
            tenant_id: |-
                - (Optional) The owner of the security group. Required if admin
                wants to create a port for another tenant. Changing this creates a new
                security group.
        importStatements: []
    opentelekomcloud_networking_subnet_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Subnet resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_subnet_v2
        title: opentelekomcloud_networking_subnet_v2
        examples:
            - name: subnet_1
              manifest: |-
                {
                  "cidr": "192.168.199.0/24",
                  "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                }
              references:
                network_id: opentelekomcloud_networking_network_v2.network_1.id
              dependencies:
                opentelekomcloud_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "tf_test_network"
                    }
        argumentDocs:
            allocation_pools: |-
                - (Optional) An array of sub-ranges of CIDR available for
                dynamic allocation to ports. The allocation_pool object structure is
                documented below. Changing this creates a new subnet.
            allocation_pools.end: '- (Required) The ending address.'
            allocation_pools.start: '- (Required) The starting address.'
            cidr: |-
                - (Required) CIDR representing IP range for this subnet, based on IP
                version. Changing this creates a new subnet.
            dns_nameservers: |-
                - (Optional) An array of DNS name server names used by hosts
                in this subnet. Changing this updates the DNS name servers for the existing
                subnet. Default value is ["100.125.4.25", "100.125.129.199"]
            enable_dhcp: |-
                - (Optional) The administrative state of the network.
                Acceptable values are "true" and "false". Changing this value enables or
                disables the DHCP capabilities of the existing subnet. Defaults to true.
            gateway_ip: |-
                - (Optional)  Default gateway used by devices in this subnet.
                Leaving this blank and not setting no_gateway will cause a default
                gateway of .1 to be used. Changing this updates the gateway IP of the
                existing subnet.
            host_routes: |-
                - (Optional) An array of routes that should be used by devices
                with IPs from this subnet (not including local subnet route). The host_route
                object structure is documented below. Changing this updates the host routes
                for the existing subnet.
            host_routes.destination_cidr: '- (Required) The destination CIDR.'
            host_routes.next_hop: '- (Required) The next hop in the route.'
            ip_version: |-
                - (Optional) IP version, either 4 (default) or 6. Changing this creates a
                new subnet.
            name: |-
                - (Optional) The name of the subnet. Changing this updates the name of
                the existing subnet.
            network_id: |-
                - (Required) The UUID of the parent network. Changing this
                creates a new subnet.
            no_gateway: |-
                - (Optional) Do not set a gateway IP on this subnet. Changing
                this removes or adds a default gateway IP of the existing subnet.
            tenant_id: |-
                - (Optional) The owner of the subnet. Required if admin wants to
                create a subnet for another tenant. Changing this creates a new subnet.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_networking_vip_associate_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC VIP Associate resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_vip_associate_v2
        title: opentelekomcloud_networking_vip_associate_v2
        examples:
            - name: vip_associate_1
              manifest: |-
                {
                  "port_ids": [
                    "${opentelekomcloud_networking_port_v2.port_1.id}",
                    "${opentelekomcloud_networking_port_v2.port_2.id}"
                  ],
                  "vip_id": "${opentelekomcloud_networking_vip_v2.vip_1.id}"
                }
              references:
                port_ids: opentelekomcloud_networking_port_v2.port_1.id
                vip_id: opentelekomcloud_networking_vip_v2.vip_1.id
              dependencies:
                opentelekomcloud_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "network": [
                        {
                          "port": "${opentelekomcloud_networking_port_v2.port_1.id}"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                opentelekomcloud_compute_instance_v2.instance_2: |-
                    {
                      "name": "instance_2",
                      "network": [
                        {
                          "port": "${opentelekomcloud_networking_port_v2.port_1.id}"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                opentelekomcloud_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                opentelekomcloud_networking_port_v2.port_1: |-
                    {
                      "admin_state_up": "true",
                      "fixed_ip": [
                        {
                          "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                        }
                      ],
                      "name": "port_1",
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
                opentelekomcloud_networking_port_v2.port_2: |-
                    {
                      "admin_state_up": "true",
                      "fixed_ip": [
                        {
                          "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                        }
                      ],
                      "name": "port_2",
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
                opentelekomcloud_networking_router_interface_v2.router_interface_1: |-
                    {
                      "router_id": "${opentelekomcloud_networking_router_v2.router_1.id}",
                      "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                    }
                opentelekomcloud_networking_router_v2.router_1: |-
                    {
                      "external_gateway": "0a2228f2-7f8a-45f1-8e09-9039e1d09975",
                      "name": "router_1"
                    }
                opentelekomcloud_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
                opentelekomcloud_networking_vip_v2.vip_1: |-
                    {
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}",
                      "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                    }
            - name: vip_associate_1
              manifest: |-
                {
                  "port_ids": [
                    "${opentelekomcloud_networking_port_v2.port_1.id}",
                    "${opentelekomcloud_networking_port_v2.port_2.id}"
                  ],
                  "vip_id": "${opentelekomcloud_networking_vip_v2.vip_1.id}"
                }
              references:
                port_ids: opentelekomcloud_networking_port_v2.port_1.id
                vip_id: opentelekomcloud_networking_vip_v2.vip_1.id
              dependencies:
                opentelekomcloud_compute_instance_v2.instance_1: |-
                    {
                      "image_id": "${data.opentelekomcloud_images_image_v2.latest_image.id}",
                      "name": "instance_vip_ass_1",
                      "network": [
                        {
                          "port": "${opentelekomcloud_networking_port_v2.port_1.id}"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                opentelekomcloud_compute_instance_v2.instance_2: |-
                    {
                      "image_id": "${data.opentelekomcloud_images_image_v2.latest_image.id}",
                      "name": "instance_vip_ass_2",
                      "network": [
                        {
                          "port": "${opentelekomcloud_networking_port_v2.port_2.id}"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                opentelekomcloud_networking_floatingip_associate_v2.vip_eip_associate_1: |-
                    {
                      "floating_ip": "${opentelekomcloud_vpc_eip_v1.vip_eip_1.publicip.0.ip_address}",
                      "port_id": "${opentelekomcloud_networking_vip_v2.vip_1.id}"
                    }
                opentelekomcloud_networking_port_v2.port_1: |-
                    {
                      "admin_state_up": "true",
                      "fixed_ip": [
                        {
                          "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.subnet_id}"
                        }
                      ],
                      "name": "port_1",
                      "network_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}"
                    }
                opentelekomcloud_networking_port_v2.port_2: |-
                    {
                      "admin_state_up": "true",
                      "fixed_ip": [
                        {
                          "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.subnet_id}"
                        }
                      ],
                      "name": "port_2",
                      "network_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}"
                    }
                opentelekomcloud_networking_vip_v2.vip_1: |-
                    {
                      "network_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}",
                      "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.subnet_id}"
                    }
                opentelekomcloud_vpc_eip_v1.vip_eip_1: |-
                    {
                      "bandwidth": [
                        {
                          "charge_mode": "traffic",
                          "name": "eip-bandwidth-vip",
                          "share_type": "PER",
                          "size": 10
                        }
                      ],
                      "publicip": [
                        {
                          "name": "eip-vip",
                          "type": "5_bgp"
                        }
                      ]
                    }
        argumentDocs:
            port_ids: |-
                - (Required) An array of one or more IDs of the ports to attach the vip to.
                Changing this creates a new vip associate.
            vip_id: |-
                - (Required) The ID of vip to attach the port to.
                Changing this creates a new vip associate.
            vip_ip_address: '- The IP address in the subnet for this vip.'
            vip_subnet_id: '- The ID of the subnet this vip connects to.'
        importStatements: []
    opentelekomcloud_networking_vip_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC VIP resource within OpenTelekomCloud.
        name: opentelekomcloud_networking_vip_v2
        title: opentelekomcloud_networking_vip_v2
        examples:
            - name: vip_1
              manifest: |-
                {
                  "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}",
                  "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                }
              references:
                network_id: opentelekomcloud_networking_network_v2.network_1.id
                subnet_id: opentelekomcloud_networking_subnet_v2.subnet_1.id
              dependencies:
                opentelekomcloud_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                opentelekomcloud_networking_router_interface_v2.router_interface_1: |-
                    {
                      "router_id": "${opentelekomcloud_networking_router_v2.router_1.id}",
                      "subnet_id": "${opentelekomcloud_networking_subnet_v2.subnet_1.id}"
                    }
                opentelekomcloud_networking_router_v2.router_1: |-
                    {
                      "external_gateway": "0a2228f2-7f8a-45f1-8e09-9039e1d09975",
                      "name": "router_1"
                    }
                opentelekomcloud_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${opentelekomcloud_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            device_owner: '- The device owner of the vip.'
            id: '- The ID of the vip.'
            ip_address: |-
                - (Optional) IP address desired in the subnet for this vip.
                If you don't specify ip_address, an available IP address from
                the specified subnet will be allocated to this vip.
            name: '- (Optional) A unique name for the vip.'
            network_id: |-
                - (Required) The ID of the network to attach the vip to.
                Changing this creates a new vip.
            status: '- The status of vip.'
            subnet_id: |-
                - (Required) Subnet in which to allocate IP address for this vip.
                Changing this creates a new vip.
            tenant_id: '- The tenant ID of the vip.'
        importStatements: []
    opentelekomcloud_obs_bucket:
        subCategory: Object Storage Service (OBS)
        description: Manages a OBS Bucket resource within OpenTelekomCloud.
        name: opentelekomcloud_obs_bucket
        title: opentelekomcloud_obs_bucket
        examples:
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "tags": {
                    "Env": "Test",
                    "foo": "bar"
                  }
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-tf-test-bucket",
                  "parallel_fs": true
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "versioning": true
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "versioning": false
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-tf-test-bucket",
                  "versioning": true,
                  "worm_policy": [
                    {
                      "years": 1
                    }
                  ]
                }
            - name: log_bucket
              manifest: |-
                {
                  "acl": "log-delivery-write",
                  "bucket": "my-tf-log-bucket"
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "logging": [
                    {
                      "target_bucket": "${opentelekomcloud_obs_bucket.log_bucket.id}",
                      "target_prefix": "log/"
                    }
                  ]
                }
              references:
                logging.target_bucket: opentelekomcloud_obs_bucket.log_bucket.id
            - name: b
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "obs-website-test.hashicorp.com",
                  "website": [
                    {
                      "error_document": "error.html",
                      "index_document": "index.html",
                      "routing_rules": "[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"documents/\"\n    }\n}]\n"
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "obs-website-test.hashicorp.com",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "PUT",
                        "POST"
                      ],
                      "allowed_origins": [
                        "https://obs-website-test.hashicorp.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    }
                  ]
                }
            - name: bucket
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "my-bucket",
                  "server_side_encryption": [
                    {
                      "algorithm": "kms",
                      "kms_key_id": "${var.kms_master_key_id}"
                    }
                  ],
                  "storage_class": "WARM"
                }
              references:
                server_side_encryption.kms_key_id: var.kms_master_key_id
            - name: this
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "${var.bucket_name}",
                  "server_side_encryption": [
                    {
                      "algorithm": "kms",
                      "kms_key_id": "${opentelekomcloud_kms_key_v1.this.id}"
                    }
                  ]
                }
              references:
                bucket: var.bucket_name
                server_side_encryption.kms_key_id: opentelekomcloud_kms_key_v1.this.id
              dependencies:
                opentelekomcloud_identity_group_v3.this: |-
                    {
                      "description": "${var.user_group_desc}",
                      "name": "${var.user_group_name}"
                    }
                opentelekomcloud_identity_role_assignment_v3.this_kms: |-
                    {
                      "all_projects": true,
                      "domain_id": "${var.domain_id}",
                      "group_id": "${opentelekomcloud_identity_group_v3.this.id}",
                      "role_id": "${opentelekomcloud_identity_role_v3.this_kms.id}"
                    }
                opentelekomcloud_identity_role_assignment_v3.this_obs: |-
                    {
                      "all_projects": true,
                      "domain_id": "${var.domain_id}",
                      "group_id": "${opentelekomcloud_identity_group_v3.this.id}",
                      "role_id": "${opentelekomcloud_identity_role_v3.this_obs.id}"
                    }
                opentelekomcloud_identity_role_v3.this_kms: |-
                    {
                      "description": "${var.role_kms_desc}",
                      "display_layer": "project",
                      "display_name": "${var.role_kms_display_name}",
                      "statement": [
                        {
                          "action": [
                            "kms:cmk:list",
                            "kms:cmk:get"
                          ],
                          "effect": "Allow"
                        },
                        {
                          "action": [
                            "kms:cmk:generate",
                            "kms:dek:create",
                            "kms:cmk:crypto",
                            "kms:dek:crypto"
                          ],
                          "effect": "Allow",
                          "resource": [
                            "KMS:*:*:KeyId:${opentelekomcloud_kms_key_v1.this.id}"
                          ]
                        }
                      ]
                    }
                opentelekomcloud_identity_role_v3.this_obs: |-
                    {
                      "description": "${var.role_obs_desc}",
                      "display_layer": "domain",
                      "display_name": "${var.role_obs_display_name}",
                      "statement": [
                        {
                          "action": [
                            "obs:object:DeleteObject",
                            "obs:object:PutObject",
                            "obs:object:GetObject",
                            "obs:bucket:ListBucket",
                            "obs:bucket:GetEncryptionConfiguration"
                          ],
                          "effect": "Allow",
                          "resource": [
                            "OBS:*:*:bucket:${opentelekomcloud_obs_bucket.this.id}",
                            "OBS:*:*:object:*"
                          ]
                        }
                      ]
                    }
                opentelekomcloud_identity_user_v3.this: |-
                    {
                      "access_type": "programmatic",
                      "description": "${var.user_desc}",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${pwd_reset}"
                          ]
                        }
                      ],
                      "name": "${var.user_name}"
                    }
                opentelekomcloud_kms_key_v1.this: |-
                    {
                      "is_enabled": true,
                      "key_alias": "${var.kms_alias}",
                      "key_description": "${var.kms_desc}",
                      "pending_days": "7",
                      "realm": "${var.region}"
                    }
            - name: bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 365
                        }
                      ],
                      "name": "log",
                      "prefix": "log/",
                      "transition": [
                        {
                          "days": 60,
                          "storage_class": "WARM"
                        },
                        {
                          "days": 180,
                          "storage_class": "COLD"
                        }
                      ]
                    },
                    {
                      "enabled": true,
                      "name": "tmp",
                      "noncurrent_version_expiration": [
                        {
                          "days": 180
                        }
                      ],
                      "noncurrent_version_transition": [
                        {
                          "days": 30,
                          "storage_class": "WARM"
                        },
                        {
                          "days": 60,
                          "storage_class": "COLD"
                        }
                      ],
                      "prefix": "tmp/"
                    }
                  ],
                  "versioning": true
                }
            - name: bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "tf-test-bucket-%[1]d",
                  "depends_on": [
                    "${opentelekomcloud_smn_topic_attribute_v2.policy}"
                  ],
                  "event_notifications": [
                    {
                      "events": [
                        "ObjectCreated:*",
                        "ObjectRemoved:*"
                      ],
                      "filter_rule": [
                        {
                          "name": "prefix",
                          "value": "smn"
                        },
                        {
                          "name": "suffix",
                          "value": ".jpg"
                        }
                      ],
                      "topic": "${opentelekomcloud_smn_topic_v2.topic.id}"
                    }
                  ]
                }
              references:
                event_notifications.topic: opentelekomcloud_smn_topic_v2.topic.id
              dependencies:
                opentelekomcloud_smn_topic_attribute_v2.policy: |-
                    {
                      "attribute_name": "access_policy",
                      "topic_attribute": "{\n  \"Version\": \"2016-09-07\",\n  \"Id\": \"__default_policy_ID\",\n  \"Statement\": [\n    {\n      \"Sid\": \"__service_pub_0\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": [\n          \"obs\",\n          \"s3\"\n        ]\n      },\n      \"Action\": [\n        \"SMN:Publish\",\n        \"SMN:QueryTopicDetail\"\n      ],\n      \"Resource\": \"${opentelekomcloud_smn_topic_v2.topic.id}\"\n    }\n  ]\n}\n",
                      "topic_urn": "${opentelekomcloud_smn_topic_v2.topic.id}"
                    }
                opentelekomcloud_smn_topic_v2.topic: |-
                    {
                      "display_name": "The display name of topic_1",
                      "name": "obs-notifications"
                    }
            - name: b
              manifest: |-
                {
                  "bucket": "my-tf-test-bucket",
                  "user_domain_names": [
                    "${var.domain_1}",
                    "${var.domain_2}",
                    "${var.domain_3}"
                  ]
                }
              references:
                user_domain_names: var.domain_1
        argumentDocs:
            acl: |-
                - (Optional) Specifies the ACL policy for a bucket. The predefined common policies are as follows:
                private, public-read, public-read-write and log-delivery-write. Defaults to private.
            algorithm: '- (Required) The algorithm used for SSE. Only kms is supported.'
            allowed_headers: |-
                - (Optional) Specifies the allowed header of cross-origin requests.
                Only CORS requests matching the allowed header are valid.
            allowed_methods: |-
                - (Required) Specifies the acceptable operation type of buckets and objects.
                The methods include GET, PUT, POST, DELETE or HEAD.
            allowed_origins: |-
                - (Required) Requests from this origin can access the bucket. Multiple matching rules are allowed.
                One rule occupies one line, and allows one wildcard character (*) at most.
            bucket: |-
                - (Required) Specifies the name of the bucket. Changing this parameter will create a new resource.
                A bucket must be named according to the globally applied DNS naming regulations as follows:
            bucket_domain_name: '- The bucket domain name. Will be of format bucketname.obs.region.otc.t-systems.com.'
            bucket_version: '- The OBS version of the bucket.'
            cors_rule: '- (Optional) A rule of Cross-Origin Resource Sharing (documented below).'
            days: |-
                - (Optional) Default protection period, in days.
                The value is from 1 to 36500.
            enabled: '- (Required) Specifies lifecycle rule status.'
            error_document: |-
                - (Optional) Specifies the error page returned when an error occurs during static website access.
                Only HTML, JPG, PNG, BMP, and WEBP files under the root directory are supported.
            event_notifications: '- (Optional) A configuration of bucket event notifications (documented below).'
            events: '- (Required) Type of events that need to be notified.'
            expiration: |-
                - (Optional) Specifies a period when objects that have been last updated are automatically
                deleted. (documented below).
            expose_headers: |-
                - (Optional) Specifies the exposed header in CORS responses, providing additional
                information for clients.
            filter_rule: '- (Optional) Filtering rules. The rules filter objects based on the prefixes and suffixes of object names.'
            force_destroy: |-
                - (Optional) A boolean that indicates all objects should be deleted from the bucket so that the
                bucket can be destroyed without error. Default to false.
            id: '- (Optional) Unique ID of the event notification. If the user does not specify an ID, the system assigns an ID automatically.'
            index_document: |-
                - (Required, unless using redirect_all_requests_to) Specifies the default homepage of the
                static website, only HTML web pages are supported. OBS only allows files such as index.html in the root
                directory of a bucket to function as the default homepage. That is to say, do not set the default homepage
                with a multi-level directory structure (for example, /page/index.html).
            kms_key_id: '- (Required) The ID of KMS key used for the encryption.'
            lifecycle_rule: '- (Optional) A configuration of object lifecycle management (documented below).'
            logging: '- (Optional) A settings of bucket logging (documented below).'
            max_age_seconds: |-
                - (Optional) Specifies the duration that your browser can cache CORS responses,
                expressed in seconds. The default value is 100.
            name: '- (Required) Unique identifier for lifecycle rules. The Rule Name contains a maximum of 255 characters.'
            noncurrent_version_expiration: |-
                - (Optional) Specifies a period when noncurrent object versions are
                automatically deleted. (documented below).
            noncurrent_version_transition: |-
                - (Optional) Specifies a period when noncurrent object versions are
                automatically transitioned to WARM or COLD storage class (documented below).
            parallel_fs: '- (Optional) Whether enable a bucket as a parallel file system.'
            prefix: |-
                - (Optional) Object key prefix identifying one or more objects to which the rule applies.
                If omitted, all objects in the bucket will be managed by the lifecycle rule. The prefix cannot start
                or end with a slash (/), cannot have consecutive slashes (/), and cannot contain the following
                special characters: :*?"<>|.
            redirect_all_requests_to: |-
                - (Optional) A hostname to redirect all website requests for this bucket to.
                Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting
                requests. The default is the protocol that is used in the original request.
            region: |-
                - (Optional) If specified, the region this bucket should reside in. Otherwise,
                the region used by the provider.
            routing_rules: |-
                - (Optional) A JSON or XML format containing routing rules describing redirect
                behavior and when redirects are applied. Each rule contains a Condition and a Redirect
                as shown in the following table:
            server_side_encryption: '- (Optional) A configuration of server side encryption (documented below).'
            storage_class: |-
                - (Optional) Specifies the storage class of the bucket. OBS provides three storage classes:
                STANDARD, WARM (Infrequent Access) and COLD (Archive). Defaults to STANDARD.
            tags: '- (Optional) A mapping of tags to assign to the bucket. Each tag is represented by one key-value pair.'
            target_bucket: |-
                - (Required) The name of the bucket that will receive the log objects.
                The acl policy of the target bucket should be log-delivery-write.
            target_prefix: '- (Optional) To specify a key prefix for log objects.'
            topic: '- (Required) URN of the event notification topic. After detecting a specific event, OBS sends a message to the topic.'
            transition: |-
                - (Optional) Specifies a period when objects that have been last updated are automatically
                transitioned to WARM or COLD storage class (documented below).
            user_domain_names: |-
                - (Optional) Specifies the user domain names. The restriction requirements for this field
                are as follows:
            value: |-
                - (Optional) Specifies keywords of object names so that objects can be filtered based on the prefixes or suffixes.
                The value contains a maximum of 1024 characters.
            versioning: |-
                - (Optional) Set to true to enable versioning. Once you version-enable a bucket, it can never return to an
                unversioned state. You can, however, suspend versioning on that bucket. If omitted, during bucket
                creation it will be in Disabled state.
            website: '- (Optional) A website object (documented below).'
            worm_policy: |-
                - (Optional) A settings of bucket default WORM policy and a retention period (documented below).
                worm_policy requires versioning to be enabled.
            years: |-
                - (Optional) Default protection period, in years. In a leap year, only 365 days are calculated.
                The value is from 1 to 100.
        importStatements:
            - terraform import opentelekomcloud_obs_bucket.bucket bucket-name
    opentelekomcloud_obs_bucket_inventory:
        subCategory: Object Storage Service (OBS)
        description: Manages a OBS Bucket Inventory resource within OpenTelekomCloud.
        name: opentelekomcloud_obs_bucket_inventory
        title: opentelekomcloud_obs_bucket_inventory
        examples:
            - name: inventory
              manifest: |-
                {
                  "bucket": "${opentelekomcloud_obs_bucket.bucket.bucket}",
                  "configuration_id": "test-id",
                  "destination": [
                    {
                      "bucket": "${opentelekomcloud_obs_bucket.bucket.bucket}",
                      "format": "CSV",
                      "prefix": "test-"
                    }
                  ],
                  "filter_prefix": "test-filter-prefix",
                  "frequency": "Weekly",
                  "included_object_versions": "Current",
                  "is_enabled": true
                }
              references:
                bucket: opentelekomcloud_obs_bucket.bucket.bucket
                destination.bucket: opentelekomcloud_obs_bucket.bucket.bucket
              dependencies:
                opentelekomcloud_obs_bucket.bucket: |-
                    {
                      "bucket": "my-tf-test-bucket"
                    }
        argumentDocs:
            bucket: '- (Required, ForceNew, String) Name of the bucket for saving inventories.'
            configuration_id: |-
                - (Required, ForceNew, String) ID of the inventory configuration. Valid characters: letters, digits, hyphens (-),
                periods (.) and underscores (_).
            destination: |-
                - (Required, List) Destination bucket settings of an inventory.
                The structure is documented below.
            destination.bucket: '- (Required, String) Name of the bucket for saving inventories.'
            destination.format: '- (Required, String) Inventory format. Only the CSV format is supported.'
            destination.prefix: '- (Optional, String) The name prefix of inventory files. If no prefix is configured, the names of inventory files will start with the BucketInventory by default.'
            filter_prefix: '- (Optional, String) Filtering by name prefix. Only objects with the specified name prefix are included in the inventory.'
            frequency: |-
                - (Required, String) Intervals when inventories are generated.
                An inventory is generated within one hour after it is configured for the first time. Then it is generated at the specified intervals.
                Possible values:
            included_object_versions: |-
                - (Required, String) Indicates whether versions of objects are included in an inventory.
                Possible values:
            is_enabled: '- (Required, Bool) Indicates whether the rule is enabled. If this parameter is set to true, the inventory is generated.'
            region: '- Specifies the bucket region.'
        importStatements: []
    opentelekomcloud_obs_bucket_object:
        subCategory: Object Storage Service (OBS)
        description: Manages a OBS Bucket Object resource within OpenTelekomCloud.
        name: opentelekomcloud_obs_bucket_object
        title: opentelekomcloud_obs_bucket_object
        examples:
            - name: object
              manifest: |-
                {
                  "bucket": "your_bucket_name",
                  "content": "some object content",
                  "content_type": "application/xml",
                  "key": "new_key_from_content"
                }
            - name: object
              manifest: |-
                {
                  "bucket": "${opentelekomcloud_obs_bucket.examplebucket.bucket}",
                  "key": "new_key_from_file",
                  "source": "index.html"
                }
              references:
                bucket: opentelekomcloud_obs_bucket.examplebucket.bucket
              dependencies:
                opentelekomcloud_obs_bucket.examplebucket: |-
                    {
                      "acl": "private",
                      "bucket": "examplebuckettftest"
                    }
            - name: examplebucket_object
              manifest: |-
                {
                  "bucket": "your_bucket_name",
                  "encryption": true,
                  "key": "someobject",
                  "source": "index.html"
                }
        argumentDocs:
            acl: '- (Optional) The ACL policy to apply. Defaults to private.'
            bucket: '- (Required) The name of the bucket to put the file in.'
            content: '- (Optional) The literal content being uploaded to the bucket.'
            content_type: |-
                - (Optional) A standard MIME type describing the format of the object data, e.g. application/octet-stream.
                All Valid MIME Types are valid for this input.
            encryption: '- (Optional) Whether enable server-side encryption of the object in SSE-KMS mode.'
            etag: |-
                - (Optional) Specifies the unique identifier of the object content. It can be used to trigger updates.
                The only meaningful value is md5(file("path_to_file")).
            id: '- the key of the resource supplied above.'
            key: '- (Required) The name of the object once it is in the bucket.'
            size: '- the size of the object in bytes.'
            source: '- (Optional) The path to the source file being uploaded to the bucket.'
            sse_kms_key_id: '- (Optional) The ID of the kms key. If omitted, the default master key will be used.'
            storage_class: '- (Optioanl) Specifies the storage class of the object. Defaults to STANDARD.'
            version_id: '- A unique version ID value for the object, if bucket versioning is enabled.'
        importStatements: []
    opentelekomcloud_obs_bucket_policy:
        subCategory: Object Storage Service (OBS)
        description: Manages a OBS Bucket Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_obs_bucket_policy
        title: opentelekomcloud_obs_bucket_policy
        examples:
            - name: policy
              manifest: |-
                {
                  "bucket": "${opentelekomcloud_obs_bucket.bucket.id}",
                  "policy": "{\n  \"Statement\": [{\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"ID\": [\"*\"]\n    },\n    \"Action\": [\n      \"GetObject\",\n      \"PutObject\"\n    ],\n    \"Resource\": [\n      \"${opentelekomcloud_obs_bucket.bucket.bucket}/*\"\n    ]\n  }]\n}\n"
                }
              references:
                bucket: opentelekomcloud_obs_bucket.bucket.id
              dependencies:
                opentelekomcloud_obs_bucket.bucket: |-
                    {
                      "bucket": "my-tf-test-bucket"
                    }
        argumentDocs:
            bucket: '- (Required) The name of the bucket to which to apply the policy.'
            policy: '- (Required) The text of the policy.'
        importStatements: []
    opentelekomcloud_obs_bucket_replication:
        subCategory: Object Storage Service (OBS)
        description: Manages a OBS Bucket Replication resource within OpenTelekomCloud.
        name: opentelekomcloud_obs_bucket_replication
        title: opentelekomcloud_obs_bucket_replication
        examples:
            - name: test
              manifest: |-
                {
                  "agency": "${var.agency}",
                  "bucket": "${var.bucket}",
                  "destination_bucket": "${var.destination_bucket}"
                }
              references:
                agency: var.agency
                bucket: var.bucket
                destination_bucket: var.destination_bucket
            - name: test
              manifest: |-
                {
                  "agency": "${var.agency}",
                  "bucket": "${var.bucket}",
                  "destination_bucket": "${var.destination_bucket}",
                  "rule": [
                    {
                      "prefix": "log"
                    },
                    {
                      "delete_data": true,
                      "enabled": true,
                      "history_enabled": false,
                      "prefix": "imgs/",
                      "storage_class": "COLD"
                    }
                  ]
                }
              references:
                agency: var.agency
                bucket: var.bucket
                destination_bucket: var.destination_bucket
        argumentDocs:
            agency: '- (Required) Specifies the IAM agency name applied to the cross-region replication.'
            bucket: '- (Required, ForceNew) Specifies the name of the source bucket.'
            destination_bucket: '- (Required) Specifies the name of the destination bucket.'
            id: '- The name of the bucket.'
            region: |-
                - (Optional, ForceNew) Specifies the region in which to create the resource.
                If omitted, the provider-level region will be used.
            rule: |-
                - (Optional) Specifies the configurations of object cross-region replication management.
                The structure is documented below.
            rule.delete_data: |-
                - (Optional) Specifies cross-region replication object deletion operations status. Defaults to false.
                If the value is true, object deletion for the source bucket will be replicated to the destination bucket.
            rule.enabled: '- (Optional) Specifies cross-region replication rule status. Defaults to true.'
            rule.history_enabled: |-
                - (Optional) Specifies cross-region replication history rule status. Defaults to false.
                If the value is true, historical objects meeting this rule are copied.
            rule.prefix: |-
                - (Optional) Specifies the prefix of an object key name, applicable to one or more objects.
                The maximum length of a prefix is 1024 characters.
                Duplicated prefixes are not supported. If omitted, all objects in the bucket will be managed by the lifecycle rule.
                To copy a folder, end the prefix with a slash (/), for example, imgs/.
            rule.storage_class: |-
                - (Optional) Specifies the storage class for replicated objects. Valid values are STANDARD,
                WARM (Infrequent Access) and COLD (Archive).
                If omitted, the storage class of object copies is the same as that of objects in the source bucket.
            rule/id: '- The ID of a rule in UUID format.'
        importStatements: []
    opentelekomcloud_rds_backup_v3:
        subCategory: Relational Database Service (RDS)
        description: Manages an RDS Backup resource within OpenTelekomCloud.
        name: opentelekomcloud_rds_backup_v3
        title: opentelekomcloud_rds_backup_v3
        examples:
            - name: test
              manifest: |-
                {
                  "description": "manual",
                  "instance_id": "${opentelekomcloud_rds_instance_v3.instance.id}",
                  "name": "rds-backup-test-01"
                }
              references:
                instance_id: opentelekomcloud_rds_instance_v3.instance.id
              dependencies:
                opentelekomcloud_rds_instance_v3.instance: |-
                    {
                      "datastore": "percona",
                      "engine": "mysql",
                      "flavor_ref": "rds.mysql.s1.large",
                      "name": "test-instance"
                    }
        argumentDocs:
            begin_time: |-
                - Indicates the backup start time in the "yyyy-mm-ddThh:mm:ssZ" format,
                where "T" indicates the start time of the time field, and "Z" indicates the time zone offset.
            databases: |-
                - (Optional) Specifies a list of self-built Microsoft SQL Server databases that are partially backed up.
                (Only Microsoft SQL Server support partial backups.)
            description: |-
                - (Optional) Specifies the backup description.
                It contains a maximum of 256 characters and cannot contain the following special characters: >!<"&'=
            id: '- The ID of the backup.'
            instance_id: '- (Required) The ID of the RDS instance to which the backup belongs.'
            name: '- (Required) The name of the backup.'
            status: |-
                - Indicates the backup status. Value:
                - BUILDING: Backup in progress
                - COMPLETED: Backup completed
                - FAILED: Backup failed
                - DELETING: Backup being deleted
            type: |-
                - Indicates the backup type. Value:
                - auto: automated full backup
                - manual: manual full backup
                - fragment: differential full backup
                - incremental: automated incremental backup
        importStatements: []
    opentelekomcloud_rds_instance_v1:
        subCategory: Relational Database Service (RDS)
        description: Manages an RDS Instance v1 resource within OpenTelekomCloud.
        name: opentelekomcloud_rds_instance_v1
        title: opentelekomcloud_rds_instance_v1
        examples:
            - name: instance
              manifest: |-
                {
                  "availabilityzone": "eu-de-01",
                  "backupstrategy": [
                    {
                      "keepdays": 4,
                      "starttime": "04:00:00"
                    }
                  ],
                  "datastore": [
                    {
                      "type": "PostgreSQL",
                      "version": "9.5.5"
                    }
                  ],
                  "dbport": "8635",
                  "dbrtpd": "P@ssw0rd1!9851",
                  "depends_on": [
                    "opentelekomcloud_compute_secgroup_v2.secgrp_rds"
                  ],
                  "flavorref": "${data.opentelekomcloud_rds_flavors_v1.flavor.id}",
                  "ha": [
                    {
                      "enable": true,
                      "replicationmode": "async"
                    }
                  ],
                  "name": "rds-instance",
                  "nics": [
                    {
                      "subnetid": "b65f8d25-c533-47e2-8601-cfaa265a3e3e"
                    }
                  ],
                  "securitygroup": [
                    {
                      "id": "${opentelekomcloud_compute_secgroup_v2.secgrp_rds.id}"
                    }
                  ],
                  "tag": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume": [
                    {
                      "size": 200,
                      "type": "COMMON"
                    }
                  ],
                  "vpc": "c1095fe7-03df-4205-ad2d-6f4c181d436e"
                }
              references:
                flavorref: data.opentelekomcloud_rds_flavors_v1.flavor.id
                securitygroup.id: opentelekomcloud_compute_secgroup_v2.secgrp_rds.id
              dependencies:
                opentelekomcloud_compute_secgroup_v2.secgrp_rds: |-
                    {
                      "description": "Rds Security Group",
                      "name": "secgrp-rds-instance"
                    }
            - name: instance
              manifest: |-
                {
                  "availabilityzone": "eu-de-01",
                  "backupstrategy": [
                    {
                      "keepdays": 4,
                      "starttime": "04:00:00"
                    }
                  ],
                  "datastore": [
                    {
                      "type": "SQLServer",
                      "version": "2014 SP2 SE"
                    }
                  ],
                  "dbport": "8635",
                  "dbrtpd": "P@ssw0rd1!9851",
                  "depends_on": [
                    "opentelekomcloud_compute_secgroup_v2.secgrp_rds"
                  ],
                  "flavorref": "${data.opentelekomcloud_rds_flavors_v1.flavor.id}",
                  "name": "rds-instance",
                  "nics": [
                    {
                      "subnetid": "b65f8d25-c533-47e2-8601-cfaa265a3e3e"
                    }
                  ],
                  "securitygroup": [
                    {
                      "id": "${opentelekomcloud_compute_secgroup_v2.secgrp_rds.id}"
                    }
                  ],
                  "volume": [
                    {
                      "size": 200,
                      "type": "COMMON"
                    }
                  ],
                  "vpc": "c1095fe7-03df-4205-ad2d-6f4c181d436e"
                }
              references:
                flavorref: data.opentelekomcloud_rds_flavors_v1.flavor.id
                securitygroup.id: opentelekomcloud_compute_secgroup_v2.secgrp_rds.id
              dependencies:
                opentelekomcloud_compute_secgroup_v2.secgrp_rds: |-
                    {
                      "description": "Rds Security Group",
                      "name": "secgrp-rds-instance"
                    }
            - name: instance
              manifest: |-
                {
                  "availabilityzone": "eu-de-01",
                  "backupstrategy": [
                    {
                      "keepdays": 4,
                      "starttime": "04:00:00"
                    }
                  ],
                  "datastore": [
                    {
                      "type": "MySQL",
                      "version": "5.6.33"
                    }
                  ],
                  "dbport": "8635",
                  "dbrtpd": "P@ssw0rd1!9851",
                  "depends_on": [
                    "opentelekomcloud_compute_secgroup_v2.secgrp_rds"
                  ],
                  "flavorref": "${data.opentelekomcloud_rds_flavors_v1.flavor.id}",
                  "ha": [
                    {
                      "enable": true,
                      "replicationmode": "async"
                    }
                  ],
                  "name": "rds-instance",
                  "nics": [
                    {
                      "subnetid": "b65f8d25-c533-47e2-8601-cfaa265a3e3e"
                    }
                  ],
                  "securitygroup": [
                    {
                      "id": "${opentelekomcloud_compute_secgroup_v2.secgrp_rds.id}"
                    }
                  ],
                  "volume": [
                    {
                      "size": 200,
                      "type": "COMMON"
                    }
                  ],
                  "vpc": "c1095fe7-03df-4205-ad2d-6f4c181d436e"
                }
              references:
                flavorref: data.opentelekomcloud_rds_flavors_v1.flavor.id
                securitygroup.id: opentelekomcloud_compute_secgroup_v2.secgrp_rds.id
              dependencies:
                opentelekomcloud_compute_secgroup_v2.secgrp_rds: |-
                    {
                      "description": "Rds Security Group",
                      "name": "secgrp-rds-instance"
                    }
        argumentDocs:
            availabilityzone: '- (Required) Specifies the ID of the AZ.'
            backupstrategy: |-
                - (Optional) Specifies the advanced backup policy. The structure
                is described below.
            backupstrategy .keepdays: |-
                - (Optional) Specifies the number of days to retain the generated backup files.
                Its value range is 0 to 35. If this parameter is not specified or set to 0, the
                automated backup policy is disabled.
            backupstrategy .starttime: |-
                - (Optional) Indicates the backup start time that has been set.
                The backup task will be triggered within one hour after the backup start time.
                Valid value: The value cannot be empty. It must use the hh:mm:ss format and
                must be valid. The current time is the UTC time.
            created: '- Indicates the creation time in the following format: yyyy-mm-dd Thh:mm:ssZ.'
            datastore: |-
                - (Required) Specifies database information. The structure is
                described below.
            datastore.type: |-
                - (Required) Specifies the DB engine. Currently, MySQL, PostgreSQL, and
                Microsoft SQL Server are supported. The value is MySQL, PostgreSQL, or SQLServer.
            datastore.version: '- (Required) Specifies the DB instance version.'
            dbport: '- (Optional) Specifies the database port number.'
            dbrtpd: '- (Required) Specifies the password for user root of the database.'
            flavorref: |-
                - (Required) Specifies the specification ID (flavors.id in the
                response message in Obtaining All DB Instance Specifications). If you want
                to enable ha for the rds instance, a flavor with ha speccode is required.
            ha: |-
                - (Optional) Specifies the parameters configured on HA and is used when
                creating HA DB instances. The structure is described below. NOTICE:
                RDS for Microsoft SQL Server does not support creating HA DB instances and
                this parameter is not involved.
            ha.enable: |-
                - (Optional) Specifies the configured parameters on the HA.
                Valid value: The value is true or false. The value true indicates creating
                HA DB instances. The value false indicates creating a single DB instance.
            ha.replicationmode: |-
                - (Optional) Specifies the replication mode for the standby DB instance.
                The value cannot be empty.
                For MySQL, the value is async or semisync.
                For PostgreSQL, the value is async or sync.
            hostname: '- Indicates the instance connection address. It is a blank string.'
            name: |-
                - (Required) Specifies the DB instance name. The DB instance name of
                the same type is unique in the same tenant. The changes of the instance name
                will be suppressed in HA scenario.
            nics: |-
                - (Required) Specifies the nics information. For details about how
                to obtain this parameter value, see section "Subnet" in the Virtual Private
                Cloud API Reference. The structure is described below.
            nics.subnetId: '- (Required) Specifies the subnet ID obtained from the VPC.'
            securitygroup: |-
                - (Required) Specifies the security group which the RDS DB
                instance belongs to. The structure is described below.
            securitygroup .id: '- (Required) Specifies the ID obtained from the securitygroup.'
            status: '- Indicates the DB instance status.'
            tag: '- (Optional) Tags key/value pairs to associate with the instance.'
            type: '- Indicates the DB instance type, which can be master or readreplica.'
            updated: '- Indicates the update time in the following format: yyyy-mm-dd Thh:mm:ssZ.'
            volume: |-
                - (Required) Specifies the volume information. The structure is described
                below.
            volume.size: |-
                - (Required) Specifies the volume size.
                Its value must be a multiple of 10 and the value range is 100 GB to 2000 GB.
            volume.type: |-
                - (Required) Specifies the volume type. Valid value:
                It must be COMMON (SATA) or ULTRAHIGH (SSD) and is case-sensitive.
            vpc: |-
                - (Required) Specifies the VPC ID. For details about how to obtain this
                parameter value, see section "Virtual Private Cloud" in the Virtual Private
                Cloud API Reference.
        importStatements: []
    opentelekomcloud_rds_instance_v3:
        subCategory: Relational Database Service (RDS)
        description: Manages an RDS Instance v3 resource within OpenTelekomCloud.
        name: opentelekomcloud_rds_instance_v3
        title: opentelekomcloud_rds_instance_v3
        examples:
            - name: instance
              manifest: |-
                {
                  "availability_zone": [
                    "${var.availability_zone}"
                  ],
                  "backup_strategy": [
                    {
                      "keep_days": 1,
                      "start_time": "08:00-09:00"
                    }
                  ],
                  "db": [
                    {
                      "password": "P@ssw0rd1!9851",
                      "port": "8635",
                      "type": "PostgreSQL",
                      "version": "9.5"
                    }
                  ],
                  "flavor": "rds.pg.c2.medium",
                  "name": "terraform_test_rds_instance",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup.id}",
                  "subnet_id": "${var.subnet_id}",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume": [
                    {
                      "size": 100,
                      "type": "CLOUDSSD"
                    }
                  ],
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup.id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup: |-
                    {
                      "description": "terraform security group acceptance test",
                      "name": "terraform_test_security_group"
                    }
            - name: instance
              manifest: |-
                {
                  "availability_zone": [
                    "${var.availability_zone_1}",
                    "${var.availability_zone_2}"
                  ],
                  "backup_strategy": [
                    {
                      "keep_days": 1,
                      "start_time": "08:00-09:00"
                    }
                  ],
                  "db": [
                    {
                      "password": "P@ssw0rd1!9851",
                      "port": "8635",
                      "type": "PostgreSQL",
                      "version": "9.5"
                    }
                  ],
                  "flavor": "rds.pg.s1.medium.ha",
                  "ha_replication_mode": "async",
                  "name": "terraform_test_rds_instance",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup.id}",
                  "subnet_id": "${var.subnet_id}",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume": [
                    {
                      "size": 100,
                      "type": "CLOUDSSD"
                    }
                  ],
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone_1
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup.id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.secgroup: |-
                    {
                      "description": "terraform security group acceptance test",
                      "name": "terraform_test_security_group"
                    }
            - name: instance
              manifest: |-
                {
                  "availability_zone": [
                    "${var.availability_zone_1}",
                    "${var.availability_zone_2}"
                  ],
                  "backup_strategy": [
                    {
                      "keep_days": 1,
                      "start_time": "08:00-09:00"
                    }
                  ],
                  "db": [
                    {
                      "password": "Telekom!120521",
                      "port": "8635",
                      "type": "PostgreSQL",
                      "version": "9.5"
                    }
                  ],
                  "flavor": "rds.pg.s1.medium.ha",
                  "ha_replication_mode": "async",
                  "name": "terraform_test_rds_instance",
                  "public_ips": [
                    "${opentelekomcloud_compute_floatingip_v2.ip.address}"
                  ],
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup.id}",
                  "subnet_id": "${var.subnet_id}",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "volume": [
                    {
                      "size": 100,
                      "type": "CLOUDSSD"
                    }
                  ],
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone_1
                public_ips: opentelekomcloud_compute_floatingip_v2.ip.address
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup.id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_compute_floatingip_v2.ip: '{}'
                opentelekomcloud_networking_secgroup_v2.secgroup: |-
                    {
                      "description": "terraform security group acceptance test",
                      "name": "terraform_test_security_group"
                    }
            - name: instance
              manifest: |-
                {
                  "availability_zone": [
                    "${var.availability_zone}"
                  ],
                  "backup_strategy": [
                    {
                      "keep_days": 1,
                      "start_time": "08:00-09:00"
                    }
                  ],
                  "db": [
                    {
                      "password": "P@ssw0rd1!9851",
                      "port": "8635",
                      "type": "PostgreSQL",
                      "version": "9.5"
                    }
                  ],
                  "flavor": "rds.pg.c2.medium",
                  "name": "terraform_test_rds_instance",
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.secgroup.id}",
                  "subnet_id": "${var.subnet_id}",
                  "volume": [
                    {
                      "disk_encryption_id": "${opentelekomcloud_kms_key_v1.key.id}",
                      "size": 100,
                      "type": "CLOUDSSD"
                    }
                  ],
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone
                security_group_id: opentelekomcloud_networking_secgroup_v2.secgroup.id
                subnet_id: var.subnet_id
                volume.disk_encryption_id: opentelekomcloud_kms_key_v1.key.id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_kms_key_v1.key: |-
                    {
                      "is_enabled": true,
                      "key_alias": "key_1",
                      "key_description": "first test key"
                    }
                opentelekomcloud_networking_secgroup_v2.secgroup: |-
                    {
                      "description": "terraform security group acceptance test",
                      "name": "terraform_test_security_group"
                    }
            - name: instance
              manifest: |-
                {
                  "availability_zone": [
                    "${var.availability_zone}"
                  ],
                  "db": [
                    {
                      "password": "Postgres!120521",
                      "port": "8635",
                      "type": "PostgreSQL",
                      "version": "10"
                    }
                  ],
                  "flavor": "rds.pg.c2.medium",
                  "name": "tf_rds_instance_%s",
                  "parameters": {
                    "max_connections": "37"
                  },
                  "security_group_id": "${opentelekomcloud_networking_secgroup_v2.sg.id}",
                  "subnet_id": "${var.subnet_id}",
                  "volume": [
                    {
                      "size": 40,
                      "type": "CLOUDSSD"
                    }
                  ],
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.availability_zone
                security_group_id: opentelekomcloud_networking_secgroup_v2.sg.id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
              dependencies:
                opentelekomcloud_networking_secgroup_v2.sg: |-
                    {
                      "name": "sg-rds-test"
                    }
                opentelekomcloud_rds_parametergroup_v3.pg: |-
                    {
                      "datastore": [
                        {
                          "type": "postgresql",
                          "version": "10"
                        }
                      ],
                      "name": "pg-rds-test",
                      "values": {
                        "autocommit": "OFF"
                      }
                    }
            - name: from_backup
              manifest: |-
                {
                  "availability_zone": "${opentelekomcloud_rds_instance_v3.instance.availability_zone}",
                  "backup_strategy": [
                    {
                      "keep_days": 1,
                      "start_time": "08:00-09:00"
                    }
                  ],
                  "db": [
                    {
                      "password": "Postgres!120521",
                      "port": "8635",
                      "type": "PostgreSQL",
                      "version": "10"
                    }
                  ],
                  "flavor": "rds.pg.c2.medium",
                  "name": "instance-restored",
                  "restore_point": [
                    {
                      "backup_id": "${data.opentelekomcloud_rds_backup_v3.backup.id}",
                      "instance_id": "${data.opentelekomcloud_rds_backup_v3.backup.instance_id}"
                    }
                  ],
                  "security_group_id": "${var.security_group_id}",
                  "subnet_id": "${var.os_network_id}",
                  "volume": [
                    {
                      "size": 40,
                      "type": "CLOUDSSD"
                    }
                  ],
                  "vpc_id": "${var.os_router_id}"
                }
              references:
                availability_zone: opentelekomcloud_rds_instance_v3.instance.availability_zone
                restore_point.backup_id: data.opentelekomcloud_rds_backup_v3.backup.id
                restore_point.instance_id: data.opentelekomcloud_rds_backup_v3.backup.instance_id
                security_group_id: var.security_group_id
                subnet_id: var.os_network_id
                vpc_id: var.os_router_id
            - name: instance
              manifest: |-
                {
                  "availability_zone": "${opentelekomcloud_rds_instance_v3.instance.availability_zone}",
                  "backup_strategy": [
                    {
                      "keep_days": 1,
                      "start_time": "08:00-09:00"
                    }
                  ],
                  "db": [
                    {
                      "password": "MySql!112822",
                      "port": "8635",
                      "type": "MySQL",
                      "version": "8.0"
                    }
                  ],
                  "flavor": "rds.mysql.c2.medium",
                  "name": "tf_rds_instance_%s",
                  "param_group_id": "${opentelekomcloud_rds_parametergroup_v3.pg_1.id}",
                  "security_group_id": "${data.opentelekomcloud_networking_secgroup_v2.default_secgroup.id}",
                  "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}",
                  "tags": {
                    "kuh": "value-create",
                    "muh": "value-create"
                  },
                  "volume": [
                    {
                      "size": 40,
                      "type": "CLOUDSSD"
                    }
                  ],
                  "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                }
              references:
                availability_zone: opentelekomcloud_rds_instance_v3.instance.availability_zone
                param_group_id: opentelekomcloud_rds_parametergroup_v3.pg_1.id
                security_group_id: data.opentelekomcloud_networking_secgroup_v2.default_secgroup.id
                subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id
                vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
              dependencies:
                opentelekomcloud_rds_parametergroup_v3.pg_1: |-
                    {
                      "datastore": [
                        {
                          "type": "mysql",
                          "version": "8.0"
                        }
                      ],
                      "description": "time zone template",
                      "name": "pg_tmz",
                      "values": {
                        "time_zone": "Africa/Casablanca"
                      }
                    }
            - name: instance_1
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "db",
                        "availability_zone"
                      ]
                    }
                  ]
                }
        argumentDocs:
            availability_zone: '- (Required, ForceNew) Specifies the AZ name. Changing this parameter will create a new resource.'
            availability_zones: '- Indicates the instance AZs.'
            backup: |-
                - Indicates using backup files for restoration.
                In this mode backup_id is mandatory.
            backup_strategy: '- (Optional) Specifies the advanced backup policy. Structure is documented below.'
            backup_strategy.keep_days: |-
                - (Optional) Specifies the retention days for specific backup files. The value
                range is from 0 to 732. If this parameter is not specified or set
                to 0, the automated backup policy is disabled. NOTICE:
                Primary/standby DB instances of Microsoft SQL Server do not
                support disabling the automated backup policy.
            backup_strategy.start_time: |-
                - (Required) Specifies the backup time window. Automated backups will be
                triggered during the backup time window. It must be a valid value in the "hh:mm-HH:MM"
                format. The current time is in the UTC format. The HH value must
                be 1 greater than the hh value. The values of mm and MM must be
                the same and must be set to any of the following: 00, 15, 30, or
                45. Example value: 08:15-09:15 23:00-00:00.
            create: '- Default is 30 minute.'
            created: '- Indicates the creation time.'
            db: '- (Required, ForceNew) Specifies the database information. Structure is documented below. Changing this parameter will create a new resource.'
            db.password: |-
                - (Required, ForceNew) Specifies the database password. The value cannot be
                empty and should contain 8 to 32 characters, including uppercase
                and lowercase letters, digits, and the following special
                characters: ~!@#%^*-_=+? You are advised to enter a strong
                password to improve security, preventing security risks such as
                brute force cracking.  Changing this parameter will create a new resource.
            db.port: |-
                - (Optional) Specifies the database port information. The MySQL database port
                ranges from 1024 to 65535 (excluding 12017 and 33071, which are
                occupied by the RDS system and cannot be used). The PostgreSQL
                database port ranges from 2100 to 9500. The Microsoft SQL Server
                database port can be 1433 or ranges from 2100 to 9500, excluding
                5355 and 5985. If this parameter is not set, the default value is
                as follows: For MySQL, the default value is 3306. For PostgreSQL,
                the default value is 5432. For Microsoft SQL Server, the default
                value is 1433.  Changing this parameter will create a new resource.
            db.type: '- (Required, ForceNew) Specifies the DB engine. Value: MySQL, PostgreSQL, SQLServer. Changing this parameter will create a new resource.'
            db.user_name: '- Indicates the default user name of database.'
            db.version: |-
                - (Required, ForceNew) Specifies the database version. MySQL databases support MySQL 5.6
                and above. PostgreSQL databases support PostgreSQL 9.5 and above. Microsoft SQL Server
                databases support 2014 SE, 2016 SE, and above.
                Changing this parameter will create a new resource.
            flavor: |-
                - (Required) Specifies the specification code.
                Use data source opentelekomcloud_rds_flavors_v3 to get a list of available flavor names.
                Examples could be rds.pg.c2.medium or   rds.pg.c2.medium.ha for HA clusters.
            ha_replication_mode: |-
                - (Optional, ForceNew) Specifies the replication mode for the standby DB instance. For MySQL, the value
                is async or semisync. For PostgreSQL, the value is async or sync. For Microsoft SQL Server, the value is sync.
                Parameter is required for HA clusters.
            lower_case_table_names: |-
                - (Optional, ForceNew) Specifies the case-sensitive state of the database table name,
                the default value is "1". Changing this parameter will create a new resource.
            name: |-
                - (Required, ForceNew) Specifies the DB instance name. The DB instance name of the same type
                must be unique for the same tenant. The value must be 4 to 64
                characters in length and start with a letter. It is case-sensitive
                and can contain only letters, digits, hyphens (-), and underscores
                (_).  Changing this parameter will create a new resource.
            nodes: '- Indicates the instance nodes information. Structure is documented below.'
            nodes.autoscaling_enabled: '- Indicates whether autoscaling was enabled for this resource.'
            nodes.availability_zone: '- Indicates the AZ.'
            nodes.id: '- Indicates the node ID.'
            nodes.name: '- Indicates the node name.'
            nodes.role: '- Indicates the node type. The value can be master or slave, indicating the primary node or standby node respectively.'
            nodes.status: '- Indicates the node status.'
            param_group_id: '- (Optional) Specifies the parameter group ID.'
            parameters: |-
                - (Optional) Map of additional configuration parameters. Values should be strings. Parameters set here
                overrides values from configuration template (parameter group).
            private_ips: |-
                - Indicates the private IP address list. It is a blank string until an
                ECS is created.
            public_ips: |-
                - (Optional) Specifies floating IP to be assigned to the instance.
                This should be a list with single element only.
            restore_from_backup: |-
                - (Optional) Specifies whether to restore database to an instance described in current resource.
                Structure is documented below.
            restore_from_backup.backup_id: |-
                - (Optional) Specifies the ID of the backup used to restore data.
                This parameter must be specified when the backup file is used for restoration.
            restore_from_backup.restore_time: |-
                - (Optional) Specifies the time point of data restoration in the UNIX timestamp.
                The unit is millisecond and the time zone is UTC.
            restore_from_backup.source_instance_id: '- (Required) Specifies the source instance ID.'
            restore_from_backup.type: '- (Required) Specifies the restoration mode. The values can be:'
            restore_point: |-
                - (Optional, ForceNew) Specifies the restoration information. By selecting this option a new RDS
                instance will be created from separate instance backup. Structure is documented below.
            restore_point.backup_id: '- (Optional, ForceNew) Specifies the ID of the backup used to restore data.'
            restore_point.instance_id: '- (Required, ForceNew) Specifies the original DB instance ID.'
            restore_point.restore_time: |-
                - (Optional, ForceNew) Specifies the time point of data restoration in the UNIX timestamp.
                The unit is millisecond and the time zone is UTC.
            restored_backup_id: |-
                - Indicates the backup ID in cases when instance was restored by using
                restore_from_backup block.
            security_group_id: |-
                - (Required) Specifies the security group which the RDS DB instance belongs to.
                Changing this parameter will create a new resource.
            ssl_enable: '- (Optional) Specifies whether SSL should be enabled for MySql instances.'
            subnet_id: '- (Required, ForceNew) Specifies the subnet id. Changing this parameter will create a new resource.'
            tag: |-
                - (Optional) Tags key/value pairs to associate with the instance. Deprecated, please use
                the tags instead.
            tags: '- (Optional) Tags key/value pairs to associate with the instance.'
            timestamp: |-
                - Indicates the point-in-time restoration mode.
                In this mode restore_time is mandatory.
            volume: '- (Required, ForceNew) Specifies the volume information. Structure is documented below.'
            volume.disk_encryption_id: '- (Optional, ForceNew) Specifies the key ID for disk encryption. Changing this parameter will create a new resource.'
            volume.limit_size: |-
                - (Optional, Int) Specifies the upper limit of automatic expansion of storage, in GB.
                The value ranges from 40 GB to 4,000 GB and must be no less than the current storage of the instance.
                If this parameter is configured, trigger_threshold is mandatory.
            volume.size: |-
                - (Required) Specifies the volume size. Its value range is from 40 GB to 4000
                GB. The value must be a multiple of 10. Changing this resize the volume.
            volume.trigger_threshold: |-
                - (Optional, Int) Specifies the threshold to trigger automatic expansion.
                If this parameter is configured, limit_size is mandatory.
                If the available storage drops to this threshold or 10 GB, the automatic expansion is triggered.
                The valid values are as follows:
            volume.type: |-
                - (Required, ForceNew) Specifies the volume type. Changing this resize the volume. Its value can be any of the following
                and is case-sensitive:
            vpc_id: '- (Required, ForceNew) Specifies the VPC ID. Changing this parameter will create a new resource.'
        importStatements: []
    opentelekomcloud_rds_maintenance_v3:
        subCategory: Relational Database Service (RDS)
        description: Manages an RDS Maintenance windows resource within OpenTelekomCloud.
        name: opentelekomcloud_rds_maintenance_v3
        title: opentelekomcloud_rds_maintenance_v3
        examples:
            - name: test
              manifest: |-
                {
                  "end_time": "16:00",
                  "instance_id": "${var.instance_id}",
                  "start_time": "12:00"
                }
              references:
                instance_id: var.instance_id
        argumentDocs:
            end_time: |-
                - (Required, ForceNew, String) Specifies the end time.
                The value must be a valid value in the "HH:MM" format. The current time is in the UTC format.
            instance_id: '- (Required, ForceNew, String) The ID of the RDS instance to which the maintenance window belongs.'
            start_time: |-
                - (Required, ForceNew, String) Specifies the start time.
                The value must be a valid value in the "HH:MM" format. The current time is in the UTC format.
        importStatements: []
    opentelekomcloud_rds_parametergroup_v3:
        subCategory: Relational Database Service (RDS)
        description: Manages an RDS Parameter Group resource within OpenTelekomCloud.
        name: opentelekomcloud_rds_parametergroup_v3
        title: opentelekomcloud_rds_parametergroup_v3
        examples:
            - name: pg_1
              manifest: |-
                {
                  "datastore": [
                    {
                      "type": "mysql",
                      "version": "5.6"
                    }
                  ],
                  "description": "some description here",
                  "name": "pg_1",
                  "values": {
                    "autocommit": "OFF",
                    "max_connections": "10"
                  }
                }
        argumentDocs:
            "5.6": ', 5.7, 8.0. Example value: 5.7.'
            "9.5": ', 9.6, 10 and 11. Example value: 9.5.'
            2014 SE: ', 2016 SE, and 2016 EE. Example value: 2014_SE.'
            configuration_parameters: '- Indicates the parameter configuration defined by users based on the default parameters groups.'
            created: '- Indicates the creation time in the following format: yyyy-MM-ddTHH:mm:ssZ.'
            datastore: '- (Required) Database object. The database object structure is documented below. Changing this creates a new parameter group.'
            datastore.type: |-
                - (Required) Specifies the DB engine. Currently, MySQL, PostgreSQL and MS SQLServer are supported.
                The value is case-insensitive and can be mysql, postgresql or sqlserver.
            datastore.version: '- (Required) Specifies the database version.'
            description: |-
                - (Optional) The parameter group description. It contains a maximum of 256 characters
                and cannot contain the following special characters: >!<"&'= the value is left blank by default.
            id: '-  ID of the parameter group.'
            name: '- (Required) The parameter group name. It contains a maximum of 64 characters.'
            readonly: '- Indicates whether the parameter is read-only.'
            restart_required: '- Indicates whether a restart is required.'
            type: '- Indicates the parameter type.'
            updated: '- Indicates the update time in the following format: yyyy-MM-ddTHH:mm:ssZ.'
            value: '- Indicates the parameter value.'
            value_range: '- Indicates the parameter value range.'
            values: '- (Optional) Parameter group values key/value pairs defined by users based on the default parameter groups.'
        importStatements: []
    opentelekomcloud_rds_read_replica_v3:
        subCategory: Relational Database Service (RDS)
        description: Manages an RDS Read Replica resource within OpenTelekomCloud.
        name: opentelekomcloud_rds_read_replica_v3
        title: opentelekomcloud_rds_read_replica_v3
        examples:
            - name: replica
              manifest: |-
                {
                  "availability_zone": "${var.az_replica}",
                  "flavor_ref": "${opentelekomcloud_rds_instance_v3.instance.flavor}.rr",
                  "name": "test-replica",
                  "replica_of_id": "${opentelekomcloud_rds_instance_v3.instance.id}",
                  "volume": [
                    {
                      "type": "COMMON"
                    }
                  ]
                }
              references:
                availability_zone: var.az_replica
                replica_of_id: opentelekomcloud_rds_instance_v3.instance.id
              dependencies:
                opentelekomcloud_rds_instance_v3.instance: |-
                    {
                      "availability_zone": "${var.az_main}",
                      "backup_strategy": [
                        {
                          "keep_days": 1,
                          "start_time": "08:00-09:00"
                        }
                      ],
                      "db": [
                        {
                          "password": "${var.db_password}",
                          "port": "8635",
                          "type": "PostgreSQL",
                          "version": "10"
                        }
                      ],
                      "flavor": "rds.pg.c2.medium",
                      "name": "test-instance",
                      "security_group_id": "${var.sg_id}",
                      "subnet_id": "${var.os_network_id}",
                      "tag": {
                        "created": "terraform"
                      },
                      "volume": [
                        {
                          "size": 40,
                          "type": "ULTRAHIGH"
                        }
                      ],
                      "vpc_id": "${var.os_router_id}"
                    }
        argumentDocs:
            COMMON: ': indicates the SATA type.'
            ULTRAHIGH: ': indicates the SSD type.'
            db: '- Indicates the database information. Structure is documented below.'
            db.port: '- Indicates the database port information.'
            db.type: '- Indicates the DB engine. Value: MySQL, PostgreSQL, SQLServer'
            db.user_name: '- Indicates the default user name of database.'
            db.version: '- Indicates the database version.'
            flavor: '- Specifies the specification code. Read replica flavors ends with .rr.'
            id: '- ID of the read replica instance.'
            name: |-
                - Specifies the DB replica instance name. The DB instance name of the same type must be unique for the same
                tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
                contain only letters, digits, hyphens (-), and underscores  (_). Changing this parameter will create a new
                resource.
            private_ips: '- Indicates the private IP address list.'
            public_ips: |-
                - (Optional) Specifies floating IP to be assigned to the instance.
                This should be a list with single element only.
            region: |-
                - (Optional) Specifies the region of the replica instance. Changing this parameter will create a new
                resource.
            replica_of_id: '- Specifies ID of the replicated instance. Changing this parameter will create a new resource.'
            security_group_id: '- Indicates the security group which the replica instance belongs to.'
            ssl_enable: '- (Optional) Specifies whether SSL should be enabled for MySql instances.'
            subnet_id: '- Indicates the subnet id (OpenStack network ID).'
            volume: '- Specifies the volume information. Structure is documented below.'
            volume.disk_encryption_id: |-
                - (Optional) Specifies the key ID for disk encryption. Changing this parameter will create a new
                resource.
            volume.size: '- Indicates the volume size. Same as replicated instance disk size.'
            volume.type: |-
                - Specifies the volume type. Changing this parameter will create a new resource. Its value can be any of the
                following and is case-sensitive.
            vpc_id: '- Indicates the VPC ID (OpenStack router ID).'
        importStatements: []
    opentelekomcloud_rts_software_config_v1:
        subCategory: Resource Template Service (RTS)
        description: Manages an RTS Config resource within OpenTelekomCloud.
        name: opentelekomcloud_rts_software_config_v1
        title: opentelekomcloud_rts_software_config_v1
        examples:
            - name: myconfig
              manifest: |-
                {
                  "name": "${var.config_name}"
                }
              references:
                name: var.config_name
        argumentDocs:
            config: '- (Optional) The software configuration code.'
            group: '- (Optional) The namespace that groups this software configuration by when it is delivered to a server.'
            id: '- The id of the software config.'
            input_values: '- (Optional) A list of software configuration inputs.'
            name: '- (Required) The name of the software configuration.'
            options: '- (Optional) The software configuration options.'
            output_values: '- (Optional) A list of software configuration outputs.'
        importStatements: []
    opentelekomcloud_rts_software_deployment_v1:
        subCategory: Resource Template Service (RTS)
        description: Manages an RTS Deployment resource within OpenTelekomCloud.
        name: opentelekomcloud_rts_software_deployment_v1
        title: opentelekomcloud_rts_software_deployment_v1
        examples:
            - name: mydeployment
              manifest: |-
                {
                  "config_id": "${var.config_id}",
                  "server_id": "${var.server_id}"
                }
              references:
                config_id: var.config_id
                server_id: var.server_id
        argumentDocs:
            action: '- (Optional) The stack action that triggers this deployment resource.'
            config_id: '- (Required) The id of the software configuration resource running on an instance.'
            id: '- The id of the software deployment.'
            input_values: '- (Optional) The input data stored in the form of a key-value pair.'
            output_values: '- (Optional) The output data stored in the form of a key-value pair.'
            server_id: '- (Required) The id of the instance.'
            status: '- (Optional) The current status of deployment resources.'
            status_reason: '- (Optional) The cause of the current deployment resource status.'
            tenant_id: '- (Optional) The id of the authenticated tenant who can perform operations on the deployment resources.'
        importStatements: []
    opentelekomcloud_rts_stack_v1:
        subCategory: Resource Template Service (RTS)
        description: Manages an RTS Stack resource within OpenTelekomCloud.
        name: opentelekomcloud_rts_stack_v1
        title: opentelekomcloud_rts_stack_v1
        examples:
            - name: mystack
              manifest: |-
                {
                  "disable_rollback": true,
                  "name": "${var.name}",
                  "parameters": {
                    "image_id": "${var.image_id}",
                    "instance_type": "${var.instance_type}",
                    "network_id": "${var.network_id}"
                  },
                  "template_body": "  {\n    \"heat_template_version\": \"2016-04-08\",\n    \"description\": \"Simple template to deploy\",\n    \"parameters\": {\n        \"image_id\": {\n            \"type\": \"string\",\n            \"description\": \"Image to be used for compute instance\",\n            \"label\": \"Image ID\"\n        },\n        \"network_id\": {\n            \"type\": \"string\",\n            \"description\": \"The Network to be used\",\n            \"label\": \"Network UUID\"\n        },\n        \"instance_type\": {\n            \"type\": \"string\",\n            \"description\": \"Type of instance (Flavor) to be used\",\n            \"label\": \"Instance Type\"\n        }\n    },\n    \"resources\": {\n        \"my_instance\": {\n            \"type\": \"OS::Nova::Server\",\n            \"properties\": {\n                \"image\": {\n                    \"get_param\": \"image_id\"\n                },\n                \"flavor\": {\n                    \"get_param\": \"instance_type\"\n                },\n                \"networks\": [{\n                    \"network\": {\n                        \"get_param\": \"network_id\"\n                    }\n                }]\n            }\n        }\n    },\n    \"outputs\": {\n      \"InstanceIP\": {\n        \"description\": \"Instance IP\",\n        \"value\": { \"get_attr\": [\"my_instance\", \"first_address\"] }\n      }\n    }\n  }\n",
                  "timeout_mins": 60
                }
              references:
                name: var.name
        argumentDocs:
            capabilities: '- List of stack capabilities for stack.'
            disable_rollback: '- (Optional) Set to true to disable rollback of the stack if stack creation failed.'
            environment: '- (Optional) Tthe environment information about the stack.'
            files: '- (Optional) Files used in the environment.'
            name: '- (Required) A unique name for the stack. The value must meet the regular expression rule (^[a-zA-Z][a-zA-Z0-9_.-]{0,254}$). Changing this creates a new stack.'
            notification_topics: '- List of notification topics for stack.'
            outputs: '- A map of outputs from the stack.'
            parameters: '- (Optional) A list of Parameter structures that specify input parameters for the stack.'
            status: '- Specifies the stack status.'
            template_body: '- (Optional; Required if template_url is empty) Structure containing the template body. The template content must use the yaml syntax.'
            template_url: '- (Optional; Required if template_body is empty) Location of a file containing the template body.'
            timeout_mins: '- (Optional) Specifies the timeout duration.'
        importStatements: []
    opentelekomcloud_s3_bucket:
        subCategory: Object Storage Service (S3)
        description: Manages an S3 Bucket resource within OpenTelekomCloud.
        name: opentelekomcloud_s3_bucket
        title: opentelekomcloud_s3_bucket
        examples:
            - name: bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "tags": {
                    "Environment": "Dev",
                    "Name": "My bucket"
                  }
                }
            - name: bucket
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "s3-website-test.hashicorp.com",
                  "policy": "${file(\"policy.json\")}",
                  "website": [
                    {
                      "error_document": "error.html",
                      "index_document": "index.html",
                      "routing_rules": "[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"documents/\"\n    }\n}]\n"
                    }
                  ]
                }
            - name: bucket
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "s3-website-test.hashicorp.com",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "PUT",
                        "POST"
                      ],
                      "allowed_origins": [
                        "https://s3-website-test.hashicorp.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    }
                  ]
                }
            - name: bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
            - name: log_bucket
              manifest: |-
                {
                  "acl": "log-delivery-write",
                  "bucket": "my-tf-log-bucket"
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "logging": [
                    {
                      "target_bucket": "${opentelekomcloud_s3_bucket.log_bucket.id}",
                      "target_prefix": "log/"
                    }
                  ]
                }
              references:
                logging.target_bucket: opentelekomcloud_s3_bucket.log_bucket.id
            - name: bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "id": "log",
                      "prefix": "log/"
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "date": "2016-01-12"
                        }
                      ],
                      "id": "tmp",
                      "prefix": "tmp/"
                    }
                  ]
                }
            - name: versioning_bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-versioning-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "prefix": "config/"
                    }
                  ],
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
        argumentDocs:
            abort_incomplete_multipart_upload_days: |-
                - (Optional) Specifies the number of days after initiating
                a multipart upload when the multipart upload must be completed.
            acl: |-
                - (Optional) The canned ACL
                to apply. Defaults to private.
            allowed_headers: '- (Optional) Specifies which headers are allowed.'
            allowed_methods: '- (Required) Specifies which methods are allowed. Can be GET, PUT, POST, DELETE or HEAD.'
            allowed_origins: '- (Required) Specifies which origins are allowed.'
            arn: '- The ARN of the bucket. Will be of format arn:aws:s3:::bucketname.'
            bucket: |-
                - (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a
                random, unique name.
            bucket_domain_name: '- The bucket domain name. Will be of format bucketname.s3.amazonaws.com.'
            bucket_prefix: |-
                - (Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix.
                Conflicts with bucket.
            cors_rule: '- (Optional) A rule of Cross-Origin Resource Sharing (documented below).'
            date: '- (Optional) Specifies the date after which you want the corresponding action to take effect.'
            days: '- (Optional) Specifies the number of days after object creation when the specific rule action takes effect.'
            enabled: |-
                - (Optional) Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state.
                You can, however, suspend versioning on that bucket. If omitted, during bucket creation it will be in Disabled state.
            error_document: '- (Optional) An absolute path to the document to return in case of a 4XX error.'
            expiration: '- (Optional) Specifies a period in the object''s expire (documented below).'
            expired_object_delete_marker: |-
                - (Optional) On a versioned bucket (versioning-enabled or versioning-suspended bucket),
                you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
            expose_headers: '- (Optional) Specifies expose header in the response.'
            force_destroy: |-
                - (Optional, Default:false) A boolean that indicates all objects should be deleted from the bucket
                so that the bucket can be destroyed without error. These objects are not recoverable.
            hosted_zone_id: |-
                - The Route 53 Hosted Zone ID
                for this bucket's region.
            id: '- (Optional) Unique identifier for the rule.'
            index_document: |-
                - (Required, unless using redirect_all_requests_to) Amazon S3 returns this index document when
                requests are made to the root domain or any of the subfolders.
            lifecycle_rule: |-
                - (Optional) A configuration of object lifecycle management
                (documented below). The website object supports the following:
            logging: '- (Optional) A settings of bucket logging (documented below).'
            max_age_seconds: '- (Optional) Specifies time in seconds that browser can cache the response for a preflight request.'
            mfa_delete: |-
                - (Optional) Enable MFA delete for either Change the versioning state of your bucket or
                Permanently delete an object version. Default is false.
            noncurrent_version_expiration: '- (Optional) Specifies when noncurrent object versions expire (documented below).'
            policy: |-
                - (Optional) A valid bucket policy
                JSON document.
            prefix: '- (Optional) Object key prefix identifying one or more objects to which the rule applies.'
            redirect_all_requests_to: |-
                - (Optional) A hostname to redirect all website requests for this bucket to.
                Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting
                requests. The default is the protocol that is used in the original request.
            routing_rules: |-
                - (Optional) A json array containing routing rules
                describing redirect behavior and when redirects are applied.
            tags: '- (Optional) A mapping of tags to assign to the bucket.'
            target_bucket: '- (Required) The name of the bucket that will receive the log objects.'
            target_prefix: '- (Optional) To specify a key prefix for log objects.'
            versioning: '- (Optional) A state of versioning (documented below)'
            website: '- (Optional) A website object (documented below).'
            website_domain: |-
                - The domain of the website endpoint, if the bucket is configured with a website. If not,
                this will be an empty string. This is used to create Route 53 alias records.
            website_endpoint: '- The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.'
        importStatements:
            - terraform import opentelekomcloud_s3_bucket.bucket bucket-name
    opentelekomcloud_s3_bucket_object:
        subCategory: Object Storage Service (S3)
        description: Manages an S3 Bucket Object resource within OpenTelekomCloud.
        name: opentelekomcloud_s3_bucket_object
        title: opentelekomcloud_s3_bucket_object
        examples:
            - name: object
              manifest: |-
                {
                  "bucket": "your_bucket_name",
                  "etag": "${md5(file(\"path/to/file\"))}",
                  "key": "new_object_key",
                  "source": "path/to/file"
                }
              dependencies:
                opentelekomcloud_s3_bucket.examplebucket: |-
                    {
                      "acl": "private",
                      "bucket": "examplebuckettftest"
                    }
            - name: examplebucket_object
              manifest: |-
                {
                  "bucket": "${opentelekomcloud_s3_bucket.examplebucket.bucket}",
                  "key": "someobject",
                  "source": "index.html"
                }
              references:
                bucket: opentelekomcloud_s3_bucket.examplebucket.bucket
              dependencies:
                opentelekomcloud_s3_bucket.examplebucket: |-
                    {
                      "acl": "private",
                      "bucket": "examplebuckettftest"
                    }
            - name: examplebucket_object
              manifest: |-
                {
                  "bucket": "${opentelekomcloud_s3_bucket.examplebucket.bucket}",
                  "key": "someobject",
                  "server_side_encryption": "aws:kms",
                  "source": "index.html"
                }
              references:
                bucket: opentelekomcloud_s3_bucket.examplebucket.bucket
              dependencies:
                opentelekomcloud_s3_bucket.examplebucket: |-
                    {
                      "acl": "private",
                      "bucket": "examplebuckettftest"
                    }
        argumentDocs:
            acl: '- (Optional) The canned ACL to apply. Defaults to "private".'
            bucket: '- (Required) The name of the bucket to put the file in.'
            cache_control: |-
                - (Optional) Specifies caching behavior along the request/reply chain.
                Read w3c cache_control for further details.
            content: '- (Required unless source given) The literal content being uploaded to the bucket.'
            content_disposition: |-
                - (Optional) Specifies presentational information for the object.
                Read wc3 content_disposition for further information.
            content_encoding: '- (Optional) Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.'
            content_language: '- (Optional) The language the content is in e.g. en-US or en-GB.'
            content_type: '- (Optional) A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.'
            etag: |-
                - (Optional) Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
                This attribute is not compatible with kms_key_id.
            id: '- the key of the resource supplied above'
            key: '- (Required) The name of the object once it is in the bucket.'
            server_side_encryption: '- (Optional) Specifies server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".'
            source: '- (Required) The path to the source file being uploaded to the bucket.'
            version_id: '- A unique version ID value for the object, if bucket versioning is enabled.'
            website_redirect: '- (Optional) Specifies a target URL for website redirect.'
        importStatements: []
    opentelekomcloud_s3_bucket_policy:
        subCategory: Object Storage Service (S3)
        description: Manages an S3 Bucket Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_s3_bucket_policy
        title: opentelekomcloud_s3_bucket_policy
        examples:
            - name: b
              manifest: |-
                {
                  "bucket": "${opentelekomcloud_s3_bucket.b.id}",
                  "policy": "  {\n  \"Id\": \"MYBUCKETPOLICY\",\n  \"Statement\": [\n    {\n      \"Sid\": \"IPAllow\",\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"arn:aws:s3:::${opentelekomcloud_s3_bucket.b.bucket}/*\",\n      \"Condition\": {\n         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}\n      }\n    }\n  ]}\n"
                }
              references:
                bucket: opentelekomcloud_s3_bucket.b.id
              dependencies:
                opentelekomcloud_s3_bucket.b: |-
                    {
                      "bucket": "my-tf-test-bucket"
                    }
        argumentDocs:
            bucket: '- (Required) The name of the bucket to which to apply the policy.'
            policy: '- (Required) The text of the policy.'
        importStatements: []
    opentelekomcloud_sdrs_protected_instance_v1:
        subCategory: Storage Disaster Recovery Service (SDRS)
        description: Manages an SDRS Protected Instance resource within OpenTelekomCloud.
        name: opentelekomcloud_sdrs_protected_instance_v1
        title: opentelekomcloud_sdrs_protected_instance_v1
        examples:
            - name: instance_1
              manifest: |-
                {
                  "delete_target_server": true,
                  "description": "some interesting description",
                  "group_id": "${opentelekomcloud_sdrs_protectiongroup_v1.group_1.id}",
                  "name": "instance_create",
                  "server_id": "${opentelekomcloud_ecs_instance_v1.instance_1.id}",
                  "tags": {
                    "kuh": "value-create",
                    "muh": "value-create"
                  }
                }
              references:
                group_id: opentelekomcloud_sdrs_protectiongroup_v1.group_1.id
                server_id: opentelekomcloud_ecs_instance_v1.instance_1.id
              dependencies:
                opentelekomcloud_ecs_instance_v1.instance_1: |-
                    {
                      "availability_zone": "eu-de-01",
                      "flavor": "${var.flavor}",
                      "image_id": "${var.image_id}",
                      "name": "server_1",
                      "nics": [
                        {
                          "network_id": "${var.network_id}"
                        }
                      ],
                      "vpc_id": "${var.vpc_id}"
                    }
                opentelekomcloud_sdrs_protectiongroup_v1.group_1: |-
                    {
                      "domain_id": "${var.domain_id}",
                      "dr_type": "migration",
                      "name": "group_1",
                      "source_availability_zone": "eu-de-01",
                      "source_vpc_id": "${var.vpc_id}",
                      "target_availability_zone": "eu-de-02"
                    }
        argumentDocs:
            created_at: '- Specifies the time when a protected instance was created.'
            delete_target_eip: '- (Optional) Specifies whether to delete the EIP of the DR site server. The default value is false.'
            delete_target_server: '- (Optional) Specifies whether to delete the DR site server. The default value is false.'
            description: '- (Optional) The description of a protected instance. Changing this creates a new instance. Changing this will create a new resource.'
            group_id: '- (Required) Specifies the ID of the protection group where a protected instance is added. Changing this will create a new resource.'
            id: '-  ID of the protected instance.'
            ip_address: |-
                - (Optional) Specifies the IP address of the primary NIC on the DR site server.
                This parameter is valid only when subnet_id is specified. Changing this will create a new resource.
            name: '- (Required) The name of a protected instance.'
            priority_station: '- Specifies the current production site AZ of the protection group containing the protected instance.'
            server_id: '- (Required) Specifies the ID of the protected ECS instance. Changing this will create a new resource.'
            source: ': indicates that the current production site AZ is the source_availability_zone value.'
            subnet_id: '- (Optional) Specifies the network ID of the subnet. Changing this will create a new resource.'
            tags: '- (Optional) Tags key/value pairs to associate with the instance.'
            target: ': indicates that the current production site AZ is the target_availability_zone value.'
            target_id: '- Specifies the DR site server ID.'
            updated_at: '- Specifies the time when a protected instance was updated.'
        importStatements:
            - terraform import opentelekomcloud_sdrs_protected_instance_v1.instance_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_sdrs_protectiongroup_v1:
        subCategory: Storage Disaster Recovery Service (SDRS)
        description: Manages an SDRS Protection Group resource within OpenTelekomCloud.
        name: opentelekomcloud_sdrs_protectiongroup_v1
        title: opentelekomcloud_sdrs_protectiongroup_v1
        examples:
            - name: group_1
              manifest: |-
                {
                  "description": "test description",
                  "domain_id": "${data.opentelekomcloud_sdrs_domain_v1.dom_1.id}",
                  "dr_type": "migration",
                  "enable": true,
                  "name": "group_1",
                  "source_availability_zone": "eu-de-01",
                  "source_vpc_id": "${var.vpc_id}",
                  "target_availability_zone": "eu-de-02"
                }
              references:
                domain_id: data.opentelekomcloud_sdrs_domain_v1.dom_1.id
                source_vpc_id: var.vpc_id
        argumentDocs:
            created_at: '- (String) Time of creation of the protection group.'
            description: '- (Optional, String, ForceNew) The description of a protection group. Changing this creates a new group.'
            domain_id: |-
                - (Required, String, ForceNew) Specifies the ID of an active-active domain. Changing this creates a new group.
                An active-active domain id can be extracted from data/opentelekomcloud_sdrs_domain_v1 and shouldn't be confused
                with tenant domain.
            dr_type: |-
                - (Optional, String, ForceNew) Specifies the deployment model. The default value is migration indicating migration within a VPC.
                Changing this creates a new group.
            enable: '- (Optional, Boolean) Enables or disables the Protection group.'
            id: '- (String) ID of the protection group.'
            name: '- (Required, String) The name of a protection group.'
            source_availability_zone: '- (Required, String, ForceNew) Specifies the source AZ of a protection group. Changing this creates a new group.'
            source_vpc_id: '- (Required, String, ForceNew) Specifies the ID of the source VPC. Changing this creates a new group.'
            target_availability_zone: '- (Required, String, ForceNew) Specifies the target AZ of a protection group. Changing this creates a new group.'
            updated_at: '- (String) Time of last update of the protection group.'
        importStatements: []
    opentelekomcloud_sdrs_replication_attach_v1:
        subCategory: Storage Disaster Recovery Service (SDRS)
        description: Manages an SDRS Replication Pair Attachment resource within OpenTelekomCloud.
        name: opentelekomcloud_sdrs_replication_attach_v1
        title: opentelekomcloud_sdrs_replication_attach_v1
        examples:
            - name: attach_1
              manifest: |-
                {
                  "device": "/dev/vdb",
                  "instance_id": "${opentelekomcloud_sdrs_protected_instance_v1.instance_1.id}",
                  "replication_id": "${opentelekomcloud_sdrs_replication_pair_v1.pair_1.id}"
                }
              references:
                instance_id: opentelekomcloud_sdrs_protected_instance_v1.instance_1.id
                replication_id: opentelekomcloud_sdrs_replication_pair_v1.pair_1.id
              dependencies:
                opentelekomcloud_ecs_instance_v1.instance_1: |-
                    {
                      "availability_zone": "eu-de-02",
                      "flavor": "s3.medium.1",
                      "image_id": "${var.image_id}",
                      "name": "server_1",
                      "nics": [
                        {
                          "network_id": "${var.network_id}"
                        }
                      ],
                      "vpc_id": "${var.vpc_id}"
                    }
                opentelekomcloud_evs_volume_v3.volume_1: |-
                    {
                      "availability_zone": "eu-de-02",
                      "description": "first test volume",
                      "name": "volume_1",
                      "size": 12,
                      "volume_type": "SATA"
                    }
                opentelekomcloud_sdrs_protected_instance_v1.instance_1: |-
                    {
                      "delete_target_server": true,
                      "group_id": "${opentelekomcloud_sdrs_protectiongroup_v1.group_1.id}",
                      "name": "instance_create",
                      "server_id": "${opentelekomcloud_ecs_instance_v1.instance_1.id}"
                    }
                opentelekomcloud_sdrs_protectiongroup_v1.group_1: |-
                    {
                      "domain_id": "${data.opentelekomcloud_sdrs_domain_v1.domain_1.id}",
                      "dr_type": "migration",
                      "name": "group_1",
                      "source_availability_zone": "eu-de-02",
                      "source_vpc_id": "${var.vpc_id}",
                      "target_availability_zone": "eu-de-01"
                    }
                opentelekomcloud_sdrs_replication_pair_v1.pair_1: |-
                    {
                      "delete_target_volume": true,
                      "group_id": "${opentelekomcloud_sdrs_protectiongroup_v1.group_1.id}",
                      "name": "replication_1",
                      "volume_id": "${opentelekomcloud_evs_volume_v3.volume_1.id}"
                    }
        argumentDocs:
            create: '- Default is 10 minutes.'
            delete: '- Default is 10 minutes.'
            device: |-
                - (Required, String, ForceNew) Specifies the disk device name of a replication pair. There are several
                restrictions on this field as follows：
            id: '- The resource ID.'
            instance_id: '- (Required, String, ForceNew) Specifies the ID of a protected instance.'
            region: '- The attachment region.'
            replication_id: '- (Required, String, ForceNew) Specifies the ID of a replication pair.'
            status: '- The status of the SDRS protected instance.'
        importStatements: []
    opentelekomcloud_sdrs_replication_pair_v1:
        subCategory: Storage Disaster Recovery Service (SDRS)
        description: Manages an SDRS Replication Pair resource within OpenTelekomCloud.
        name: opentelekomcloud_sdrs_replication_pair_v1
        title: opentelekomcloud_sdrs_replication_pair_v1
        examples:
            - name: pair_1
              manifest: |-
                {
                  "delete_target_volume": true,
                  "description": "description",
                  "group_id": "${opentelekomcloud_sdrs_protectiongroup_v1.group_1.id}",
                  "name": "replication_1",
                  "volume_id": "${opentelekomcloud_evs_volume_v3.volume_1.id}"
                }
              references:
                group_id: opentelekomcloud_sdrs_protectiongroup_v1.group_1.id
                volume_id: opentelekomcloud_evs_volume_v3.volume_1.id
              dependencies:
                opentelekomcloud_evs_volume_v3.volume_1: |-
                    {
                      "availability_zone": "eu-de-02",
                      "description": "first test volume",
                      "name": "volume_1",
                      "size": 12,
                      "volume_type": "SATA"
                    }
                opentelekomcloud_sdrs_protectiongroup_v1.group_1: |-
                    {
                      "description": "test description",
                      "domain_id": "${data.opentelekomcloud_sdrs_domain_v1.dom_1.id}",
                      "dr_type": "migration",
                      "name": "group_1",
                      "source_availability_zone": "eu-de-01",
                      "source_vpc_id": "${var.vpc_id}",
                      "target_availability_zone": "eu-de-02"
                    }
        argumentDocs:
            delete_target_volume: |-
                - (Optional, Bool) Specifies whether to delete the disaster recovery site disk.
                The default value is false.
            description: |-
                - (Optional, String, ForceNew) Specifies the description of a replication pair. The value can contain
                a maximum of 64 characters and angle brackets (<) and (>) are not allowed.
            fault_level: '- The fault level of a replication pair.'
            group_id: '- (Required, String, ForceNew) Specifies the ID of a protection group.'
            id: '- The resource ID.'
            name: |-
                - (Required, String) Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
                The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
            region: '-  The resource region.'
            replication_model: |-
                - The replication mode of a replication pair. The default value is hypermetro,
                indicating synchronous replication.
            status: '- The status of a replication pair.'
            target_volume_id: '- The ID of the disk in the protection availability zone.'
            volume_id: |-
                - (Required, String, ForceNew) Specifies the ID of the production site disk.
                When the provider is successfully invoked, the disaster recovery site disk will be automatically created.
        importStatements: []
    opentelekomcloud_sfs_file_system_v2:
        subCategory: Scalable File Service (SFS)
        description: Manages an SFS File System resource within OpenTelekomCloud.
        name: opentelekomcloud_sfs_file_system_v2
        title: opentelekomcloud_sfs_file_system_v2
        examples:
            - name: share-file
              manifest: |-
                {
                  "description": "${var.share_description}",
                  "name": "${var.share_name}",
                  "share_proto": "NFS",
                  "size": 50,
                  "tags": {
                    "muh": "kuh"
                  }
                }
              references:
                description: var.share_description
                name: var.share_name
        argumentDocs:
            access_level: |-
                - (Optional) The access level of the shared file system. Changing this will create
                a new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
                resource instead.
            access_rule_status: '- The status of the share access rule.'
            access_to: |-
                - (Optional) The access that the back end grants or denies. Changing this will
                create new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
                resource instead.
            access_type: |-
                - (Optional) The type of the share access rule. Changing this will create a new
                access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2 resource instead.
            availability_zone: |-
                - (Optional) The availability zone name. Changing this parameter will create
                a new resource.
            description: '- (Optional) Describes the shared file system.'
            export_location: '- The address for accessing the shared file system.'
            host: '- The host name of the shared file system.'
            id: '- The UUID of the shared file system.'
            is_public: '- (Optional) The level of visibility for the shared file system.'
            metadata: |-
                - (Optional) Metadata key/value pairs as a dictionary of strings. Changing this will
                create a new resource.
            name: '- (Optional) The name of the shared file system.'
            region: |-
                - (Optional) The region in which to obtain the V2 SFS client. If omitted, the
                region argument of the provider is used. Changing this creates a new share.
            share_access_id: '- The UUID of the share access rule.'
            share_proto: '- (Optional) The protocol for sharing file systems. The default value is NFS.'
            share_type: |-
                - The storage service type assigned for the shared file system, such as
                high-performance storage (composed of SSDs) and large-capacity storage (composed of SATA disks).
            size: '- (Required) The size (GB) of the shared file system.'
            status: '- The status of the shared file system.'
            tags: '- (Optional) Tags key/value pairs to associate with the SFS File System.'
            volume_type: '- The volume type.'
        importStatements:
            - terraform import opentelekomcloud_sfs_file_system_v2 4779ab1c-7c1a-44b1-a02e-93dfc361b32d
    opentelekomcloud_sfs_share_access_rules_v2:
        subCategory: Scalable File Service (SFS)
        description: Manages an SFS Access Rules resource within OpenTelekomCloud.
        name: opentelekomcloud_sfs_share_access_rules_v2
        title: opentelekomcloud_sfs_share_access_rules_v2
        examples:
            - name: sfs_rules
              manifest: |-
                {
                  "access_rule": [
                    {
                      "access_level": "rw",
                      "access_to": "${opentelekomcloud_vpc_v1.vpc_1.id}",
                      "access_type": "cert"
                    },
                    {
                      "access_level": "rw",
                      "access_to": "${opentelekomcloud_vpc_v1.vpc_2.id}",
                      "access_type": "cert"
                    }
                  ],
                  "share_id": "${opentelekomcloud_sfs_file_system_v2.sfs_1.id}"
                }
              references:
                access_rule.access_to: opentelekomcloud_vpc_v1.vpc_2.id
                share_id: opentelekomcloud_sfs_file_system_v2.sfs_1.id
              dependencies:
                opentelekomcloud_sfs_file_system_v2.sfs_1: |-
                    {
                      "description": "${var.share_description}",
                      "name": "${var.share_name}",
                      "share_proto": "NFS",
                      "size": 50
                    }
                opentelekomcloud_vpc_v1.vpc_1: |-
                    {
                      "cidr": "192.168.0.0/16",
                      "name": "sfs_share_vpc_1"
                    }
                opentelekomcloud_vpc_v1.vpc_2: |-
                    {
                      "cidr": "192.168.0.0/16",
                      "name": "sfs_share_vpc_2"
                    }
        argumentDocs:
            access_rule: '- (Required) Specifies the access rules of SFS file share. Structure is documented below.'
            access_rule.access_level: |-
                - (Required) The access level of the shared file system. Possible values are ro (read-only)
                and rw (read-write). The default value is rw (read/write).
            access_rule.access_rule_status: '- The status of the share access rule.'
            access_rule.access_to: '- (Required) The access that the back end grants or denies.'
            access_rule.access_type: |-
                - (Optional) The type of the share access rule. The value cert indicates
                that the certificate is used to access the storage.
            access_rule.share_access_id: '- The UUID of the share access rule.'
            share_id: '- (Required) The UUID of the shared file system.'
        importStatements:
            - terraform import opentelekomcloud_sfs_share_access_rules_v2 4779ab1c-7c1a-44b1-a02e-93dfc361b32d
    opentelekomcloud_sfs_turbo_share_v1:
        subCategory: Scalable File Service (SFS)
        description: Manages an SFS Turbo Share resource within OpenTelekomCloud.
        name: opentelekomcloud_sfs_turbo_share_v1
        title: opentelekomcloud_sfs_turbo_share_v1
        examples:
            - name: sfs-turbo
              manifest: |-
                {
                  "availability_zone": "${var.az}",
                  "name": "sfs-turbo",
                  "security_group_id": "${var.sg_id}",
                  "share_proto": "NFS",
                  "size": 500,
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.az
                security_group_id: var.sg_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
            - name: sfs-turbo
              manifest: |-
                {
                  "availability_zone": "${var.az}",
                  "enhanced": true,
                  "name": "sfs-turbo",
                  "security_group_id": "${var.sg_id}",
                  "share_proto": "NFS",
                  "share_type": "PERFORMANCE",
                  "size": 500,
                  "subnet_id": "${var.subnet_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                availability_zone: var.az
                security_group_id: var.sg_id
                subnet_id: var.subnet_id
                vpc_id: var.vpc_id
        argumentDocs:
            availability_zone: |-
                - (Required, String, ForceNew) Specifies the availability zone where the file system is located.
                Changing this will create a new resource.
            available_capacity: '- The available capacity of the SFS Turbo file system in the unit of GB.'
            create: '- Default is 10 minute.'
            crypt_key_id: |-
                - (Optional, String, ForceNew) Specifies the ID of a KMS key to encrypt the file system.
                Changing this will create a new resource.
            delete: '- Default is 10 minute.'
            enhanced: |-
                - (Optional, Bool, ForceNew) Specifies whether the file system is enhanced or not. Changing this will
                create a new resource with type StandardEnhanced/PerformanceEnhanced.
            expand_type: -Specifies the extension type
            export_location: '- The mount point of the SFS Turbo file system.'
            id: '- The UUID of the SFS Turbo file system.'
            name: |-
                - (Required, String, ForceNew) Specifies the name of an SFS Turbo file system. The value contains 4 to 64
                characters and must start with a letter. Changing this will create a new resource.
            region: |-
                - (Optional, String, ForceNew) The region in which to create the SFS Turbo resource. If omitted, the
                provider-level region will be used. Changing this creates a new SFS Turbo resource.
            security_group_id: '- (Required, String, ForceNew) Specifies the security group ID.'
            share_proto: |-
                - (Optional, String, ForceNew) Specifies the protocol for sharing file systems. The valid value is NFS.
                Changing this will create a new resource.
            share_type: |-
                - (Optional, String, ForceNew) Specifies the file system type. The valid values are STANDARD and PERFORMANCE.
                Changing this will create a new resource.
            size: |-
                - (Required, Int) Specifies the capacity of a common file system, in GB. The value ranges
                from 500 to 32768.
            subnet_id: '- (Required, String, ForceNew) Specifies the network ID of the subnet. Changing this will create a new resource.'
            version: '- The version ID of the SFS Turbo file system.'
            vpc_id: '- (Required, String, ForceNew) Specifies the VPC ID. Changing this will create a new resource.'
        importStatements:
            - terraform import opentelekomcloud_sfs_turbo_share_v1 9e3dd316-64g9-0245-8456-71e9387d71ab
    opentelekomcloud_smn_subscription_v2:
        subCategory: Simple Message Notification (SMN)
        description: Manages an SMN Subscription resource within OpenTelekomCloud.
        name: opentelekomcloud_smn_subscription_v2
        title: opentelekomcloud_smn_subscription_v2
        examples:
            - name: subscription_1
              manifest: |-
                {
                  "endpoint": "mailtest@gmail.com",
                  "protocol": "email",
                  "remark": "O\u0026M",
                  "topic_urn": "${opentelekomcloud_smn_topic_v2.topic_1.id}"
                }
              references:
                topic_urn: opentelekomcloud_smn_topic_v2.topic_1.id
              dependencies:
                opentelekomcloud_smn_topic_v2.topic_1: |-
                    {
                      "display_name": "The display name of topic_1",
                      "name": "topic_1"
                    }
            - name: subscription_2
              manifest: |-
                {
                  "endpoint": "13600000000",
                  "protocol": "sms",
                  "remark": "O\u0026M",
                  "topic_urn": "${opentelekomcloud_smn_topic_v2.topic_1.id}"
                }
              references:
                topic_urn: opentelekomcloud_smn_topic_v2.topic_1.id
              dependencies:
                opentelekomcloud_smn_topic_v2.topic_1: |-
                    {
                      "display_name": "The display name of topic_1",
                      "name": "topic_1"
                    }
        argumentDocs:
            "0": indicates that the subscription is not confirmed.
            "1": indicates that the subscription is confirmed.
            "3": indicates that the subscription is canceled.
            endpoint: '- (Required) Specifies the message endpoint.'
            owner: '- The project ID of the topic creator.'
            project_name: '- (Optional) The project name for the subscription.'
            protocol: |-
                - (Required) Specifies protocol of the message endpoint. Currently, email,
                sms, http, and https are supported.
            remark: |-
                - (Optional) Specifies the remark information. The remarks must be a UTF-8-coded
                character string containing 128 bytes.
            status: '- The subscription status.'
            subscription_urn: '- The resource identifier of a subscription.'
            topic_urn: '- (Required) Specifies the resource identifier of a topic, which is unique.'
        importStatements: []
    opentelekomcloud_smn_topic_attribute_v2:
        subCategory: Simple Message Notification (SMN)
        description: Manages an SMN Topic Attribute resource within OpenTelekomCloud.
        name: opentelekomcloud_smn_topic_attribute_v2
        title: opentelekomcloud_smn_topic_attribute_v2
        examples:
            - name: attribute_1
              manifest: |-
                {
                  "attribute_name": "access_policy",
                  "topic_attribute": "{\n  \"Version\": \"2016-09-07\",\n  \"Id\": \"__default_policy_ID\",\n  \"Statement\": [\n    {\n      \"Sid\": \"__service_pub_0\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": [\n          \"OBS\"\n        ]\n      },\n      \"Action\": [\n        \"SMN:Publish\",\n        \"SMN:QueryTopicDetail\"\n      ],\n      \"Resource\": \"${opentelekomcloud_smn_topic_v2.topic_1.topic_urn}\"\n    }\n  ]\n}\n",
                  "topic_urn": "${opentelekomcloud_smn_topic_v2.topic_1.topic_urn}"
                }
              references:
                topic_urn: opentelekomcloud_smn_topic_v2.topic_1.topic_urn
              dependencies:
                opentelekomcloud_smn_topic_v2.topic_1: |-
                    {
                      "display_name": "The display name of topic_1",
                      "name": "topic_1"
                    }
        argumentDocs:
            attribute_name: '- (Required) Attribute name. Valid value is access_policy.'
            topic_attribute: '- (Required) Topic attribute value. The value cannot exceed 30 KB.'
            topic_urn: '- (Required) Resource identifier of a topic, which is unique.'
        importStatements:
            - terraform import opentelekomcloud_smn_topic_attribute_v2.attribute_1 urn:smn:eu-de:5045c215010c440d91b2f7dce1f3753b:example/access_policy
    opentelekomcloud_smn_topic_v2:
        subCategory: Simple Message Notification (SMN)
        description: Manages an SMN Topic resource within OpenTelekomCloud.
        name: opentelekomcloud_smn_topic_v2
        title: opentelekomcloud_smn_topic_v2
        examples:
            - name: topic_1
              manifest: |-
                {
                  "display_name": "The display name of topic_1",
                  "name": "topic_1",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  }
                }
        argumentDocs:
            create_time: '- Time when the topic was created.'
            display_name: |-
                - (Optional, String) Topic display name, which is presented as the
                name of the email sender in an email message.
            name: '- (Required, ForceNew, String) The name of the topic to be created.'
            project_name: '- (Optional, ForceNew, String) The project name for the topic.'
            push_policy: |-
                - Message pushing policy. 0 indicates that the message
                sending fails and the message is cached in the queue. 1 indicates that the
                failed message is discarded.
            tags: '- (Optional, Map) Tags key/value pairs to associate with the instance.'
            topic_urn: '- Resource identifier of a topic, which is unique.'
            update_time: '- Time when the topic was updated.'
        importStatements: []
    opentelekomcloud_swr_domain_v2:
        subCategory: Software Repository for Container (SWR)
        description: Manages an SWR Domain resource within OpenTelekomCloud.
        name: opentelekomcloud_swr_domain_v2
        title: opentelekomcloud_swr_domain_v2
        examples:
            - name: domain_1
              manifest: |-
                {
                  "access_domain": "${var.access_domain}",
                  "deadline": "forever",
                  "organization": "${opentelekomcloud_swr_organization_v2.org_1.name}",
                  "permission": "read",
                  "repository": "${opentelekomcloud_swr_organization_v2.repo_1.name}"
                }
              references:
                access_domain: var.access_domain
                organization: opentelekomcloud_swr_organization_v2.org_1.name
                repository: opentelekomcloud_swr_organization_v2.repo_1.name
              dependencies:
                opentelekomcloud_swr_organization_v2.org_1: |-
                    {
                      "name": "organization_1"
                    }
                opentelekomcloud_swr_repository_v2.repo_1: |-
                    {
                      "category": "linux",
                      "description": "Test repository",
                      "is_public": false,
                      "name": "repository_1",
                      "organization": "${opentelekomcloud_swr_organization_v2.org_1.name}"
                    }
        argumentDocs:
            access_domain: '- (Required) The name of the domain for image sharing.'
            created: '- Indicates the creation time.'
            creator_id: '- Username ID of the domain creator.'
            creator_name: '- Username of the domain creator.'
            deadline: |-
                - (Required) End date of image sharing (UTC). When the value is set to forever,
                the image will be permanently available for the domain. The validity period is calculated by day.
                The shared images expire at 00:00:00 on the day after the end date.
            description: '- (Optional) Specifies SWR domain description.'
            organization: '- (Required) The name of the repository organization.'
            permission: '- (Required) Permission to be granted. Currently, only the read permission is supported.'
            repository: '- (Required) The name of the repository.'
            status: '- Indicates the domain is valid (true) or expired (false).'
            updated: '- Indicates the domain when was last updated.'
        importStatements: []
    opentelekomcloud_swr_organization_permissions_v2:
        subCategory: Software Repository for Container (SWR)
        description: Manages an SWR Organization Permissions resource within OpenTelekomCloud.
        name: opentelekomcloud_swr_organization_permissions_v2
        title: opentelekomcloud_swr_organization_permissions_v2
        examples:
            - name: user_1
              manifest: |-
                {
                  "auth": 3,
                  "organization": "${opentelekomcloud_swr_organization_v2.org_1.name}",
                  "user_id": "${var.user_id}",
                  "username": "${var.username}"
                }
              references:
                organization: opentelekomcloud_swr_organization_v2.org_1.name
                user_id: var.user_id
                username: var.username
              dependencies:
                opentelekomcloud_swr_organization_v2.org_1: |-
                    {
                      "name": "organization_1"
                    }
        argumentDocs:
            auth: |-
                - (Required) User permission that is configured.
                The value can be 1, 3, or 7. 7 ― manage, 3 ―  write, 1 ― read.
            organization: '- (Required) The name of the organization (namespace) to be accessed.'
            user_id: '- (Required) The ID of the existing Open Telekom Cloud user.'
            username: '- (Required) The username of the existing Open Telekom Cloud user.'
        importStatements: []
    opentelekomcloud_swr_organization_v2:
        subCategory: Software Repository for Container (SWR)
        description: Manages an SWR Organization resource within OpenTelekomCloud.
        name: opentelekomcloud_swr_organization_v2
        title: opentelekomcloud_swr_organization_v2
        examples:
            - name: org_1
              manifest: |-
                {
                  "name": "organization_1"
                }
        argumentDocs:
            auth: '- User permission. The value can be 1, 3, or 7. 7: manage 3: write 1: read'
            creator_name: '- Username of the organization creator.'
            name: |-
                - (Required) The name of the organization (namespace) to be created.
                Enter 1 to 64 characters, starting with a lowercase letter and ending with a lowercase letter or digit.
                Only lowercase letters, digits, periods (.), underscores (_), and hyphens (-) are allowed.
                Periods, underscores, and hyphens cannot be placed next to each other.
                A maximum of two consecutive underscores are allowed.
            organization_id: '- Numeric ID of the organization.'
        importStatements:
            - terraform import opentelekomcloud_swr_organization_v2.org_1 organization_1
    opentelekomcloud_swr_repository_v2:
        subCategory: Software Repository for Container (SWR)
        description: Manages an SWR Repository resource within OpenTelekomCloud.
        name: opentelekomcloud_swr_repository_v2
        title: opentelekomcloud_swr_repository_v2
        examples:
            - name: repo_1
              manifest: |-
                {
                  "category": "linux",
                  "description": "Test repository",
                  "is_public": false,
                  "name": "repository_1",
                  "organization": "${opentelekomcloud_swr_organization_v2.org_1.name}"
                }
              references:
                organization: opentelekomcloud_swr_organization_v2.org_1.name
              dependencies:
                opentelekomcloud_swr_organization_v2.org_1: |-
                    {
                      "name": "organization_1"
                    }
        argumentDocs:
            category: |-
                - (Optional) Repository category. The value can be app_server, linux, framework_app, database,
                lang, other, windows, arm.
            description: '- (Optional) Repository description.'
            internal_path: '- Intra-cluster image address for docker pull.'
            is_public: |-
                - Whether the repository is public.
                When the value is true, it indicates the repository is public.
                When the value is false, it indicates the repository is private.
            name: |-
                - Enter 1 to 128 characters, starting and ending with a lowercase letter or digit.
                Only lowercase letters, digits, periods (.), slashes (/), underscores (_), and hyphens (-) are allowed.
                Periods, underscores, and hyphens cannot be placed next to each other.
                A maximum of two consecutive underscores are allowed.
            num_images: '- Number of image tags in a repository.'
            organization: '- The name of the repository organization.'
            path: '- Image address for docker pull.'
            repository_id: '- Numeric ID of the repository.'
            size: '- Repository size.'
        importStatements:
            - terraform import opentelekomcloud_swr_repository_v2.repo_1 organization_1/repository_1
    opentelekomcloud_tms_tags_v1:
        subCategory: Tag Management Service (TMS)
        description: Manages an TMS Tags resource within OpenTelekomCloud.
        name: opentelekomcloud_tms_tags_v1
        title: opentelekomcloud_tms_tags_v1
        examples:
            - name: test
              manifest: |-
                {
                  "tags": [
                    {
                      "key": "foo",
                      "value": "bar"
                    }
                  ]
                }
        argumentDocs:
            create: '- Default is 3 minute.'
            delete: '- Default is 3 minute.'
            id: '- The resource ID.'
            tags: '- (Required, List, ForceNew) Specifies an array of one or more predefined tags.'
            tags.key: |-
                - (Required, String, ForceNew) Specifies the tag key. The value can contain up to 36 characters.
                Only letters, digits, hyphens (-), underscores (_), and Unicode characters from \u4e00 to \u9fff are allowed.
            tags.value: |-
                - (Required, String, ForceNew) Specifies the tag value. The value can contain up to 43 characters.
                Only letters, digits, periods (.), hyphens (-), and underscores (_), and Unicode characters from \u4e00 to \u9fff
                are allowed.
        importStatements: []
    opentelekomcloud_vbs_backup_policy_v2:
        subCategory: Volume Backup Service (VBS)
        description: Manages an VBS Backup Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_vbs_backup_policy_v2
        title: opentelekomcloud_vbs_backup_policy_v2
        examples:
            - name: vbs_policy1
              manifest: |-
                {
                  "frequency": 1,
                  "name": "policy_001",
                  "rentention_num": 7,
                  "retain_first_backup": "N",
                  "start_time": "12:00",
                  "status": "ON",
                  "tags": {
                    "key": "k1",
                    "value": "v1"
                  }
                }
            - name: vbs_policy2
              manifest: |-
                {
                  "frequency": 3,
                  "name": "policy_002",
                  "rentention_num": 5,
                  "resources": [
                    "${var.volume_id}"
                  ],
                  "retain_first_backup": "N",
                  "start_time": "12:00",
                  "status": "ON"
                }
              references:
                resources: var.volume_id
        argumentDocs:
            frequency: |-
                - (Optional) Specifies the backup interval. The value is in the range of 1 to 14 days.
                Either this field or week_frequency must be specified.
            id: '- Specifies a backup policy ID.'
            key: '- (Required) Specifies the tag key. A tag key consists of up to 36 characters, chosen from letters, digits, hyphens (-), and underscores (_).'
            name: |-
                - (Required) Specifies the policy name. The value is a string of 1 to 64 characters that
                can contain letters, digits, underscores (_), and hyphens (-). It cannot start with default.
            policy_resource_count: '- Specifies the number of volumes associated with the backup policy.'
            rentention_day: |-
                - (Optional) Specifies days of retained backups. Minimum value is 2.
                Either this field or rentention_num must be specified.
            rentention_num: |-
                - (Optional) Specifies number of retained backups. Minimum value is 2.
                Either this field or rentention_day must be specified.
            resources: |-
                - (Optional) Specifies one or more volumes associated with the backup policy.
                Any previously associated backup policy will no longer apply.
            retain_first_backup: |-
                - (Required) Specifies whether to retain the first backup in the current month.
                Possible values are Y or N.
            start_time: |-
                - (Required) Specifies the start time(UTC) of the backup job. The value is in the
                HH:mm format. You need to set the execution time on a full hour. You can set multiple execution
                times, and use commas (,) to separate one time from another.
            status: '- (Optional) Specifies the backup policy status. Possible values are ON or OFF. Defaults to ON.'
            tags: '- (Optional) Represents the list of tags to be configured for the backup policy.'
            value: '- (Required) Specifies the tag value. A tag value consists of 0 to 43 characters, chosen from letters, digits, hyphens (-), and underscores (_).'
            week_frequency: |-
                - (Optional) Specifies on which days of each week backup jobs are executed.
                The value can be one or more of the following: "SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT".
                Either this field or frequency must be specified.
        importStatements: []
    opentelekomcloud_vbs_backup_share_v2:
        subCategory: Volume Backup Service (VBS)
        description: Manages an VBS Backup Share resource within OpenTelekomCloud.
        name: opentelekomcloud_vbs_backup_share_v2
        title: opentelekomcloud_vbs_backup_share_v2
        examples:
            - name: backupshare
              manifest: |-
                {
                  "backup_id": "${var.backup_id}",
                  "to_project_ids": "${var.to_project_ids}"
                }
              references:
                backup_id: var.backup_id
                to_project_ids: var.to_project_ids
        argumentDocs:
            availability_zone: '- The AZ where the backup resides.'
            backup_id: '- (Required) The ID of the backup to be shared. Changing the parameter will create new resource.'
            backup_name: '- The backup name.'
            backup_status: '- The status of the VBS backup.'
            container: '- The container of the backup.'
            description: '- The status of the VBS backup.'
            service_metadata: '- The metadata of the vbs backup.'
            share_ids: '- The backup share IDs.'
            size: '- The size of the vbs backup.'
            snapshot_id: '- The ID of the snapshot associated with the backup.'
            to_project_ids: '- (Required) The IDs of projects with which the backup is shared. Changing the parameter will create new resource.'
            volume_id: '- The ID of the tenant to which the backup belongs.'
        importStatements: []
    opentelekomcloud_vbs_backup_v2:
        subCategory: Volume Backup Service (VBS)
        description: Manages an VBS Backup resource within OpenTelekomCloud.
        name: opentelekomcloud_vbs_backup_v2
        title: opentelekomcloud_vbs_backup_v2
        examples:
            - name: mybackup
              manifest: |-
                {
                  "name": "${var.backup_name}",
                  "volume_id": "${var.volume_id}"
                }
              references:
                name: var.backup_name
                volume_id: var.volume_id
        argumentDocs:
            availability_zone: '- The AZ where the backup resides.'
            container: '- The container of the backup.'
            create: '- Default is 10 minutes.'
            delete: '- Default is 3 minutes.'
            description: '- (Optional) The description of the vbs backup. Changing the parameter will create new resource.'
            id: '- The id of the vbs backup.'
            key: '- (Required) Specifies the tag key.'
            name: '- (Required) The name of the vbs backup. Changing the parameter will create new resource.'
            service_metadata: '- The metadata of the vbs backup.'
            size: '- The size of the vbs backup.'
            snapshot_id: '- (Optional) The snapshot id of the disk to be backed up. Changing the parameter will create new resource.'
            status: '- The status of the VBS backup.'
            tags: '- (Optional) List of tags to be configured for the backup resources. Changing the parameter will create new resource.'
            value: '- (Required) Specifies the tag value.'
            volume_id: '- (Required) The id of the disk to be backed up. Changing the parameter will create new resource.'
        importStatements: []
    opentelekomcloud_vpc_bandwidth_associate_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Bandwidth Association resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_bandwidth_associate_v2
        title: opentelekomcloud_vpc_bandwidth_associate_v2
        examples:
            - name: associate
              manifest: |-
                {
                  "bandwidth": "${opentelekomcloud_vpc_bandwidth_v2.band20m.id}",
                  "floating_ips": [
                    "${opentelekomcloud_networking_floatingip_v2.ip1.id}",
                    "${opentelekomcloud_networking_floatingip_v2.ip2.id}"
                  ]
                }
              references:
                bandwidth: opentelekomcloud_vpc_bandwidth_v2.band20m.id
                floating_ips: opentelekomcloud_networking_floatingip_v2.ip1.id
              dependencies:
                opentelekomcloud_networking_floatingip_v2.ip1: '{}'
                opentelekomcloud_networking_floatingip_v2.ip2: '{}'
                opentelekomcloud_vpc_bandwidth_v2.band20m: |-
                    {
                      "name": "bandwidth-20MBit",
                      "size": 20
                    }
        argumentDocs:
            "1": .
            backup_charge_mode: |-
                - (Optional) Specifies whether the dedicated bandwidth used by the EIP that has been removed from
                a shared bandwidth is billed by traffic or by bandwidth.
            backup_size: |-
                - (Optional) Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that has been
                removed from a shared bandwidth.
            bandwidth: '- (Required) Specifies ID of the bandwidth to be assigned.'
            floating_ips: '- (Required) Specifies IDs of floating IPs to be added to the bandwidth.'
        importStatements: []
    opentelekomcloud_vpc_bandwidth_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Bandwidth resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_bandwidth_v2
        title: opentelekomcloud_vpc_bandwidth_v2
        examples:
            - name: band_100mb
              manifest: |-
                {
                  "name": "shared-100Mbit",
                  "size": 100
                }
        argumentDocs:
            id: '- Specifies the bandwidth ID, which uniquely identifies the bandwidth.'
            name: '- (Required) Specifies the bandwidth name.'
            size: |-
                - (Required) Specifies the bandwidth size.
                The value ranges from 5 Mbit/s to 1000 Mbit/s by default.
            status: '- Specifies the bandwidth status.'
        importStatements: []
    opentelekomcloud_vpc_eip_v1:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC EIP resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_eip_v1
        title: opentelekomcloud_vpc_eip_v1
        examples:
            - name: eip_1
              manifest: |-
                {
                  "bandwidth": [
                    {
                      "charge_mode": "traffic",
                      "name": "test",
                      "share_type": "PER",
                      "size": 8
                    }
                  ],
                  "publicip": [
                    {
                      "type": "5_bgp"
                    }
                  ]
                }
            - name: eip_1
              manifest: |-
                {
                  "bandwidth": [
                    {
                      "charge_mode": "traffic",
                      "name": "test",
                      "share_type": "PER",
                      "size": 8
                    }
                  ],
                  "publicip": [
                    {
                      "name": "my_eip",
                      "type": "5_bgp"
                    }
                  ]
                }
        argumentDocs:
            bandwidth: '- (Required) The bandwidth object.'
            bandwidth.charge_mode: |-
                - (Optional) This is a reserved field. If the system supports charging
                by traffic and this field is specified, then you are charged by traffic for elastic
                IP addresses. Changing this creates a new eip.
            bandwidth.name: |-
                - (Required) The bandwidth name, which is a string of 1 to 64 characters
                that contain letters, digits, underscores (_), and hyphens (-).
            bandwidth.share_type: |-
                - (Required) Whether the bandwidth is shared or exclusive. Changing
                this creates a new eip.
            bandwidth.size: '- (Required) The bandwidth size. The value ranges from 1 to 300 Mbit/s.'
            bandwidth.tags: '- (Optional) Tags key/value pairs to associate with the eip.'
            bandwidth.unbind_port: |-
                - (Optional) The value true indicates that port will be unassigned from EIP.
                This parameter work only with already allocated resource.
            bandwidth/charge_mode: '- See Argument Reference above.'
            bandwidth/name: '- See Argument Reference above.'
            bandwidth/share_type: '- See Argument Reference above.'
            bandwidth/size: '- See Argument Reference above.'
            publicip: '- (Required) The elastic IP address object.'
            publicip.ip_address: |-
                - (Optional) The value must be a valid IP address in the available
                IP address segment. Changing this creates a new eip.
            publicip.name: '- (Required) The ip name, which is a string of 1 to 64 characters.'
            publicip.port_id: |-
                - (Optional) The port id which this eip will associate with. If the value
                is "" or this not specified, the eip will be in unbind state.
            publicip.type: |-
                - (Required) The value must be a type supported by the system.
                The value can be 5_bgp, 5_mailbgp and 5_gray. Changing this creates a new eip.
            publicip/ip_address: '- See Argument Reference above.'
            publicip/name: '- See Argument Reference above.'
            publicip/port_id: '- See Argument Reference above.'
            publicip/type: '- See Argument Reference above.'
            region: |-
                - (Optional) The region in which to obtain the V1 Networking client.
                If omitted, the region argument of the provider is used. Changing this
                creates a new service.
            tags: '- See Argument Reference above.'
        importStatements: []
    opentelekomcloud_vpc_flow_log_v1:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Flow Log resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_flow_log_v1
        title: opentelekomcloud_vpc_flow_log_v1
        examples:
            - name: flowlog1
              manifest: |-
                {
                  "description": "${var.flow_log_desc}",
                  "log_group_id": "${opentelekomcloud_logtank_group_v2.log_group1.id}",
                  "log_topic_id": "${opentelekomcloud_logtank_topic_v2.log_topic1.id}",
                  "name": "${var.flow_log_name}",
                  "resource_id": "${opentelekomcloud_vpc_v1.vpc_v1.id}",
                  "resource_type": "vpc",
                  "traffic_type": "all"
                }
              references:
                description: var.flow_log_desc
                log_group_id: opentelekomcloud_logtank_group_v2.log_group1.id
                log_topic_id: opentelekomcloud_logtank_topic_v2.log_topic1.id
                name: var.flow_log_name
                resource_id: opentelekomcloud_vpc_v1.vpc_v1.id
              dependencies:
                opentelekomcloud_logtank_group_v2.log_group1: |-
                    {
                      "group_name": "${var.log_group_name}"
                    }
                opentelekomcloud_logtank_topic_v2.log_topic1: |-
                    {
                      "group_id": "${opentelekomcloud_logtank_group_v2.log_group1.id}",
                      "topic_name": "${var.log_topic_name}"
                    }
                opentelekomcloud_vpc_v1.vpc_v1: |-
                    {
                      "cidr": "${var.vpc_cidr}",
                      "name": "${var.vpc_name}"
                    }
        argumentDocs:
            admin_state: '- Whether to enable the VPC flow log function.'
            description: |-
                - (Optinal) Provides supplementary information about the VPC flow log.
                The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
            id: '- The VPC flow log ID in UUID format.'
            log_group_id: |-
                - (Required) Specifies the log group ID.
                Changing this creates a new VPC flow log.
            log_topic_id: |-
                - (Required) Specifies the log topic ID.
                Changing this creates a new VPC flow log.
            name: |-
                - (Optional) Specifies the flow log name.
                The value is a string of 1 to 64 characters that can contain letters, digits, underscores (_), hyphens (-) and periods (.).
            resource_id: |-
                - (Required) Specifies the ID of resource type.
                Changing this creates a new VPC flow log.
            resource_type: |-
                - (Required) Specifies the type of resource on which to create the VPC flow log.
                The value can be port, vpc and network.
                Changing this creates a new VPC flow log.
            status: '- The status of the flow log. The value can be ACTIVE, DOWN or ERROR.'
            traffic_type: |-
                - (Required) Specifies the type of traffic to log. The value can be all, accept and reject.
                Changing this creates a new VPC flow log.
        importStatements: []
    opentelekomcloud_vpc_peering_connection_accepter_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Peering Accepter resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_peering_connection_accepter_v2
        title: opentelekomcloud_vpc_peering_connection_accepter_v2
        examples:
            - name: peer
              manifest: |-
                {
                  "accept": true,
                  "provider": "opentelekomcloud.peer",
                  "vpc_peering_connection_id": "${opentelekomcloud_vpc_peering_connection_v2.peering.id}"
                }
              references:
                vpc_peering_connection_id: opentelekomcloud_vpc_peering_connection_v2.peering.id
              dependencies:
                opentelekomcloud_vpc_peering_connection_v2.peering: |-
                    {
                      "name": "${var.peer_name}",
                      "peer_tenant_id": "${var.tenant_id}",
                      "peer_vpc_id": "${opentelekomcloud_vpc_v1.vpc_peer.id}",
                      "provider": "opentelekomcloud.main",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_main.id}"
                    }
                opentelekomcloud_vpc_v1.vpc_main: |-
                    {
                      "cidr": "${var.vpc_cidr}",
                      "name": "${var.vpc_name}",
                      "provider": "opentelekomcloud.main"
                    }
                opentelekomcloud_vpc_v1.vpc_peer: |-
                    {
                      "cidr": "${var.peer_vpc_cidr}",
                      "name": "${var.peer_vpc_name}",
                      "provider": "opentelekomcloud.peer"
                    }
        argumentDocs:
            accept: '- (Optional)- Whether or not to accept the peering request. Defaults to false.'
            id: '- The VPC peering connection ID.'
            name: "- \tThe VPC peering connection name."
            peer_tenant_id: '- The Tenant Id of the accepter tenant.'
            peer_vpc_id: '- The VPC ID of the accepter tenant.'
            status: '- The VPC peering connection status.'
            vpc_id: '- The ID of requester VPC involved in a VPC peering connection.'
            vpc_peering_connection_id: '- (Required) The VPC Peering Connection ID to manage. Changing this creates a new VPC peering connection accepter.'
        importStatements: []
    opentelekomcloud_vpc_peering_connection_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Peering resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_peering_connection_v2
        title: opentelekomcloud_vpc_peering_connection_v2
        examples:
            - name: peering
              manifest: |-
                {
                  "name": "${var.peer_conn_name}",
                  "peer_vpc_id": "${var.accepter_vpc_id}",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                name: var.peer_conn_name
                peer_vpc_id: var.accepter_vpc_id
                vpc_id: var.vpc_id
        argumentDocs:
            id: '- The VPC peering connection ID.'
            name: '- (Required) Specifies the name of the VPC peering connection. The value can contain 1 to 64 characters.'
            peer_tenant_id: '- (Optional) Specified the Tenant Id of the accepter tenant. Changing this creates a new VPC peering connection.'
            peer_vpc_id: '- (Required) Specifies the VPC ID of the accepter tenant. Changing this creates a new VPC peering connection.'
            status: '- The VPC peering connection status. The value can be PENDING_ACCEPTANCE, REJECTED, EXPIRED, DELETED, or ACTIVE.'
            vpc_id: '- (Required) Specifies the ID of a VPC involved in a VPC peering connection. Changing this creates a new VPC peering connection.'
        importStatements: []
    opentelekomcloud_vpc_route_table_v1:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Route Table resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_route_table_v1
        title: opentelekomcloud_vpc_route_table_v1
        examples:
            - name: table_1
              manifest: |-
                {
                  "description": "created by terraform with routes",
                  "name": "my_route",
                  "route": [
                    {
                      "description": "peering rule",
                      "destination": "172.16.0.0/16",
                      "nexthop": "${opentelekomcloud_vpc_peering_connection_v2.peering.id}",
                      "type": "peering"
                    }
                  ],
                  "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                }
              references:
                route.nexthop: opentelekomcloud_vpc_peering_connection_v2.peering.id
                vpc_id: opentelekomcloud_vpc_v1.vpc_1.id
              dependencies:
                opentelekomcloud_vpc_peering_connection_v2.peering: |-
                    {
                      "name": "my_peering",
                      "peer_vpc_id": "${opentelekomcloud_vpc_v1.vpc_2.id}",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                    }
                opentelekomcloud_vpc_subnet_v1.subnet_1-1: |-
                    {
                      "cidr": "192.168.0.0/24",
                      "gateway_ip": "192.168.0.1",
                      "name": "vpc-1-subnet-1-1",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                    }
                opentelekomcloud_vpc_subnet_v1.subnet_1-2: |-
                    {
                      "cidr": "192.168.10.0/24",
                      "gateway_ip": "192.168.10.1",
                      "name": "vpc-1-subnet-1-2",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                    }
                opentelekomcloud_vpc_subnet_v1.subnet_2-1: |-
                    {
                      "cidr": "172.16.10.0/24",
                      "gateway_ip": "172.16.10.1",
                      "name": "vpc-2-subnet-2-1",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_2.id}"
                    }
                opentelekomcloud_vpc_v1.vpc_1: |-
                    {
                      "cidr": "192.168.0.0/16",
                      "name": "vpc-1"
                    }
                opentelekomcloud_vpc_v1.vpc_2: |-
                    {
                      "cidr": "172.16.0.0/16",
                      "name": "vpc-2"
                    }
            - name: table_1
              manifest: |-
                {
                  "description": "created by terraform with subnets",
                  "name": "my_table",
                  "route": [
                    {
                      "description": "peering rule",
                      "destination": "172.16.0.0/16",
                      "nexthop": "${opentelekomcloud_vpc_peering_connection_v2.peering.id}",
                      "type": "peering"
                    }
                  ],
                  "subnets": [
                    "${opentelekomcloud_vpc_subnet_v1.subnet_1-1.id}",
                    "${opentelekomcloud_vpc_subnet_v1.subnet_1-2.id}"
                  ],
                  "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                }
              references:
                route.nexthop: opentelekomcloud_vpc_peering_connection_v2.peering.id
                subnets: opentelekomcloud_vpc_subnet_v1.subnet_1-1.id
                vpc_id: opentelekomcloud_vpc_v1.vpc_1.id
              dependencies:
                opentelekomcloud_vpc_peering_connection_v2.peering: |-
                    {
                      "name": "my_peering",
                      "peer_vpc_id": "${opentelekomcloud_vpc_v1.vpc_2.id}",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                    }
                opentelekomcloud_vpc_subnet_v1.subnet_1-1: |-
                    {
                      "cidr": "192.168.0.0/24",
                      "gateway_ip": "192.168.0.1",
                      "name": "vpc-1-subnet-1-1",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                    }
                opentelekomcloud_vpc_subnet_v1.subnet_1-2: |-
                    {
                      "cidr": "192.168.10.0/24",
                      "gateway_ip": "192.168.10.1",
                      "name": "vpc-1-subnet-1-2",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                    }
                opentelekomcloud_vpc_subnet_v1.subnet_2-1: |-
                    {
                      "cidr": "172.16.10.0/24",
                      "gateway_ip": "172.16.10.1",
                      "name": "vpc-2-subnet-2-1",
                      "vpc_id": "${opentelekomcloud_vpc_v1.vpc_2.id}"
                    }
                opentelekomcloud_vpc_v1.vpc_1: |-
                    {
                      "cidr": "192.168.0.0/16",
                      "name": "vpc-1"
                    }
                opentelekomcloud_vpc_v1.vpc_2: |-
                    {
                      "cidr": "172.16.0.0/16",
                      "name": "vpc-2"
                    }
        argumentDocs:
            create: '- Default is 10 minutes.'
            created_at: '- Specifies the time (UTC) when the route table is created.'
            delete: '- Default is 10 minutes.'
            description: |-
                - (Optional, String) Specifies the supplementary information about the route table.
                The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
            id: '- The resource ID in UUID format.'
            name: |-
                - (Required, String) Specifies the route table name. The value is a string of no more than
                64 characters that can contain letters, digits, underscores (_), hyphens (-), and periods (.).
            region: |-
                - (Optional, String, ForceNew) The region in which to create the vpc route table.
                If omitted, the provider-level region will be used. Changing this creates a new resource.
            route: |-
                - (Optional, List) Specifies the route object list. The route object
                is documented below.
            route.description: |-
                - (Optional, String) Specifies the supplementary information about the route.
                The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
            route.destination: |-
                - (Required, String) Specifies the destination address in the CIDR notation format,
                for example, 192.168.200.0/24. The destination of each route must be unique and cannot overlap
                with any subnet in the VPC.
            route.nexthop: '- (Required, String) Specifies the next hop.'
            route.type: |-
                - (Required, String) Specifies the route type. Currently, the value can be:
                ecs, eni, vip, nat, peering, vpn, dc and cc.
            subnets: '- (Optional, List) Specifies an array of one or more subnets associating with the route table.'
            updated_at: '- Specifies the time (UTC) when the route table is updated.'
            vpc_id: |-
                - (Required, String, ForceNew) Specifies the VPC ID for which a route table is to be added.
                Changing this creates a new resource.
        importStatements: []
    opentelekomcloud_vpc_route_v2:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Route Table resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_route_v2
        title: opentelekomcloud_vpc_route_v2
        examples:
            - name: vpc_route
              manifest: |-
                {
                  "destination": "192.168.0.0/16",
                  "nexthop": "${var.nexthop}",
                  "type": "peering",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                nexthop: var.nexthop
                vpc_id: var.vpc_id
        argumentDocs:
            destination: '- (Required) Specifies the destination IP address or CIDR block. Changing this creates a new Route.'
            id: '- The route ID.'
            nexthop: '- (Required) Specifies the next hop. If the route type is peering, enter the VPC peering connection ID. Changing this creates a new Route.'
            tenant_id: '- (Optional) Specifies the tenant ID. Only the administrator can specify the tenant ID of other tenant. Changing this creates a new Route.'
            type: '- (Required) Specifies the route type. Currently, the value can only be peering. Changing this creates a new Route.'
            vpc_id: '- (Required) Specifies the VPC for which a route is to be added. Changing this creates a new Route.'
        importStatements: []
    opentelekomcloud_vpc_subnet_v1:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Subnet resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_subnet_v1
        title: opentelekomcloud_vpc_subnet_v1
        examples:
            - name: subnet_v1
              manifest: |-
                {
                  "cidr": "${var.subnet_cidr}",
                  "gateway_ip": "${var.subnet_gateway_ip}",
                  "name": "${var.subnet_name}",
                  "ntp_addresses": "10.100.0.33,10.100.0.34",
                  "vpc_id": "${opentelekomcloud_vpc_v1.vpc_v1.id}"
                }
              references:
                cidr: var.subnet_cidr
                gateway_ip: var.subnet_gateway_ip
                name: var.subnet_name
                vpc_id: opentelekomcloud_vpc_v1.vpc_v1.id
              dependencies:
                opentelekomcloud_vpc_v1.vpc_v1: |-
                    {
                      "cidr": "${var.vpc_cidr}",
                      "name": "${var.vpc_name}"
                    }
            - name: subnet_with_tags
              manifest: |-
                {
                  "cidr": "${var.subnet_cidr}",
                  "gateway_ip": "${var.subnet_gateway_ip}",
                  "name": "${var.subnet_name}",
                  "ntp_addresses": "10.100.0.33,10.100.0.34",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "vpc_id": "${opentelekomcloud_vpc_v1.vpc_v1.id}"
                }
              references:
                cidr: var.subnet_cidr
                gateway_ip: var.subnet_gateway_ip
                name: var.subnet_name
                vpc_id: opentelekomcloud_vpc_v1.vpc_v1.id
            - name: subnet_v6
              manifest: |-
                {
                  "availability_zone": "eu-de-02",
                  "cidr": "192.168.0.0/16",
                  "description": "some description",
                  "gateway_ip": "192.168.0.1",
                  "ipv6_enable": true,
                  "name": "subnet_test_ipv6",
                  "ntp_addresses": "10.100.0.33,10.100.0.34",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "vpc_id": "${opentelekomcloud_vpc_v1.vpc_1.id}"
                }
              references:
                vpc_id: opentelekomcloud_vpc_v1.vpc_1.id
        argumentDocs:
            availability_zone: |-
                - (Optional) Identifies the availability zone (AZ) to which the subnet belongs.
                The value must be an existing AZ in the system. Changing this creates a new Subnet.
            cidr: |-
                - (Required) Specifies the network segment on which the subnet resides. The value must be in CIDR format.
                The value must be within the CIDR block of the VPC. The subnet mask cannot be greater than 28.
                Changing this creates a new Subnet.
            cidr_v6: '- Specifies the IPv6 subnet CIDR block. If the subnet is an IPv4 subnet, this parameter is not returned.'
            description: '- (Optional) A description of the VPC subnet.'
            dhcp_enable: |-
                - (Optional) Specifies whether the DHCP function is enabled for the subnet. The value can
                be true or false. If this parameter is left blank, it is set to true by default.
            dns_list: |-
                - (Optional) Specifies the DNS server address list of a subnet. This field is required if you
                need to use more than two DNS servers. This parameter value is the superset of both DNS server address
                1 and DNS server address 2.
            gateway_ip: |-
                - (Required) Specifies the gateway of the subnet. The value must be a valid IP address.
                The value must be an IP address in the subnet segment. Changing this creates a new Subnet.
            gateway_ip_v6: '- Specifies the IPv6 subnet gateway. If the subnet is an IPv4 subnet, this parameter is not returned.'
            id: '- Specifies a resource ID in UUID format. Same as OpenStack network ID (OS_NETWORK_ID).'
            ipv6_enable: |-
                - (Optional) Specifies whether IPv6 is enabled. If IPv6 is enabled, you can use IPv6 CIDR blocks. The value can
                be true or false. If this parameter is left blank, it is set to false by default.
            name: |-
                - (Required) The subnet name. The value is a string of 1 to 64 characters that can contain letters,
                digits, underscores (_), and hyphens (-).
            network_id: '- Specifies the OpenStack network ID.'
            ntp_addresses: '- (Optional) Specifies the NTP server address configured for the subnet.'
            primary_dns: |-
                - (Optional) Specifies the IP address of DNS server 1 on the subnet. The value must be a
                valid IP address. Default is 100.125.4.25, OpenTelekomCloud internal DNS server.
            secondary_dns: |-
                - (Optional) Specifies the IP address of DNS server 2 on the subnet. The value must be a
                valid IP address. Default is 100.125.129.199, OpenTelekomCloud secondary internal DNS server.
            status: '- Specifies the status of the subnet. The value can be ACTIVE, DOWN, UNKNOWN, or ERROR.'
            subnet_id: '- Specifies the OpenStack subnet ID.'
            tags: '- (Optional) The key/value pairs to associate with the subnet.'
            vpc_id: '- (Required) Specifies the ID of the VPC to which the subnet belongs. Changing this creates a new Subnet.'
        importStatements:
            - terraform import opentelekomcloud_vpc_subnet_v1.subnet_v1 4779ab1c-7c1a-44b1-a02e-93dfc361b32d
    opentelekomcloud_vpc_v1:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC resource within OpenTelekomCloud.
        name: opentelekomcloud_vpc_v1
        title: opentelekomcloud_vpc_v1
        examples:
            - name: vpc_v1
              manifest: |-
                {
                  "cidr": "${var.vpc_cidr}",
                  "name": "${var.vpc_name}"
                }
              references:
                cidr: var.vpc_cidr
                name: var.vpc_name
            - name: vpc_with_tags
              manifest: |-
                {
                  "cidr": "${var.vpc_cidr}",
                  "name": "${var.vpc_name}",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  }
                }
              references:
                cidr: var.vpc_cidr
                name: var.vpc_name
            - name: vpc_sec_cidr
              manifest: |-
                {
                  "cidr": "192.168.0.0/16",
                  "description": "description",
                  "name": "tf_vpc",
                  "secondary_cidr": "23.9.0.0/16",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  }
                }
        argumentDocs:
            cidr: |-
                - (Required) The range of available subnets in the VPC. The value ranges from
                10.0.0.0/8 to 10.255.255.0/24, 172.16.0.0/12 to 172.31.255.0/24,
                or 192.168.0.0/16 to 192.168.255.0/24.
            description: '- (Optional) A description of the VPC.'
            name: |-
                - (Required) The name of the VPC. The name must be unique for a tenant. The value is a string of
                no more than 64 characters and can contain digits, letters, underscores (_), and hyphens (-).
            secondary_cidr: |-
                - (Optional) Secondary CIDR block that can be added to VPCs.
                The value cannot contain the following: 100.64.0.0/1, 214.0.0.0/7, 198.18.0.0/15, 169.254.0.0/16,
                0.0.0.0/8, 127.0.0.0/8, 240.0.0.0/4, 172.31.0.0/16, 192.168.0.0/16.
                Currently, only one secondary CIDR block can be added to each VPC.
            shared: |-
                - (Optional) Specifies whether the shared SNAT should be used or not. Is also
                required for cross-tenant sharing. Shared SNAT only avadilable in eu-de region.
                Deprecated, VPC Shared SNAT End of Life from 01.03.2024, please do not use.
            status: |-
                - The current status of the desired VPC. Can be either CREATING,
                OK, DOWN, PENDING_UPDATE, PENDING_DELETE or ERROR.
            tags: '- (Optional) The key/value pairs to associate with the VPC.'
        importStatements: []
    opentelekomcloud_vpcep_endpoint_v1:
        subCategory: VPC Endpoint (VPCEP)
        description: Manages a VPCEP Endpoint resource within OpenTelekomCloud.
        name: opentelekomcloud_vpcep_endpoint_v1
        title: opentelekomcloud_vpcep_endpoint_v1
        examples:
            - name: endpoint
              manifest: |-
                {
                  "enable_dns": true,
                  "port_ip": "192.168.0.12",
                  "service_id": "${opentelekomcloud_vpcep_service_v1.service.id}",
                  "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.id}",
                  "tags": {
                    "fizz": "buzz"
                  },
                  "vpc_id": "${opentelekomcloud_vpcep_service_v1.service.vpc_id}",
                  "whitelist": [
                    "127.0.0.1"
                  ]
                }
              references:
                service_id: opentelekomcloud_vpcep_service_v1.service.id
                subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.id
                vpc_id: opentelekomcloud_vpcep_service_v1.service.vpc_id
              dependencies:
                opentelekomcloud_lb_loadbalancer_v2.lb_1: |-
                    {
                      "vip_subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.subnet_id}"
                    }
                opentelekomcloud_vpcep_service_v1.service: |-
                    {
                      "name": "service_1",
                      "port": [
                        {
                          "client_port": 80,
                          "server_port": 8080
                        }
                      ],
                      "port_id": "${opentelekomcloud_lb_loadbalancer_v2.lb_1.vip_port_id}",
                      "server_type": "LB",
                      "tags": {
                        "key": "value"
                      },
                      "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                    }
        argumentDocs:
            198.19.128.0/20.enable_dns: '- (Optional) Specifies whether to create a private domain name. The default value is false.'
            198.19.128.0/20.enable_whitelist: |-
                - (Optional) Specifies whether to enable access control.
                This parameter is available only if you create a VPC endpoint for connecting to an interface VPC endpoint service.
            198.19.128.0/20.port_ip: '- (Optional) Specifies the IP address for accessing the associated VPC endpoint service.'
            198.19.128.0/20.route_tables: '- (Optional) Lists the IDs of route tables.'
            198.19.128.0/20.tags: '- (Optional) Lists the resource tags.'
            198.19.128.0/20.whitelist: |-
                - (Optional) Specifies an array of whitelisted IPs for controlling access to the VPC endpoint.
                IPv4 addresses or CIDR blocks can be specified to control access when you create a VPC endpoint.
                This parameter is mandatory only when you create a VPC endpoint for connecting to an interface VPC endpoint service.
            dns_names: |-
                - Specifies the domain name for accessing the associated VPC endpoint service.
                This parameter is only available when enable_dns is set to true.
            id: '- ID of VPC endpoint.'
            marker_id: '- Specifies the packet ID of the VPC endpoint.'
            project_id: '- Specifies the project ID.'
            service_id: '- (Required) Specifies the ID of the VPC endpoint service.'
            service_name: '- Specifies the name of the VPC endpoint service.'
            service_type: '- Specifies the type of the VPC endpoint service that is associated with the VPC endpoint.'
            subnet_id: |-
                - (Optional) The value must be the ID of the subnet (OpenStack network) created in the VPC specified
                by vpc_id and in the format of the UUID.
                This parameter is mandatory only if you create a VPC endpoint for connecting to an interface VPC endpoint service.
            vpc_id: '- (Required) Specifies the ID of the VPC (OpenStack router) where the VPC endpoint is to be created.'
        importStatements: []
    opentelekomcloud_vpcep_service_v1:
        subCategory: VPC Endpoint (VPCEP)
        description: Manages a VPCEP Service resource within OpenTelekomCloud.
        name: opentelekomcloud_vpcep_service_v1
        title: opentelekomcloud_vpcep_service_v1
        examples:
            - name: service
              manifest: |-
                {
                  "name": "service_1",
                  "port": [
                    {
                      "client_port": 80,
                      "server_port": 8080
                    }
                  ],
                  "port_id": "${opentelekomcloud_lb_loadbalancer_v2.lb_1.vip_port_id}",
                  "server_type": "LB",
                  "tags": {
                    "key": "value"
                  },
                  "vpc_id": "${var.vpc_id}",
                  "whitelist": [
                    "${var.domain_id_1}",
                    "${var.domain_id_2}"
                  ]
                }
              references:
                port_id: opentelekomcloud_lb_loadbalancer_v2.lb_1.vip_port_id
                vpc_id: var.vpc_id
                whitelist: var.domain_id_1
              dependencies:
                opentelekomcloud_lb_loadbalancer_v2.lb_1: |-
                    {
                      "vip_subnet_id": "${var.os_subnet_id}"
                    }
        argumentDocs:
            LB: ': The backend resource is an enhanced load balancer.'
            VIP: ': The backend resource is a virtual IP address that functions as a physical server hosting virtual resources.'
            VM: ': The backend resource is a server.'
            approval_enabled: '- (Optional) Specifies whether connection approval is required.'
            close: ': indicates that the TOA and Proxy Protocol methods are neither used.'
            "false": |-
                : indicates that connection approval is not required.
                The created VPC endpoint is in the accepted state.
            gateway: |-
                : VPC endpoint services of this type are configured by operations people.
                You can use them directly without the need to create one by yourselves.
            id: '- ID of VPC endpoint service'
            interface: and gateway.
            name: |-
                - (Optional) Specifies the name of the VPC endpoint service.
                The value contains a maximum of 16 characters, including letters, digits, underscores (_), and hyphens (-).
            open: ': indicates that the TOA and Proxy Protocol methods are both used.'
            pool_id: '- (Optional) Specifies the ID of the cluster associated with the target VPCEP resource.'
            port: '- (Required) Lists the port mappings opened to the VPC endpoint service. See below for the details.'
            port.client_port: '- (Required) Specifies the port for accessing the VPC endpoint.'
            port.protocol: |-
                - (Required) Specifies the protocol used in port mappings. The value can be TCP or UDP.
                The default value is TCP.
            port.server_port: '- (Required) Specifies the port for accessing the VPC endpoint service.'
            port_id: |-
                - (Required) Specifies the ID for identifying the backend resource of the VPC endpoint service.
                The value is as follows:
            proxy_open: ': indicates that the Proxy Protocol method is used.'
            regionName.serviceId: .
            regionName.serviceName.serviceId: .
            server_type: '- (Required) Specifies the resource type.'
            service_type: |-
                - (Optional) Specifies the type of the VPC endpoint service.
                Only your private services can be configured into interface VPC endpoint services.
            tags: '- (Optional) Map of the resource tags.'
            tcp_proxy: |-
                - (Optional) Specifies whether the client IP address and port number or marker_id information is
                transmitted to the server.
                This parameter is available only when the server can parse fields tcp option and tcp payload.
            toa_open: ': indicates that the TOA method is used.'
            "true": |-
                : indicates that connection approval is required.
                The created VPC endpoint is in the pendingAcceptance state until the owner of the associated VPC endpoint
                service approves the connection.
            vip_port_id: '- (Optional) Specifies the ID of the virtual NIC to which the virtual IP address is bound.'
            vpc_id: '- (Optional) Specifies the ID of the VPC (router) to which the backend resource of the VPC endpoint service belongs.'
            whitelist: '- (Optional) Lists of domain IDs of target users.'
        importStatements: []
    opentelekomcloud_vpnaas_endpoint_group_v2:
        subCategory: Virtual Private Network (VPN)
        description: Manages a VPNAAS Endpoint Group resource within OpenTelekomCloud.
        name: opentelekomcloud_vpnaas_endpoint_group_v2
        title: opentelekomcloud_vpnaas_endpoint_group_v2
        examples:
            - name: group_1
              manifest: |-
                {
                  "endpoints": [
                    "10.2.0.0/24",
                    "10.3.0.0/24"
                  ],
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "name": "Group 1",
                  "type": "cidr"
                }
        argumentDocs:
            description: |-
                - (Optional) The human-readable description for the group.
                Changing this updates the description of the existing group.
            endpoints: |-
                - List of endpoints of the same type, for the endpoint group. The values will depend on the type.
                Changing this creates a new group.
            name: |-
                - (Optional) The name of the group. Changing this updates the name of
                the existing group.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an endpoint group. If omitted, the
                region argument of the provider is used. Changing this creates a new group.
            tenant_id: |-
                - (Optional) The owner of the group. Required if admin wants to
                create an endpoint group for another project. Changing this creates a new group.
            type: |-
                -  The type of the endpoints in the group. A valid value is subnet, cidr, network, router, or vlan.
                Changing this creates a new group.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_vpnaas_ike_policy_v2:
        subCategory: Virtual Private Network (VPN)
        description: Manages a VPNAAS IKE Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_vpnaas_ike_policy_v2
        title: opentelekomcloud_vpnaas_ike_policy_v2
        examples:
            - name: policy_1
              manifest: |-
                {
                  "name": "my_policy"
                }
        argumentDocs:
            auth_algorithm: |-
                - (Optional) The authentication hash algorithm. Valid values are md5,
                sha1, sha2-256, sha2-384, sha2-512. Default is sha1.
            description: '- (Optional) The human-readable description for the policy.'
            encapsulation_mode: '- See Argument Reference above.'
            encryption_algorithm: |-
                - (Optional) The encryption algorithm. Valid values are 3des, aes-128, aes-192 and so on.
                The default value is aes-128.
            ike_version: '- (Optional) The IKE mode. Valid values are v1 and v2. Default is v1.'
            lifetime: '- (Optional) The lifetime of the security association. Consists of Unit and Value.'
            name: '- (Optional) The name of the policy.'
            pfs: |-
                - (Optional) The perfect forward secrecy mode. Valid values are group1, group2, group5 and so on.
                Default is group5.
            phase1_negotiation_mode: '- (Optional) The IKE mode. Valid values are main and aggressive. Default is main.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a VPN service. If omitted, the
                region argument of the provider is used. Changing this creates a new service.
            tenant_id: |-
                - (Optional) The owner of the policy. Required if admin wants to
                create a service for another policy. Changing this creates a new policy.
            transform_protocol: '- See Argument Reference above.'
            unit: '- (Optional) The units for the lifetime of the security association. A valid value is seconds. Default is seconds.'
            value: '- (Optional) The value for the lifetime of the security association. Default is 3600.'
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_vpnaas_ipsec_policy_v2:
        subCategory: Virtual Private Network (VPN)
        description: Manages a VPNAAS IPSEC Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_vpnaas_ipsec_policy_v2
        title: opentelekomcloud_vpnaas_ipsec_policy_v2
        examples:
            - name: policy_1
              manifest: |-
                {
                  "name": "my_policy"
                }
        argumentDocs:
            auth_algorithm: |-
                - (Optional) The authentication hash algorithm. Valid values are md5, sha1, sha2-256, sha2-384, sha2-512.
                Default is sha1.
            description: '- (Optional) The human-readable description for the policy.'
            encapsulation_mode: '- (Optional) The encapsulation mode. Default is tunnel.'
            encryption_algorithm: |-
                - (Optional) The encryption algorithm. Valid values are 3des, aes-128, aes-192 and so on.
                The default value is aes-128.
            lifetime: '- (Optional) The lifetime of the security association. Consists of Unit and Value.'
            name: '- (Optional) The name of the policy.'
            pfs: |-
                - (Optional) The perfect forward secrecy mode. Valid values are group1, group2, group5, group14,
                group15, group16, group19, group20, group21 or disable Default is group5.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an IPSec policy. If omitted, the
                region argument of the provider is used. Changing this creates a new policy.
            tenant_id: |-
                - (Optional) The owner of the policy. Required if admin wants to
                create a policy for another project. Changing this creates a new policy.
            transform_protocol: '- (Optional) The transform protocol. Valid values are esp, ah and ah-esp. Default is esp.'
            unit: '- (Optional) The units for the lifetime of the security association. Default is seconds.'
            value: '- (Optional) The value for the lifetime of the security association. Must be a positive integer. Default is 3600.'
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_vpnaas_service_v2:
        subCategory: Virtual Private Network (VPN)
        description: Manages a VPNAAS Service resource within OpenTelekomCloud.
        name: opentelekomcloud_vpnaas_service_v2
        title: opentelekomcloud_vpnaas_service_v2
        examples:
            - name: service_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "name": "my_service",
                  "router_id": "14a75700-fc03-4602-9294-26ee44f366b3"
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the resource. Can either be true (Up) or false (Down).
                Changing this updates the administrative state of the existing service.
            description: |-
                - (Optional) The human-readable description for the service.
                Changing this updates the description of the existing service.
            external_v4_ip: '- The read-only external (public) IPv4 address that is used for the VPN service.'
            external_v6_ip: '- The read-only external (public) IPv6 address that is used for the VPN service.'
            name: |-
                - (Optional) The name of the service. Changing this updates the name of
                the existing service.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a VPN service. If omitted, the
                region argument of the provider is used. Changing this creates a new service.
            router_id: '- (Required) The ID of the router. Changing this creates a new service.'
            status: |-
                - Indicates whether IPsec VPN service is currently operational. Values are ACTIVE,
                DOWN, BUILD, ERROR, PENDING_CREATE, PENDING_UPDATE or PENDING_DELETE.
            subnet_id: '- (Optional) SubnetID is the ID of the subnet. Default is null.'
            tenant_id: |-
                - (Optional) The owner of the service. Required if admin wants to
                create a service for another project. Changing this creates a new service.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    opentelekomcloud_vpnaas_site_connection_v2:
        subCategory: Virtual Private Network (VPN)
        description: Manages a VPNAAS Site Connection resource within OpenTelekomCloud.
        name: opentelekomcloud_vpnaas_site_connection_v2
        title: opentelekomcloud_vpnaas_site_connection_v2
        examples:
            - name: conn_1
              manifest: |-
                {
                  "ikepolicy_id": "${opentelekomcloud_vpnaas_ike_policy_v2.policy_2.id}",
                  "ipsecpolicy_id": "${opentelekomcloud_vpnaas_ipsec_policy_v2.policy_1.id}",
                  "local_ep_group_id": "${opentelekomcloud_vpnaas_endpoint_group_v2.group_2.id}",
                  "name": "connection_1",
                  "peer_address": "192.168.10.1",
                  "peer_ep_group_id": "${opentelekomcloud_vpnaas_endpoint_group_v2.group_1.id}",
                  "peer_id": "192.168.10.1",
                  "psk": "secret",
                  "tags": {
                    "foo": "bar",
                    "key": "value"
                  },
                  "vpnservice_id": "${opentelekomcloud_vpnaas_service_v2.service_1.id}"
                }
              references:
                ikepolicy_id: opentelekomcloud_vpnaas_ike_policy_v2.policy_2.id
                ipsecpolicy_id: opentelekomcloud_vpnaas_ipsec_policy_v2.policy_1.id
                local_ep_group_id: opentelekomcloud_vpnaas_endpoint_group_v2.group_2.id
                peer_ep_group_id: opentelekomcloud_vpnaas_endpoint_group_v2.group_1.id
                vpnservice_id: opentelekomcloud_vpnaas_service_v2.service_1.id
        argumentDocs:
            action: |-
                - (Optional) The dead peer detection (DPD) action.
                A valid value is clear, hold, restart, disabled or restart-by-peer. Default value is hold.
            admin_state_up: |-
                - (Optional) The administrative state of the resource. Can either be up(true) or
                down(false). Changing this updates the administrative state of the existing connection.
            description: |-
                - (Optional) The human-readable description for the connection.
                Changing this updates the description of the existing connection.
            dpd: '- (Optional) A dictionary with dead peer detection (DPD) protocol controls.'
            ikepolicy_id: '- (Required) The ID of the IKE policy. Changing this creates a new connection.'
            initiator: '- (Optional) A valid value is response-only or bi-directional.'
            interval: |-
                - (Optional) The dead peer detection (DPD) interval, in seconds.
                A valid value is a positive integer. Default is 30.
            ipsecpolicy_id: '- (Required) The ID of the IPsec policy. Changing this creates a new connection.'
            local_ep_group_id: |-
                - (Optional) The ID for the endpoint group that contains private subnets for the
                local side of the connection. You must specify this parameter with the peer_ep_group_id parameter unless
                in backward-compatible mode where peer_cidrs is provided with a subnet_id for the VPN service.
                Changing this updates the existing connection.
            local_id: |-
                - (Optional) An ID to be used instead of the external IP address for a virtual router used in
                traffic between instances on different networks in east-west traffic. Most often, local ID would be domain name,
                email address, etc. If this is not configured then the external IP address will be used as the ID.
            mtu: |-
                - (Optional) The maximum transmission unit (MTU) value to address fragmentation.
                Minimum value is 68 for IPv4, and 1280 for IPv6.
            name: |-
                - (Optional) The name of the connection. Changing this updates the name of
                the existing connection.
            peer_address: '- (Required) The peer gateway public IPv4 or IPv6 address or FQDN.'
            peer_cidrs: '- (Optional) Unique list of valid peer private CIDRs in the form <net_address>/.'
            peer_ep_group_id: |-
                - (Optional) The ID for the endpoint group that contains private CIDRs in the form
                <net_address>/ for the peer side of the connection. You must specify this parameter with the
                local_ep_group_id parameter unless in backward-compatible mode where peer_cidrs is provided
                with a subnet_id for the VPN service.
            peer_id: |-
                - (Required) The peer router identity for authentication. A valid value is an IPv4 address,
                IPv6 address, e-mail address, key ID, or FQDN. Typically, this value matches the peer_address value.
                Changing this updates the existing policy.
            psk: '- (Required) The pre-shared key. A PSK can contain 6 to 128 characters. Spaces and the following special characters are not allowed: <>&?*''".'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an IPSec site connection. If omitted, the
                region argument of the provider is used. Changing this creates a new site connection.
            tags: '- (Optional) The key/value pairs to associate with the connection.'
            tenant_id: |-
                - (Optional) The owner of the connection. Required if admin wants to
                create a connection for another project. Changing this creates a new connection.
            timeout: |-
                - (Optional) The dead peer detection (DPD) timeout in seconds.
                A valid value is a positive integer that is greater than the DPD interval value. Default is 120.
            value_specs: '- (Optional) Map of additional options.'
            vpnservice_id: '- (Required) The ID of the VPN service. Changing this creates a new connection.'
        importStatements: []
    opentelekomcloud_waf_alarm_notification_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF Alarm Notification resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_alarm_notification_v1
        title: opentelekomcloud_waf_alarm_notification_v1
        examples:
            - name: notification_1
              manifest: |-
                {
                  "enabled": true,
                  "send_frequency": 30,
                  "threats": [
                    "cc",
                    "cmdi"
                  ],
                  "times": 200,
                  "topic_urn": "${opentelekomcloud_smn_topic_v2.topic_1.id}"
                }
              references:
                topic_urn: opentelekomcloud_smn_topic_v2.topic_1.id
              dependencies:
                opentelekomcloud_smn_topic_v2.topic_1: |-
                    {
                      "name": "topic_alarm"
                    }
        argumentDocs:
            all: refers to all types of events.
            antitamper: refers to Web Tamper Protection events.
            cc: refers to CC attack.
            cmdi: refers to command injection.
            custom: refers to Precise Protection events.
            enabled: '- (Required) Specifies whether to send an alarm notification. The options are true and false.'
            illegal: refers to invalid requests.
            lfi: refers to local file inclusion.
            rfi: refers to remote file inclusion.
            robot: refers to malicious crawlers.
            send_frequency: |-
                - (Required) Specifies the minimum interval between two alarms in minutes.
                The options are 5, 15, 30, and 60.
            sqli: refers to SQL injection.
            threat: '- (Required) Specifies the list of event types. Possible values are:'
            times: |-
                - (Required) Specifies the alarm threshold. Alarm notifications are sent when the
                number of attacks is greater than or equal to the threshold within the configured period.
                This value is greater than or equal to 1.
            topic_urn: '- (Required) Specifies the SMN topic to which an alarm is sent.'
            vuln: refers to other types of attacks.
            webshell: refers to webshells.
            whiteblackip: refers to Blacklist and Whitelist events.
            xss: refers to XSS attack.
        importStatements: []
    opentelekomcloud_waf_ccattackprotection_rule_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF CC Attack Protection Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_ccattackprotection_rule_v1
        title: opentelekomcloud_waf_ccattackprotection_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action_category": "block",
                  "block_content": "{\"error\":\"forbidden\"}",
                  "block_content_type": "application/json",
                  "limit_num": 10,
                  "limit_period": 60,
                  "lock_time": 10,
                  "policy_id": "${opentelekomcloud_waf_policy_v1.policy_1.id}",
                  "tag_index": "sessionid",
                  "tag_type": "cookie",
                  "url": "/abc1"
                }
              references:
                policy_id: opentelekomcloud_waf_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_policy_v1.policy_1: |-
                    {
                      "name": "policy_1"
                    }
        argumentDocs:
            action_category: '- (Required) Specifies the action. Changing this creates a new rule. Valid Options are:'
            block: '- block the requests.'
            block_content: '- (Optional) Specifies the content of the returned page. Changing this creates a new rule.'
            block_content_type: '- (Optional) Specifies the type of the returned page. The options are application/json, text/html, and text/xml. Changing this creates a new rule.'
            captcha: '- Verification code. The user needs to enter the correct verification code after blocking to restore the correct access page.'
            cookie: '- A web visitor is identified by the cookie key value.'
            default: '- Specifies whether the rule is the default CC attack protection rule.'
            id: '-  ID of the rule.'
            ip: '- A web visitor is identified by the IP address.'
            limit_num: '- (Required) Specifies the number of requests allowed from a web visitor in a rate limiting period. Changing this creates a new rule.'
            limit_period: '- (Required) Specifies the rate limiting period. Changing this creates a new rule.'
            lock_time: '- (Optional) Specifies the lock duration. The value ranges from 0 seconds to 2^32 seconds. Changing this creates a new rule.'
            other: '- A web visitor is identified by the Referer field(user-defined request source).'
            policy_id: '- (Required) The WAF policy ID. Changing this creates a new rule.'
            tag_category: '- (Optional) Specifies the category. The value is referer. Changing this creates a new rule.'
            tag_contents: '- (Optional) Specifies the category content. Changing this creates a new rule.'
            tag_index: '- (Optional) If tag_type is set to cookie, this parameter indicates cookie name. Changing this creates a new rule.'
            tag_type: '- (Required) Specifies the rate limit mode. Changing this creates a new rule. Valid Options are:'
            url: '- (Required) Specifies a misreported URL excluding a domain name. Changing this creates a new rule.'
        importStatements: []
    opentelekomcloud_waf_certificate_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF Certificate resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_certificate_v1
        title: opentelekomcloud_waf_certificate_v1
        examples:
            - name: certificate_1
              manifest: |-
                {
                  "content": "-----BEGIN CERTIFICATE-----\nMIIFazCCA1OgAwIBAgIUN3w1KX8/T/HWVxZIOdHXPhUOnsAwDQYJKoZIhvcNAQEL\nBQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\n...\ndKvZbPEsygYRIjwyhHHUh/YXH8KDI/uu6u6AxDckQ3rP1BkkKXr5NPBGjVgM3ZI=\n-----END CERTIFICATE-----\n",
                  "key": "-----BEGIN PRIVATE KEY-----\nMIIJQQIBADANBgkqhkiG9w0BAQEFAASCCSswggknAgEAAoICAQC+9uwFVenCdPD9\n5LWSWMuy4riZW718wxBpYV5Y9N8nM7N0qZLLdpImZrzBbaBldTI+AZGI3Nupuurw\n...\ns9urs/Kk/tbQhsEvu0X8FyGwo0zH6rG8apTFTlac+v4mJ4vlpxSvT5+FW2lgLISE\n+4sM7kp0qO3/p+45HykwBY5iHq3H\n-----END PRIVATE KEY-----\n",
                  "name": "cert_1"
                }
        argumentDocs:
            content: '- (Optional) The certificate content. Changing this creates a new certificate.'
            id: '- ID of the certificate.'
            key: '- (Optional) The private key. Changing this creates a new certificate.'
            name: |-
                - (Required) The certificate name. The maximum length is 256 characters.
                Only digits, letters, underscores(_), and hyphens(-) are allowed.
        importStatements:
            - terraform import opentelekomcloud_waf_certificate_v1.cert_1 7117d38e-4c8f-4624-a505-bd96b97d024c
            - terraform import opentelekomcloud_waf_certificate_v1.cert_1 cert_1
    opentelekomcloud_waf_datamasking_rule_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF Datamasking rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_datamasking_rule_v1
        title: opentelekomcloud_waf_datamasking_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "category": "params",
                  "index": "password",
                  "policy_id": "${opentelekomcloud_waf_policy_v1.policy_1.id}",
                  "url": "/login"
                }
              references:
                policy_id: opentelekomcloud_waf_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_policy_v1.policy_1: |-
                    {
                      "name": "policy_1"
                    }
        argumentDocs:
            category: '- (Required) Specifies the masked field. The options are params and header.'
            id: '- ID of the rule.'
            index: '- (Required) Specifies the masked subfield.'
            policy_id: '- (Required) The WAF policy ID. Changing this creates a new rule.'
            url: '- (Required) Specifies the URL to which the data masking rule applies.'
        importStatements: []
    opentelekomcloud_waf_dedicated_alarm_masking_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated False Alarm Masking Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_alarm_masking_rule_v1
        title: opentelekomcloud_waf_dedicated_alarm_masking_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "conditions": [
                    {
                      "category": "url",
                      "contents": [
                        "/login"
                      ],
                      "logic_operation": "equal"
                    }
                  ],
                  "description": "description",
                  "domains": [
                    "www.example.com"
                  ],
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "rule": "xss"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_am"
                    }
            - name: rule_1
              manifest: |-
                {
                  "advanced_settings": [
                    {
                      "index": "cookie"
                    }
                  ],
                  "conditions": [
                    {
                      "category": "url",
                      "contents": [
                        "/login"
                      ],
                      "logic_operation": "equal"
                    }
                  ],
                  "description": "description",
                  "domains": [
                    "www.example.com"
                  ],
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "rule": "all"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_am"
                    }
        argumentDocs:
            "0": ': The rule is disabled.'
            "1": ': The rule is enabled.'
            advanced_settings: |-
                - (Optional, ForceNew, List) To ignore attacks of a specific field, specify the field in the Advanced settings area.
                After you add the rule, WAF will stop blocking attacks of the specified field.
                This parameter is not included if all modules are bypassed. Changing this creates a new rule.
                The advanced_settings block supports:
            advanced_settings.contents: '- (Optional, ForceNew, List) Subfield of the specified field type. The default value is all.'
            advanced_settings.index: |-
                - (Optional, ForceNew, String) Field type.
                The following field types are supported: Params, Cookie, Header, Body, and Multipart.
                When you select Params, Cookie, or Header, you can set this parameter to all or configure subfields as required.
            all: .
            bypass: .
            cmdi: ': Command injection attack'
            conditions: |-
                - (Optional, ForceNew, List) Condition list. Changing this creates a new rule.
                The conditions block supports:
            conditions.category: '- (Required, ForceNew, String) Field type. The value can be url, ip, params, cookie, or header.'
            conditions.contents: |-
                - (Optional, ForceNew, List) Content. The array length is limited to 1.
                The content format varies depending on the field type.
            conditions.index: '- (Optional, ForceNew, String) Subfield. When category is set to params, cookie, or header, set this parameter based on site requirements. This parameter is mandatory.'
            conditions.logic_operation: '- (Required, ForceNew, String) The matching logic varies depending on the field type.'
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, ForceNew, String) Rule description. Changing this creates a new rule.'
            domains: '- (Required, ForceNew, List) Domain names to be protected. Changing this creates a new rule.'
            id: '-  ID of the rule.'
            ip: ', the logic can be equal or not_equal.'
            lfi: ': Local file inclusion'
            params: ', cookie, or header, the content format is not limited.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            rfi: ': Remote file inclusion'
            robot: ': Malicious crawlers'
            rule: |-
                - (Required, ForceNew, String) Items to be masked. Changing this creates a new rule.
                You can provide multiple items and separate them with semicolons (;).
            sqli: ': SQL injection attack'
            status: '- Rule status. The value can be:'
            url: ', params, cookie, or header, the logic can be equal, not_equal, contain, not_contain, prefix, not_prefix, suffix, not_suffix.'
            vuln: ': Other types of attacks'
            webshell: ': Web shells'
            xss: ': XSS attacks'
        importStatements: []
    opentelekomcloud_waf_dedicated_anti_crawler_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Anti Crawler Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_anti_crawler_rule_v1
        title: opentelekomcloud_waf_dedicated_anti_crawler_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "logic": 3,
                  "name": "anticrawler_1",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "protection_mode": "anticrawler_except_url",
                  "url": "/patent/id"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_cc"
                    }
        argumentDocs:
            "0": ': The rule is disabled.'
            "1": ': The rule is enabled.'
            anticrawler_except_url: |-
                : used to protect all paths except the one specified by the rule
                Changing this creates a new rule.
            anticrawler_specific_url: ': used to protect a specific path specified by the rule.'
            created_at: '- Timestamp the rule is created.'
            id: '-  ID of the rule.'
            logic: |-
                - (Required, Int) Rule matching logic.
                Values are:
            name: '- (Required, String) Rule name.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            protection_mode: |-
                - (Required, ForceNew, String) JavaScript anti-crawler rule type.
                Values are:
            status: '- Rule status. The value can be 0 or 1.'
            url: '- (Required, String) URL to which the rule applies.'
        importStatements: []
    opentelekomcloud_waf_dedicated_anti_leakage_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Anti Leakage Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_anti_leakage_rule_v1
        title: opentelekomcloud_waf_dedicated_anti_leakage_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "category": "sensitive",
                  "contents": [
                    "id_card"
                  ],
                  "description": "test description",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "url": "/attack"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_al"
                    }
        argumentDocs:
            "0": ': The rule is disabled.'
            "1": ': The rule is enabled.'
            category: |-
                - (Required, String) Sensitive information type in the information leakage prevention rule.
                Values:
            code: ': The rule blocks response pages of specified HTTP response code.'
            contents: |-
                - (Optional, List) Content corresponding to the sensitive information type.
                Multiple options can be set.
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, String) Rule description.'
            id: '-  ID of the rule.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            sensitive: ': The rule masks sensitive user information, such as ID code, phone numbers, and email addresses.'
            status: '- Rule status. The value can be:'
            url: '- (Required, String) URL to which the rule applies, for example, /admin'
        importStatements: []
    opentelekomcloud_waf_dedicated_blacklist_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Blacklist Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_blacklist_rule_v1
        title: opentelekomcloud_waf_dedicated_blacklist_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action": 0,
                  "description": "test description",
                  "ip_address": "192.168.1.0/24",
                  "name": "my_blacklist",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_black"
                    }
        argumentDocs:
            "0": ': WAF blocks the requests that hit the rule.'
            "1": ': WAF allows the requests that hit the rule.'
            "2": ': WAF only logs the requests that hit the rule.'
            action: |-
                - (Required, ForceNew, Int) Protective action. Changing this creates a new rule.
                The value can be:
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, ForceNew, String) Rule description. Changing this creates a new rule.'
            followed_action_id: |-
                - (Optional, ForceNew, String) ID of a known attack source rule. Changing this creates a new rule.
                This parameter can be configured only when action is set to 0.
            id: '-  ID of the rule.'
            ip_address: |-
                - (Required, ForceNew, String) IP addresses or an IP address range to be added to the blacklist or whitelist. Changing this creates a new rule.
                For example, 192.x.x.3 or 10.x.x.0/24
            name: '- (Required, ForceNew, String) Rule name. Changing this creates a new rule.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule. Changing this creates a new rule.'
            status: '- Rule status. The value can be:'
        importStatements: []
    opentelekomcloud_waf_dedicated_cc_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated CC Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_cc_rule_v1
        title: opentelekomcloud_waf_dedicated_cc_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action": [
                    {
                      "category": "block",
                      "content": "{\"error\":\"forbidden\"}",
                      "content_type": "application/json"
                    }
                  ],
                  "limit_num": 10,
                  "limit_period": 60,
                  "lock_time": 10,
                  "mode": 0,
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "tag_index": "sessionid",
                  "tag_type": "cookie",
                  "url": "/abc1"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_cc"
                    }
        argumentDocs:
            "0": '- Standard. Only the protected paths of domain names can be specified.'
            "1": '- The path, IP address, cookie, header, and params fields can all be set.'
            action: |-
                - (Required, ForceNew, Set) Protection action to take if the number of requests reaches the upper limit. Changing this creates a new rule.
                The conditions block supports:
            action.category: '- (Required, ForceNew, String) Action type. Changing this creates a new rule.'
            action.content: '- (Optional, ForceNew, String) Protection page content. Changing this creates a new rule.'
            action.content_type: '- (Optional, ForceNew, String) User identifier. The value is fixed at referer. Changing this creates a new rule.'
            block: ': WAF blocks the requests. When tag_type is set to other, the value can only be blocked.'
            captcha: ': Verification code. WAF requires visitors to enter a correct verification code to continue their access to requested page on your website.'
            conditions: |-
                - (Optional, ForceNew, List) Rate limit conditions of the CC protection rule. Changing this creates a new rule.
                The conditions block supports:
            conditions.category: '- (Required, ForceNew, String) Field type. The value can be url, ip, params, cookie, or header.'
            conditions.contents: '- (Optional, ForceNew, List) Content of the conditions. This parameter is mandatory when the suffix of logic_operation is not any or all. Changing this creates a new rule.'
            conditions.index: '- (Optional, ForceNew, String) Subfield. When category is set to params, cookie, or header, set this parameter based on site requirements. This parameter is mandatory. Changing this creates a new rule.'
            conditions.logic_operation: '- (Required, ForceNew, String) Logic for matching the condition.'
            conditions.value_list_id: '- (Optional, ForceNew, String) Reference table ID. This parameter is mandatory when the suffix of logic_operation is any or all. The reference table type must be the same as the category type. Changing this creates a new rule.'
            cookie: '- User-based rate limiting. Website visitors are identified by the cookie key value.'
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, ForceNew, String) Rule description. Changing this creates a new rule.'
            dynamic_block: ': In the previous rate limit period, if the request frequency exceeds the value of Rate Limit Frequency, the request is blocked. In the next rate limit period, if the request frequency exceeds the value of Permit Frequency, the request is still blocked.'
            header: '- User-based rate limiting. Website visitors are identified by the header field.'
            id: '-  ID of the rule.'
            ip: ', the optional operations are: equal, not_equal, equal_any and not_equal_all'
            limit_num: '- (Required, ForceNew, Int) Rate limit frequency based on the number of requests. The value ranges from 1 to 2,147,483,647. Changing this creates a new rule.'
            limit_period: '- (Required, ForceNew, Int) Rate limit period, in seconds. The value ranges from 1 to 3,600. Changing this creates a new rule.'
            lock_time: '- (Optional, ForceNew, String) Block duration, in seconds. The value ranges from 0 to 65,535. Specifies the period within which access is blocked. An error page is displayed in this period. Changing this creates a new rule.'
            log: ': WAF logs the event only.'
            mode: '- (Required, ForceNew, Int) Protection mode of the CC attack protection rule. Changing this creates a new rule. Valid Options are:'
            other: '- Website visitors are identified by the Referer field (user-defined request source).'
            params: |-
                , cookie and header, the optional operations are: contain, not_contain, equal, not_equal, prefix, not_prefix, suffix, not_suffix, contain_any, not_contain_all, equal_any, not_equal_all, equal_any, not_equal_all, prefix_any, not_prefix_all, suffix_any, not_suffix_all, len_greater, len_less, len_equal, len_not_equal, num_greater, num_less, num_equal, num_not_equal, exist and not_exist
                Changing this creates a new rule.
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            status: '- Rule status.'
            tag_category: '- (Optional, ForceNew, String) Specifies the category. The value is referer. Changing this creates a new rule.'
            tag_contents: '- (Optional, ForceNew, String) Specifies the category content. Changing this creates a new rule.'
            tag_index: |-
                - (Optional, ForceNew, String) User identifier. Changing this creates a new rule.
                If tag_type is set to cookie, this parameter indicates cookie name.
                If tag_type is set to header, this parameter indicates header name.
            tag_type: '- (Required, ForceNew, String) Rate limit mode. Changing this creates a new rule. Valid Options are:'
            unlock_num: '- (Optional, ForceNew, Int) Allowable frequency based on the number of requests. The value ranges from 0 to 2,147,483,647. This parameter is required only when the protection action type is dynamic_block. Changing this creates a new rule.'
            url: '- (Required, ForceNew, String) Path to be protected in the CC attack protection rule. Changing this creates a new rule.'
        importStatements: []
    opentelekomcloud_waf_dedicated_certificate_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Certificate resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_certificate_v1
        title: opentelekomcloud_waf_dedicated_certificate_v1
        examples:
            - name: certificate_1
              manifest: |-
                {
                  "content": "-----BEGIN CERTIFICATE-----\nMIIFazCCA1OgAwIBAgIUN3w1KX8/T/HWVxZIOdHXPhUOnsAwDQYJKoZIhvcNAQEL\nBQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\n...\ndKvZbPEsygYRIjwyhHHUh/YXH8KDI/uu6u6AxDckQ3rP1BkkKXr5NPBGjVgM3ZI=\n-----END CERTIFICATE-----\n",
                  "key": "-----BEGIN PRIVATE KEY-----\nMIIJQQIBADANBgkqhkiG9w0BAQEFAASCCSswggknAgEAAoICAQC+9uwFVenCdPD9\n5LWSWMuy4riZW718wxBpYV5Y9N8nM7N0qZLLdpImZrzBbaBldTI+AZGI3Nupuurw\n...\ns9urs/Kk/tbQhsEvu0X8FyGwo0zH6rG8apTFTlac+v4mJ4vlpxSvT5+FW2lgLISE\n+4sM7kp0qO3/p+45HykwBY5iHq3H\n-----END PRIVATE KEY-----\n",
                  "name": "certificate_1"
                }
        argumentDocs:
            content: '- (Optional) The certificate content. Changing this creates a new certificate.'
            created_at: '- Date when the certificate is uploaded.'
            expires: '- Date when the certificate expires.'
            id: '- ID of the certificate.'
            key: '- (Optional) The private key. Changing this creates a new certificate.'
            name: |-
                - (Required) The certificate name. The value can contain a maximum of 64 characters.
                Only digits, letters, underscores(_), and hyphens(-) are allowed. Changing this creates a new certificate.
        importStatements:
            - terraform import opentelekomcloud_waf_certificate_v1.cert_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_waf_dedicated_data_masking_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Data Masking Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_data_masking_rule_v1
        title: opentelekomcloud_waf_dedicated_data_masking_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "category": "params",
                  "description": "description",
                  "name": "data_masking",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "url": "/login"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_dm"
                    }
        argumentDocs:
            "0": ': The rule is disabled.'
            "1": ': The rule is enabled.'
            category: |-
                - (Required, String) Masked field.
                Values:
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, String) Rule description.'
            id: '-  ID of the rule.'
            name: '- (Required, String) Name of the masked field.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            status: '-  Rule status. The value can be 0 or 1.'
            url: '- (Required, String) URL protected by the data masking rule. The value must be in the standard URL format, for example, /admin.'
        importStatements: []
    opentelekomcloud_waf_dedicated_domain_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Domain resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_domain_v1
        title: opentelekomcloud_waf_dedicated_domain_v1
        examples:
            - name: domain_1
              manifest: |-
                {
                  "domain": "www.mydom.com",
                  "keep_policy": false,
                  "proxy": true,
                  "server": [
                    {
                      "address": "192.168.0.10",
                      "client_protocol": "HTTP",
                      "port": 8080,
                      "server_protocol": "HTTP",
                      "type": "ipv4",
                      "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                    }
                  ],
                  "timeout_config": [
                    {
                      "connect_timeout": 150,
                      "read_timeout": 200,
                      "send_timeout": 100
                    }
                  ]
                }
              references:
                server.vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
            - name: domain_1
              manifest: |-
                {
                  "certificate_id": "${opentelekomcloud_waf_dedicated_certificate_v1.certificate_1.id}",
                  "cipher": "cipher_1",
                  "depends_on": [
                    "${opentelekomcloud_waf_dedicated_certificate_v1.certificate_1}"
                  ],
                  "domain": "www.mydom.com",
                  "keep_policy": false,
                  "proxy": false,
                  "server": [
                    {
                      "address": "192.168.0.20",
                      "client_protocol": "HTTPS",
                      "port": 8443,
                      "server_protocol": "HTTP",
                      "type": "ipv4",
                      "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                    }
                  ],
                  "tls": "TLS v1.1"
                }
              references:
                certificate_id: opentelekomcloud_waf_dedicated_certificate_v1.certificate_1.id
                server.vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
              dependencies:
                opentelekomcloud_waf_dedicated_certificate_v1.certificate_1: |-
                    {
                      "content": "-----BEGIN CERTIFICATE-----\nMIIFazCCA1OgAwIBAgIUN3w1KX8/T/HWVxZIOdHXPhUOnsAwDQYJKoZIhvcNAQEL\nBQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\n...\ndKvZbPEsygYRIjwyhHHUh/YXH8KDI/uu6u6AxDckQ3rP1BkkKXr5NPBGjVgM3ZI=\n-----END CERTIFICATE-----\n",
                      "key": "-----BEGIN PRIVATE KEY-----\nMIIJQQIBADANBgkqhkiG9w0BAQEFAASCCSswggknAgEAAoICAQC+9uwFVenCdPD9\n5LWSWMuy4riZW718wxBpYV5Y9N8nM7N0qZLLdpImZrzBbaBldTI+AZGI3Nupuurw\n...\ns9urs/Kk/tbQhsEvu0X8FyGwo0zH6rG8apTFTlac+v4mJ4vlpxSvT5+FW2lgLISE\n+4sM7kp0qO3/p+45HykwBY5iHq3H\n-----END PRIVATE KEY-----\n",
                      "name": "certificate_1"
                    }
        argumentDocs:
            "0": '- The domain name is not connected to WAF,'
            "1": '- The domain name is connected to WAF.'
            TLS v1.2: |-
                , and cipher must be set to cipher_2. The PCI 3DS compliance certification
                check cannot be disabled after being enabled.
            access_status: '- Whether a domain name is connected to WAF. Valid values are:'
            alarm_page: '- The alarm page of domain. Valid values are:'
            certificate_id: |-
                - (Optional) Specifies the certificate ID. This parameter is mandatory when client_protocol
                is set to HTTPS.
            certificate_name: '- The name of the certificate used by the domain name.'
            cipher: |-
                - (Optional) Specifies the cipher suite of domain.
                Values are:
            cipher_1: '- ECDHE-ECDSA-AES256-GCM-SHA384:HIGH:!MEDIUM:!LOW:!aNULL:!eNULL:!DES:!MD5:!PSK:!RC4:!kRSA:!SRP:!3DES:!DSS:!EXP:!CAMELLIA:@STRENGTH'
            cipher_2: '- EECDH+AESGCM:EDH+AESGCM'
            cipher_3: '- ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:RC4:HIGH:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH'
            cipher_4: '- ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!eNULL:!NULL:!EDH'
            cipher_default: '- ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!AESGCM'
            compliance_certification: '- The compliance certifications of the domain, values are:'
            created_at: '- Timestamp when the dedicated WAF domain was created.'
            domain: |-
                - (Required, ForceNew) Specifies the protected domain name or IP address (port allowed). For example,
                www.example.com or *.example.com or www.example.com:89. Changing this creates a new domain.
            id: '- ID of the domain.'
            ip_tag: '- The IP tag of traffic identifier.'
            keep_policy: |-
                - (Optional) Specifies whether to retain the policy when deleting a domain name.
                Defaults to true.
            pci_3ds: |-
                - (Optional) Specifies the status of the PCI 3DS compliance certification check.
                Values are: true and false. This parameter must be used together with tls and cipher.
            pci_dss: |-
                - (Optional) Specifies the status of the PCI DSS compliance certification check.
                Values are: true and false. This parameter must be used together with tls and cipher.
            policy_id: |-
                - (Optional) Specifies the policy ID associated with the domain. If not specified, a new policy
                will be created automatically.
            protect_status: |-
                - (Optional) The protection status of domain, 0: suspended, 1: enabled.
                Default value is 1.
            protocol: '- The protocol type of the client. The options are HTTP and HTTPS.'
            proxy: '- (Optional) Specifies whether a proxy is configured. Default value is false.'
            redirect_url: '- The redirection URL when template_name is set to redirection.'
            region: |-
                - (Optional, ForceNew) The region in which to create the dedicated mode domain resource. If omitted,
                the provider-level region will be used. Changing this setting will push a new domain.
            server: |-
                - (Required, ForceNew) The server configuration list of the domain. A maximum of 80 can be configured.
                The server block supports:
            server.address: |-
                - (Required, ForceNew) IP address or domain name of the web server that the client accesses. For
                example, 192.168.1.1 or www.example.com. Changing this creates a new server.
            server.client_protocol: |-
                - (Required, ForceNew) Protocol type of the client. Values are HTTP and HTTPS.
                Changing this creates a new server.
            server.port: |-
                - (Required, ForceNew) Port number used by the web server. The value ranges from 0 to 65535. Changing this
                creates a new server.
            server.server_protocol: |-
                - (Required, ForceNew) Protocol used by WAF to forward client requests to the server.
                Values areHTTP and HTTPS. Changing this creates a new server.
            server.type: |-
                - (Required, ForceNew) Server network type, IPv4 or IPv6. Valid values are: ipv4 and ipv6. Changing
                this creates a new server.
            server.vpc_id: '- (Required, ForceNew) The id of the vpc used by the server. Changing this creates a server.'
            session_tag: '- The session tag of traffic identifier.'
            template_name: '- The template of alarm page, values are: default, custom and redirection.'
            timeout_config: |-
                - (Optional, List) Specifies the timeout configuration.
                The timeout_config structure is documented below.
            timeout_config.connect_timeout: '- (Optional, Int) Specifies the timeout in seconds for WAF to connect to the origin server.'
            timeout_config.read_timeout: '- (Optional, Int) Specifies the timeout in seconds for WAF to receive responses from the origin server.'
            timeout_config.write_timeout: '- (Optional, Int) Specifies the timeout in seconds for WAF to send requests to the origin server.'
            tls: |-
                - (Optional) Specifies the minimum required TLS version.
                Values are:
            traffic_identifier: '- The traffic identifier of domain. Valid values are:'
            "true": to ensure that the WAF security policy takes effect for the real source IP address.
            user_tag: '- The user tag of traffic identifier.'
        importStatements: []
    opentelekomcloud_waf_dedicated_geo_ip_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Geolocation Access Control Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_geo_ip_rule_v1
        title: opentelekomcloud_waf_dedicated_geo_ip_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action": 0,
                  "description": "test description",
                  "name": "test",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "region_code": "BR"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_gi"
                    }
        argumentDocs:
            "0": ': The rule is disabled.'
            "1": ': The rule is enabled.'
            action: |-
                - (Required, Int) Protective action.
                The value can be:
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, String) Rule description'
            id: '-  ID of the rule.'
            name: '- (Optional, String) Rule name.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            region_code: |-
                - (Required, String) Applicable regions. The value can be the region code. For more geographical location codes, see docs "Appendix - Geographic Location Codes."
                Values:
            status: '- Rule status. The value can be:'
        importStatements: []
    opentelekomcloud_waf_dedicated_instance_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Instance resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_instance_v1
        title: opentelekomcloud_waf_dedicated_instance_v1
        examples:
            - name: wafd_1
              manifest: |-
                {
                  "architecture": "x86",
                  "availability_zone": "eu-de-01",
                  "flavor": "s2.large.2",
                  "name": "wafd-instance-1",
                  "security_group": [
                    "${data.opentelekomcloud_networking_secgroup_v2.default_secgroup.id}"
                  ],
                  "specification": "waf.instance.professional",
                  "subnet_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id}",
                  "vpc_id": "${data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id}"
                }
              references:
                security_group: data.opentelekomcloud_networking_secgroup_v2.default_secgroup.id
                subnet_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.network_id
                vpc_id: data.opentelekomcloud_vpc_subnet_v1.shared_subnet.vpc_id
        argumentDocs:
            "0": '- Instance is creating.'
            "1": '- Instance has created.'
            "2": '- Instance is deleting.'
            "3": '- Instance has deleted.'
            "4": '- Instance create failed.'
            "5": '- Instance is frozen.'
            "6": '- Instance in abnormal state.'
            "7": '- Instance in updating.'
            "8": '- Instance update failed.'
            access_status: '- The access status of the instance.'
            architecture: |-
                - (Optional, String, ForceNew) Dedicated engine CPU architecture. Default value is x86.
                Changing this will create a new instance.
            availability_zone: '- (Required, ForceNew) AZ where the dedicated engine is to be created. Changing this will create a new instance.'
            billing_status: '- Billing status of dedicated WAF engine. The value can be 0, 1, or 2.'
            create: '- Default is 30 minute.'
            created_at: '- Timestamp when the dedicated WAF engine was created.'
            delete: '- Default is 20 minute.'
            flavor: |-
                - (Required, ForceNew) ID of the specifications of the ECS hosting the dedicated engine.
                You can go to the management console and confirm supported specifications. Changing this will create a new instance.
            id: '- The id of the instance.'
            name: |-
                - (Required, String) The name of WAF dedicated instance. Duplicate names are allowed, we suggest to keeping the
                name unique.
            region: |-
                - (Optional, ForceNew) Region where a dedicated engine is to be created. If omitted, the
                provider-level region will be used. Changing this setting will create a new instance.
            res_tenant: |-
                - (Optional, String, ForceNew) Whether the dedicated WAF instance is network interface type.
                Default value is true. Changing this will create a new instance.
                -> Note: This type of instance is not available in eu-ch2 region, must set res_tenant value to false there.
            security_group: |-
                - (Required, ForceNew) ID of the security group where the dedicated engine is located.
                Changing this will create a new instance.
            server_id: '- The id of the instance server.'
            service_ip: '- The ip of the instance service.'
            specification: '- (Required, ForceNew) Specifications of the dedicated engine version. Values are:'
            status: |-
                - Running status of the dedicated engine.
                The value can be:
            subnet_id: |-
                - (Required, ForceNew) ID of the VPC subnet where the dedicated engine is located.
                Subnet_id has the same value as network_id obtained by calling the OpenStack APIs. Changing this will create a
                new instance.
            upgradable: '- The instance is to support upgrades. false: Cannot be upgraded, true: Can be upgraded.'
            vpc_id: |-
                - (Required, ForceNew) ID of the VPC where the dedicated engine is located. Changing this will create a new
                instance.
            waf.instance.enterprise: '- The enterprise edition, throughput: 500 Mbit/s; QPS: 10,000 (Reference only).'
            waf.instance.professional: '- The professional edition, throughput: 100 Mbit/s; QPS: 2,000 (Reference only).'
        importStatements: []
    opentelekomcloud_waf_dedicated_known_attack_source_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Known Attack Source Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_known_attack_source_rule_v1
        title: opentelekomcloud_waf_dedicated_known_attack_source_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "block_time": 300,
                  "category": "long_cookie_block",
                  "description": "test description",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_ka"
                    }
        argumentDocs:
            block_time: |-
                - (Required, Int) Block duration, in seconds.
                If prefix long is selected for the rule type, the value for block_time ranges from 301 to 1800.
                If prefix short is selected for the rule type, the value for block_time ranges from 0 to 300.
            category: |-
                - (Required, ForceNew, String) Type of the know attack source rule.
                Enumeration values:
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, String) Rule description.'
            id: '-  ID of the rule.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
        importStatements: []
    opentelekomcloud_waf_dedicated_policy_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_policy_v1
        title: opentelekomcloud_waf_dedicated_policy_v1
        examples:
            - name: policy_1
              manifest: |-
                {
                  "full_detection": true,
                  "level": 3,
                  "name": "policy_1",
                  "options": [
                    {
                      "cc": true,
                      "crawler": false,
                      "web_attack": false,
                      "web_shell": true
                    }
                  ],
                  "protection_mode": "block"
                }
        argumentDocs:
            "1": ': low'
            "2": ': medium'
            "3": ': high'
            block: ': WAF blocks and logs detected attacks.'
            created_at: '- Time the policy is created. The value is a 13-digit timestamp, in ms.'
            deep_inspection: '- (Optional, Bool) The deep inspection in basic web protection.'
            domains: '- Specifies the domain IDs.'
            "false": ': instant detection. Instant detection immediately ends threat detection after blocking a request that meets Precise Protection specified conditions.'
            full_detection: '- (Optional, Bool) Specifies the detection mode in Precise Protection.'
            header_inspection: '- (Optional, Bool) The header inspection in basic web protection.'
            id: '-  ID of the policy.'
            level: |-
                - (Optional, Int) Specifies the protection level.
                Values are:
            log: ': WAF logs detected attacks only.'
            name: '- (Required, String) The policy name.'
            options: |-
                - (Optional, List)  Specifies the protection switches.
                The options block supports:
            options.anti_crawler: '- (Optional, Bool) JavaScript anti-crawler function.'
            options.anti_leakage: '- (Optional, Bool) Whether the information leakage prevention is enabled.'
            options.anti_tamper: '- (Optional, Bool) Specifies whether Web Tamper Protection is enabled.'
            options.blacklist: '- (Optional, Bool) Specifies whether Blacklist and Whitelist is enabled.'
            options.cc: '- (Optional, Bool) Specifies whether CC Attack Protection is enabled.'
            options.common: '- (Optional, Bool) Specifies whether General Check in Basic Web Protection is enabled.'
            options.crawler: '- (Optional, Bool) Specifies whether the master crawler detection switch in Basic Web Protection is enabled.'
            options.crawler_engine: '- (Optional, Bool) Specifies whether the Search Engine switch in Basic Web Protection is enabled.'
            options.crawler_other: '- (Optional, Bool) Specifies whether detection of other crawlers in Basic Web Protection is enabled.'
            options.crawler_scanner: '- (Optional, Bool) Specifies whether the Scanner switch in Basic Web Protection is enabled.'
            options.crawler_script: '- (Optional, Bool) Specifies whether the Script Tool switch in Basic Web Protection is enabled.'
            options.custom: '- (Optional, Bool) Specifies whether Precise Protection is enabled.'
            options.followed_action: '- (Optional, Bool) Whether the Known Attack Source protection is enabled.'
            options.geolocation_access_control: '- (Optional, Bool) Whether geolocation access control is enabled.'
            options.ignore: '- (Optional, Bool) Whether false alarm masking is enabled.'
            options.privacy: '- (Optional, Bool) Specifies whether Data Masking is enabled.'
            options.web_attack: '- (Optional, Bool) Specifies whether Basic Web Protection is enabled.'
            options.web_shell: '- (Optional, Bool) Specifies whether webshell detection in Basic Web Protection is enabled.'
            protection_mode: |-
                - (Optional, String) Specifies the protective action after a rule is matched.
                Values are:
            shiro_decryption_check: '- (Optional, Bool) The shiro decryption check in basic web protection.'
            "true": ': full detection, Full detection finishes all threat detections before blocking requests that meet Precise Protection specified conditions.'
        importStatements: []
    opentelekomcloud_waf_dedicated_precise_protection_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Precise Protection Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_precise_protection_rule_v1
        title: opentelekomcloud_waf_dedicated_precise_protection_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action": [
                    {
                      "category": "block"
                    }
                  ],
                  "conditions": [
                    {
                      "category": "url",
                      "contents": [
                        "test"
                      ],
                      "logic_operation": "contain"
                    }
                  ],
                  "description": "desc",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "priority": 50,
                  "time": false
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_pp"
                    }
        argumentDocs:
            "0": ': The rule is disabled.'
            "1": ': The rule is enabled.'
            action: |-
                - (Required, ForceNew, Set) Protection action to take if the number of requests reaches the upper limit. Changing this creates a new rule.
                The conditions block supports:
            action.category: '- (Required, ForceNew, String) Action type. Changing this creates a new rule.'
            action.followed_action_id: '- (Optional, ForceNew, String) ID of a known attack source rule. This parameter can be configured only when category is set to block. Changing this creates a new rule.'
            block: ': WAF blocks attacks.'
            conditions: |-
                - (Optional, ForceNew, List) Match condition List. Changing this creates a new rule.
                The conditions block supports:
            conditions.category: '- (Optional, ForceNew, String) Field type. The options are url, user-agent, ip, params, cookie, referer, header, request_line, method, and request.'
            conditions.contents: '- (Optional, ForceNew, List) Content of the conditions. This parameter is mandatory when the suffix of logic_operation is not any or all. This parameter is mandatory when the suffix of logic_operation is not any or all. Changing this creates a new rule.'
            conditions.index: '- (Optional, ForceNew, String) Subfield. Changing this creates a new rule.'
            conditions.logic_operation: '- (Optional, ForceNew, String) Logic for matching the condition. Changing this creates a new rule.'
            conditions.value_list_id: '- (Optional, ForceNew, String) Reference table ID. This parameter is mandatory when the suffix of logic_operation is any or all. The reference table type must be the same as the category type. Changing this creates a new rule.'
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, ForceNew, String) Rule description. Changing this creates a new rule.'
            "false": ': The rule takes effect immediately.'
            id: '-  ID of the rule.'
            ip: ', the optional operations are: equal, not_equal, equal_any and not_equal_all'
            log: ': WAF only logs detected attacks.'
            method: ', the optional operations are: equal and not_equal'
            params: ', header, and cookie, the optional operations are: contain, not_contain, equal, not_equal, prefix, not_prefix, suffix, not_suffix, contain_any, not_contain_all, equal_any, not_equal_all, equal_any, not_equal_all, prefix_any, not_prefix_all, suffix_any, not_suffix_all, len_greater, len_less, len_equal, len_not_equal, num_greater, num_less, num_equal, num_not_equal, exist and not_exist'
            pass: ': WAF allows requests.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            priority: '- (Optional, ForceNew, Int) Priority of a rule. A small value indicates a high priority. If two rules are assigned with the same priority, the rule added earlier has higher priority. Value range: 0 to 1000. Changing this creates a new rule.'
            request_line: 'and request, the optional operations are: len_greater, len_less, len_equal and len_not_equal'
            start: '- (Required, ForceNew, Int) Timestamp (ms) when the precise protection rule takes effect. This parameter is returned only when time is true. Changing this creates a new rule.'
            status: '- Rule status. The value can be:'
            terminal: '- (Required, ForceNew, Int) Timestamp (ms) when the precise protection rule expires. This parameter is returned only when time is true. Changing this creates a new rule.'
            time: |-
                - (Required, ForceNew, Bool) Time the precise protection rule takes effect. Changing this creates a new rule.
                Values:
            "true": ': The effective time is customized.'
            url: ', user-agent or referer , the optional operations are contain, not_contain, equal, not_equal, prefix, not_prefix, suffix, not_suffix, contain_any, not_contain_all, equal_any, not_equal_all, equal_any, not_equal_all, prefix_any, not_prefix_all, suffix_any, not_suffix_all, len_greater, len_less, len_equal and len_not_equal'
        importStatements: []
    opentelekomcloud_waf_dedicated_reference_table_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Reference Table resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_reference_table_v1
        title: opentelekomcloud_waf_dedicated_reference_table_v1
        examples:
            - name: table
              manifest: |-
                {
                  "conditions": [
                    "/admin",
                    "/manage"
                  ],
                  "name": "%s",
                  "type": "url"
                }
        argumentDocs:
            conditions: |-
                - (Required, List) The conditions of the reference table. The maximum length is 30. The maximum length of
                condition is 2048 characters.
            created_at: '- The time when reference table was created.'
            description: |-
                - (Optional, String) The description of the reference table. The maximum length is 128 characters.
                Currently, could be set only on update.
            id: '- The id of the reference table.'
            name: |-
                - (Required, String) The name of the reference table. Only letters, digits, and underscores(_) are allowed. The
                maximum length is 64 characters.
            region: |-
                - (Optional, String, ForceNew) The region in which to create the WAF reference table resource. If omitted,
                the provider-level region will be used. Changing this setting will push a new reference table.
            type: |-
                - (Required, String, ForceNew) The type of the reference table, The options are url, user-agent, ip,
                params, cookie, referer and header. Changing this setting will push a new reference table.
        importStatements: []
    opentelekomcloud_waf_dedicated_web_tamper_rule_v1:
        subCategory: Dedicated Web Application Firewall (WAFD)
        description: Manages a WAF Dedicated Web Tamper Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_dedicated_web_tamper_rule_v1
        title: opentelekomcloud_waf_dedicated_web_tamper_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "description": "test description",
                  "hostname": "www.domain.com",
                  "policy_id": "${opentelekomcloud_waf_dedicated_policy_v1.policy_1.id}",
                  "url": "/login"
                }
              references:
                policy_id: opentelekomcloud_waf_dedicated_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_dedicated_policy_v1.policy_1: |-
                    {
                      "name": "policy_at"
                    }
        argumentDocs:
            "0": ': The rule is disabled.'
            "1": ': The rule is enabled.'
            created_at: '- Timestamp the rule is created.'
            description: '- (Optional, ForceNew, String) Rule description.'
            hostname: '- (Required, ForceNew, String) Protected website.'
            id: '-  ID of the rule.'
            policy_id: '- (Required, ForceNew, String) The WAF policy ID. Changing this creates a new rule.'
            status: '- Rule status. The value can be:'
            update_cache: '- (Optional, Bool) To update the cache for a web tamper protection Rule.'
            url: |-
                - (Required, ForceNew, String) URL protected by the web tamper protection rule.
                The value must be in the standard URL format, for example, /admin
        importStatements: []
    opentelekomcloud_waf_domain_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF Domain resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_domain_v1
        title: opentelekomcloud_waf_domain_v1
        examples:
            - name: domain_1
              manifest: |-
                {
                  "block_page": [
                    {
                      "content": "${var.content}",
                      "content_type": "application/json",
                      "status_code": "200",
                      "template": "custom"
                    }
                  ],
                  "certificate_id": "${opentelekomcloud_waf_certificate_v1.certificate_1.id}",
                  "hostname": "www.example.com",
                  "proxy": true,
                  "server": [
                    {
                      "address": "80.158.42.162",
                      "client_protocol": "HTTPS",
                      "port": "443",
                      "server_protocol": "HTTPS"
                    }
                  ],
                  "sip_header_list": [
                    "X-Forwarded-For"
                  ],
                  "sip_header_name": "default"
                }
              references:
                block_page.content: var.content
                certificate_id: opentelekomcloud_waf_certificate_v1.certificate_1.id
              dependencies:
                opentelekomcloud_waf_certificate_v1.certificate_1: |-
                    {
                      "content": "-----BEGIN CERTIFICATE-----MIIDIjCCAougAwIBAgIJALV96mEtVF4EMA0GCSqGSIb3DQEBBQUAMGoxCzAJBgNVBAYTAnh4MQswCQYDVQQIEwJ4eDELMAkGA1UEBxMCeHgxCzAJBgNVBAoTAnh4MQswCQYDVQQLEwJ-----END CERTIFICATE-----",
                      "key": "-----BEGIN RSA PRIVATE KEY-----MIICXQIBAAKBgQDFPN9ojPndxSC4E1pqWQVKGHCFlXAAGBOxbGfSzXqzsoyacotueqMqXQbxrPSQFATeVmhZPNVEMdvcAMjYsV/mymtAwVqVA6q/OFdX/b3UHO+b/VqLo3J5SrM-----END RSA PRIVATE KEY-----",
                      "name": "cert_1"
                    }
        argumentDocs:
            access_code: '- The access code.'
            access_status: |-
                - Whether a domain name is connected to WAF. 0: The domain name is not connected to WAF,
                1: The domain name is connected to WAF.
            auto_policy_id: '- ID of the policy automatically created for the domain.'
            block_page: |-
                - (Optional) Alarm page configuration
                The block_page block supports:
            block_page.content: '- (Optional) The page content based on the selected page type.'
            block_page.content_type: |-
                - (Optional) The content type of the custom alarm page.
                The value can be text/html, text/xml, or application/json.
            block_page.redirect_url: '- (Optional) URL of the redirected page.'
            block_page.status_code: '- (Optional) Status Codes for custom.'
            block_page.template: '- (Required) Template name which can be default, custom or redirect.'
            certificate_id: |-
                - (Optional) The certificate ID. This parameter is mandatory when
                front_protocol/client_protocol is set to HTTPS.
            cipher: '- (Optional) Cipher suite to use with TLS. Possible values are:'
            cipher_1: '- Cipher suite 1: Recommended configuration, the best combination of compatibility and security'
            cipher_2: '- Cipher suite 2: Strict compliance with forward secrecy requirements of PCI DSS and excellent protection, but older browsers may be unable to access the websites'
            cipher_3: '- Cipher suite 3: Support for ECDHE, DHE-GCM, and RSA-AES-GCM algorithms but not CBC'
            cipher_default: '- Default cipher suite: Good browser compatibility, most clients supported, sufficient for most scenarios'
            cname: '- The CNAME value.'
            custom: 'template):'
            hostname: |-
                - (Required) The domain name. For example, www.example.com or *.example.com.
                Changing this creates a new domain.
            id: '-  ID of the domain.'
            policy_id: '- (Optional) The policy ID associate with the domain.'
            protect_status: '- The WAF mode. -1: bypassed, 0: disabled, 1: enabled.'
            protocol: '- The protocol type of the client. The options are HTTP, HTTPS, and HTTP&HTTPS.'
            proxy: '- (Required) Specifies whether a proxy is configured.'
            redirect: 'template):'
            server: |-
                - (Required) Array of server object. The server object structure is documented below.
                The server block supports:
            server.address: |-
                - (Required) IP address or domain name of the web server that the client accesses.
                For example, 192.168.1.1 or www.bla-bla.com.
            server.client_protocol: |-
                - (Optional) Protocol type of the client. The options are HTTP and HTTPS.
                Required if front_protocol is not set
            server.port: '- (Required) Port number used by the web server. The value ranges from 0 to 65535, for example, 8080.'
            server.server_protocol: |-
                - (Optional) Protocol used by WAF to forward client requests to the server.
                The options are HTTP and HTTPS. Required if back_protocol is not set.
            sip_header_list: |-
                - (Optional) Array of HTTP request header for identifying the real source IP address.
                This parameter is required only when proxy is set to true.
            sip_header_name: |-
                - (Optional) The type of the source IP header. This parameter is required only when proxy is set to true.
                The options are as follows: default, cloudflare, akamai, and custom.
            sub_domain: '- The subdomain name. This attribute is returned only when proxy is set to true.'
            tls: |-
                - (Optional) Minimum TLS version for accessing the protected domain name  if client_protocol is set to HTTPS.
                Possible values are: TLS v1.1 and TLS v1.2.
            txt_code: '- The TXT record. This attribute is returned only when proxy is set to true.'
        importStatements:
            - terraform import opentelekomcloud_waf_domain_v1.dom_1 7117d38e-4c8f-4624-a505-bd96b97d024c
    opentelekomcloud_waf_falsealarmmasking_rule_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF False Alarm Masking Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_falsealarmmasking_rule_v1
        title: opentelekomcloud_waf_falsealarmmasking_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "policy_id": "${opentelekomcloud_waf_policy_v1.policy_1.id}",
                  "rule": "100001",
                  "url": "/a"
                }
              references:
                policy_id: opentelekomcloud_waf_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_policy_v1.policy_1: |-
                    {
                      "name": "policy_1"
                    }
        argumentDocs:
            id: '- ID of the rule.'
            policy_id: '- (Required) The WAF policy ID. Changing this creates a new rule.'
            rule: '- (Required) Specifies the rule ID, which consists of six digits and cannot be empty. Changing this creates a new rule.'
            url: '- (Required) Specifies a misreported URL excluding a domain name. Changing this creates a new rule.'
        importStatements: []
    opentelekomcloud_waf_policy_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF Policy resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_policy_v1
        title: opentelekomcloud_waf_policy_v1
        examples:
            - name: policy_1
              manifest: |-
                {
                  "full_detection": false,
                  "name": "policy_1",
                  "options": [
                    {
                      "crawler": true,
                      "webattack": true
                    }
                  ]
                }
        argumentDocs:
            "1": ': low'
            "2": ': medium'
            "3": ': high'
            action: '- (Optional) Specifies the protective action after a rule is matched. The action object structure is documented below.'
            action.category: '- (Required) Specifies the protective action.'
            block: ': WAF blocks and logs detected attacks.'
            "false": ': instant detection. Instant detection immediately ends threat detection after blocking a request that meets Precise Protection specified conditions.'
            full_detection: '- (Optional) Specifies the detection mode in Precise Protection.'
            hosts: '- (Optional) An array of the domain IDs.'
            id: '-  ID of the policy.'
            level: '- (Optional) Specifies the protection level.'
            log: ': WAF logs detected attacks only.'
            name: '- (Required) The policy name. The maximum length is 256 characters. Only digits, letters, underscores(_), and hyphens(-) are allowed.'
            options: '- (Optional) Specifies the protection switches. The options object structure is documented below.'
            options.antitamper: '- (Optional) Specifies whether Web Tamper Protection is enabled.'
            options.cc: '- (Optional) Specifies whether CC Attack Protection is enabled.'
            options.common: '- (Optional) Specifies whether General Check in Basic Web Protection is enabled.'
            options.crawler: '- (Optional) Specifies whether the master crawler detection switch in Basic Web Protection is enabled.'
            options.crawler_engine: '- (Optional) Specifies whether the Search Engine switch in Basic Web Protection is enabled.'
            options.crawler_other: '- (Optional) Specifies whether detection of other crawlers in Basic Web Protection is enabled.'
            options.crawler_scanner: '- (Optional) Specifies whether the Scanner switch in Basic Web Protection is enabled.'
            options.crawler_script: '- (Optional) Specifies whether the Script Tool switch in Basic Web Protection is enabled.'
            options.custom: '- (Optional) Specifies whether Precise Protection is enabled.'
            options.ignore: '- (Optional) Specifies whether False Alarm Masking is enabled.'
            options.privacy: '- (Optional) Specifies whether Data Masking is enabled.'
            options.webattack: '- (Optional) Specifies whether Basic Web Protection is enabled.'
            options.webshell: '- (Optional) Specifies whether webshell detection in Basic Web Protection is enabled.'
            options.whiteblackip: '- (Optional) Specifies whether Blacklist and Whitelist is enabled.'
            "true": ': full detection, Full detection finishes all threat detections before blocking requests that meet Precise Protection specified conditions.'
        importStatements: []
    opentelekomcloud_waf_preciseprotection_rule_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF Precise Protection Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_preciseprotection_rule_v1
        title: opentelekomcloud_waf_preciseprotection_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action_category": "block",
                  "conditions": [
                    {
                      "category": "path",
                      "contents": [
                        "/login"
                      ],
                      "logic": "contain"
                    },
                    {
                      "category": "ip",
                      "contents": [
                        "192.168.1.1"
                      ],
                      "logic": "equal"
                    }
                  ],
                  "name": "rule_1",
                  "policy_id": "${opentelekomcloud_waf_policy_v1.policy_1.id}",
                  "priority": 10
                }
              references:
                policy_id: opentelekomcloud_waf_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_policy_v1.policy_1: |-
                    {
                      "name": "policy_1"
                    }
        argumentDocs:
            action: |-
                - (Required) Specifies the protective action after the precise protection rule is matched.
                Changing this creates a new rule. The action object structure is documented below.
            action.category: '- (Required) Specifies the protective action. The value can be block or pass.'
            conditions: |-
                - (Required) Specifies the condition parameters. Changing this creates a new rule.
                The conditions object structure is documented below.
            conditions.category: '- (Required) Specifies the condition type. The value can be path, user-agent, ip, params, cookie, referer, or header.'
            conditions.contents: '- (Required) Specifies a list of content matching the condition. Currently, only one value is accepted.'
            conditions.index: |-
                - (Optional) If category is set to cookie, index indicates cookie name, if set to params, index indicates param name,
                if set to header, index indicates an option in the header.
            conditions.logic: '- (Required) contain, not_contain, equal, not_equal, prefix, not_prefix, suffix, and not_suffix indicate Include, Exclude, Equal to, Not equal to, Prefix is, Prefix is not, Suffix is, and Suffix is not respectively. If category is set to ip, logic can only be equal or not_equal.'
            end: |-
                - (Optional) Specifies the time when the precise protection rule expires. If time is set to true,
                either the start time or the end time must be set. Changing this creates a new rule.
            "false": '- The rule takes effect immediately.'
            id: '- ID of the rule.'
            name: '- (Required) Specifies the name of a precise protection rule. Changing this creates a new rule.'
            policy_id: '- (Required) The WAF policy ID. Changing this creates a new rule.'
            priority: |-
                - (Optional) Specifies the priority of a rule being executed. Smaller values correspond to higher priorities.
                If two rules are assigned with the same priority, the rule added earlier has higher priority, the rule added earlier
                has higher priority. The value ranges from 0 to 65535. Changing this creates a new rule.
            start: |-
                - (Optional) Specifies the time when the precise protection rule takes effect. If time is set to true,
                either the start time or the end time must be set. Changing this creates a new rule.
            time: '- (Optional) Specifies the effect time of the precise protection rule. Changing this creates a new rule.'
            "true": '- The rule takes effect at the scheduled time.'
        importStatements: []
    opentelekomcloud_waf_webtamperprotection_rule_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF Web Tamper Protection Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_webtamperprotection_rule_v1
        title: opentelekomcloud_waf_webtamperprotection_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "hostname": "www.abc.com",
                  "policy_id": "${opentelekomcloud_waf_policy_v1.policy_1.id}",
                  "url": "/a"
                }
              references:
                policy_id: opentelekomcloud_waf_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_policy_v1.policy_1: |-
                    {
                      "name": "policy_1"
                    }
        argumentDocs:
            hostname: '- (Required) Specifies the domain name. Changing this creates a new rule.'
            id: '- ID of the rule.'
            policy_id: '- (Required) The WAF policy ID. Changing this creates a new rule.'
            url: '- (Required) Specifies the URL protected by the web tamper protection rule, excluding a domain name. Changing this creates a new rule.'
        importStatements: []
    opentelekomcloud_waf_whiteblackip_rule_v1:
        subCategory: Web Application Firewall (WAF)
        description: Manages a WAF White and Black IP Rule resource within OpenTelekomCloud.
        name: opentelekomcloud_waf_whiteblackip_rule_v1
        title: opentelekomcloud_waf_whiteblackip_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "addr": "192.168.0.0/24",
                  "policy_id": "${opentelekomcloud_waf_policy_v1.policy_1.id}",
                  "white": 1
                }
              references:
                policy_id: opentelekomcloud_waf_policy_v1.policy_1.id
              dependencies:
                opentelekomcloud_waf_policy_v1.policy_1: |-
                    {
                      "name": "policy_1"
                    }
        argumentDocs:
            addr: '- (Required) Specifies the IP address or range. For example, 192.168.0.125 or 192.168.0.0/24.'
            id: '-  ID of the rule.'
            policy_id: '- (Required) The WAF policy ID. Changing this creates a new rule.'
            white: |-
                - (Optional) Specifies the IP address type. 1: Whitelist, 0: Blacklist. If you do not configure
                the white parameter, the value is Blacklist by default.
        importStatements: []
