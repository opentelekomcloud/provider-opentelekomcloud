// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EnvironmentV2InitParameters struct {

	// Specifies the environment description.
	// The value can contain a maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the dedicated instance to which the environment
	// belongs.
	// Changing this will create a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the environment name.
	// The valid length is limited from 3 to 64, only letters, digits and underscores (_) are allowed.
	// The name must start with a letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the dedicated instance is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type EnvironmentV2Observation struct {

	// The time when the environment was created.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the environment description.
	// The value can contain a maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the dedicated environment.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the dedicated instance to which the environment
	// belongs.
	// Changing this will create a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the environment name.
	// The valid length is limited from 3 to 64, only letters, digits and underscores (_) are allowed.
	// The name must start with a letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the dedicated instance is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type EnvironmentV2Parameters struct {

	// Specifies the environment description.
	// The value can contain a maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the dedicated instance to which the environment
	// belongs.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the environment name.
	// The valid length is limited from 3 to 64, only letters, digits and underscores (_) are allowed.
	// The name must start with a letter.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the dedicated instance is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// EnvironmentV2Spec defines the desired state of EnvironmentV2
type EnvironmentV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentV2InitParameters `json:"initProvider,omitempty"`
}

// EnvironmentV2Status defines the observed state of EnvironmentV2.
type EnvironmentV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentV2 is the Schema for the EnvironmentV2s API. Manages a APIGW Environment resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type EnvironmentV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceId) || (has(self.initProvider) && has(self.initProvider.instanceId))",message="spec.forProvider.instanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   EnvironmentV2Spec   `json:"spec"`
	Status EnvironmentV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentV2List contains a list of EnvironmentV2s
type EnvironmentV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentV2 `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentV2_Kind             = "EnvironmentV2"
	EnvironmentV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentV2_Kind}.String()
	EnvironmentV2_KindAPIVersion   = EnvironmentV2_Kind + "." + CRDGroupVersion.String()
	EnvironmentV2_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentV2_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentV2{}, &EnvironmentV2List{})
}
