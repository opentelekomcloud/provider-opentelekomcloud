// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ApplicationV2InitParameters struct {

	// Specifies an array of one or more application codes that the application has.
	// Up to five application codes can be created.
	// The valid length of each application code is limited from can contain 64 to 180.
	// The application code must start with a letter, digit, plus sign + or slash /.
	// Only letters, digits and following special characters are allowed: !@#$%+-_/=.
	// +listType=set
	AppCodes []*string `json:"appCodes,omitempty" tf:"app_codes,omitempty"`

	// Specifies the application description.
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the dedicated instance to which the application
	// belongs.
	// Changing this will create a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the application name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and hyphens - are allowed.
	// The name must start with a letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the secret action to be done for the application.
	// The valid action is RESET.
	SecretAction *string `json:"secretAction,omitempty" tf:"secret_action,omitempty"`
}

type ApplicationV2Observation struct {

	// Specifies an array of one or more application codes that the application has.
	// Up to five application codes can be created.
	// The valid length of each application code is limited from can contain 64 to 180.
	// The application code must start with a letter, digit, plus sign + or slash /.
	// Only letters, digits and following special characters are allowed: !@#$%+-_/=.
	// +listType=set
	AppCodes []*string `json:"appCodes,omitempty" tf:"app_codes,omitempty"`

	// App key.
	AppKey *string `json:"appKey,omitempty" tf:"app_key,omitempty"`

	// Specifies the application description.
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the dedicated instance to which the application
	// belongs.
	// Changing this will create a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// The application ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the application name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and hyphens - are allowed.
	// The name must start with a letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The region where the application is located.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The registration time.
	RegistrationTime *string `json:"registrationTime,omitempty" tf:"registration_time,omitempty"`

	// Specifies the secret action to be done for the application.
	// The valid action is RESET.
	SecretAction *string `json:"secretAction,omitempty" tf:"secret_action,omitempty"`

	// The latest update time of the application.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type ApplicationV2Parameters struct {

	// Specifies an array of one or more application codes that the application has.
	// Up to five application codes can be created.
	// The valid length of each application code is limited from can contain 64 to 180.
	// The application code must start with a letter, digit, plus sign + or slash /.
	// Only letters, digits and following special characters are allowed: !@#$%+-_/=.
	// +kubebuilder:validation:Optional
	// +listType=set
	AppCodes []*string `json:"appCodes,omitempty" tf:"app_codes,omitempty"`

	// Specifies the application description.
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the dedicated instance to which the application
	// belongs.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the application name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and hyphens - are allowed.
	// The name must start with a letter.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the secret action to be done for the application.
	// The valid action is RESET.
	// +kubebuilder:validation:Optional
	SecretAction *string `json:"secretAction,omitempty" tf:"secret_action,omitempty"`
}

// ApplicationV2Spec defines the desired state of ApplicationV2
type ApplicationV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ApplicationV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ApplicationV2InitParameters `json:"initProvider,omitempty"`
}

// ApplicationV2Status defines the observed state of ApplicationV2.
type ApplicationV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ApplicationV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ApplicationV2 is the Schema for the ApplicationV2s API. Manages a APIGW Application resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ApplicationV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gatewayId) || (has(self.initProvider) && has(self.initProvider.gatewayId))",message="spec.forProvider.gatewayId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ApplicationV2Spec   `json:"spec"`
	Status ApplicationV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationV2List contains a list of ApplicationV2s
type ApplicationV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApplicationV2 `json:"items"`
}

// Repository type metadata.
var (
	ApplicationV2_Kind             = "ApplicationV2"
	ApplicationV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ApplicationV2_Kind}.String()
	ApplicationV2_KindAPIVersion   = ApplicationV2_Kind + "." + CRDGroupVersion.String()
	ApplicationV2_GroupVersionKind = CRDGroupVersion.WithKind(ApplicationV2_Kind)
)

func init() {
	SchemeBuilder.Register(&ApplicationV2{}, &ApplicationV2List{})
}
