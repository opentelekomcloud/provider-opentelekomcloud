// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppcodeV2InitParameters struct {

	// Specifies the ID of application to which the AppCode belongs.
	// Changing this will create a new resource.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// Specifies the ID of the dedicated instance to which the application
	// and AppCode belong. Changing this will create a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the AppCode value (content).
	// The value can contain 64 to 180 characters, starting with a letter, plus sign +, or slash /, or digit.
	// Only letters, digit and the following special characters are allowed: +_!@#$%/=.
	// If omitted, a random value will be generated. Changing this will create a new resource.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AppcodeV2Observation struct {

	// Specifies the ID of application to which the AppCode belongs.
	// Changing this will create a new resource.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// The creation time of the AppCode.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the ID of the dedicated instance to which the application
	// and AppCode belong. Changing this will create a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// The AppCode ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The region where the application and AppCode are located.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the AppCode value (content).
	// The value can contain 64 to 180 characters, starting with a letter, plus sign +, or slash /, or digit.
	// Only letters, digit and the following special characters are allowed: +_!@#$%/=.
	// If omitted, a random value will be generated. Changing this will create a new resource.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AppcodeV2Parameters struct {

	// Specifies the ID of application to which the AppCode belongs.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// Specifies the ID of the dedicated instance to which the application
	// and AppCode belong. Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the AppCode value (content).
	// The value can contain 64 to 180 characters, starting with a letter, plus sign +, or slash /, or digit.
	// Only letters, digit and the following special characters are allowed: +_!@#$%/=.
	// If omitted, a random value will be generated. Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// AppcodeV2Spec defines the desired state of AppcodeV2
type AppcodeV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppcodeV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AppcodeV2InitParameters `json:"initProvider,omitempty"`
}

// AppcodeV2Status defines the observed state of AppcodeV2.
type AppcodeV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppcodeV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AppcodeV2 is the Schema for the AppcodeV2s API. Manages a APIGW AppCode resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type AppcodeV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.applicationId) || (has(self.initProvider) && has(self.initProvider.applicationId))",message="spec.forProvider.applicationId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gatewayId) || (has(self.initProvider) && has(self.initProvider.gatewayId))",message="spec.forProvider.gatewayId is a required parameter"
	Spec   AppcodeV2Spec   `json:"spec"`
	Status AppcodeV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppcodeV2List contains a list of AppcodeV2s
type AppcodeV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppcodeV2 `json:"items"`
}

// Repository type metadata.
var (
	AppcodeV2_Kind             = "AppcodeV2"
	AppcodeV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AppcodeV2_Kind}.String()
	AppcodeV2_KindAPIVersion   = AppcodeV2_Kind + "." + CRDGroupVersion.String()
	AppcodeV2_GroupVersionKind = CRDGroupVersion.WithKind(AppcodeV2_Kind)
)

func init() {
	SchemeBuilder.Register(&AppcodeV2{}, &AppcodeV2List{})
}
