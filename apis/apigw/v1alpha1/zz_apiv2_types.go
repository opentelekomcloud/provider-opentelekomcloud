// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type APIV2InitParameters struct {

	// Specifies the ID of the authorizer to which the API request used.
	// It is Required when security_authentication_type is AUTHORIZER.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the configurations of the backend parameters.
	// The object structure is documented below.
	BackendParams []BackendParamsInitParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters.
	// The request body does not exceed 20,480 characters.
	BodyDescription *string `json:"bodyDescription,omitempty" tf:"body_description,omitempty"`

	// Specifies whether CORS is supported, defaults to false.
	Cors *bool `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies the API description.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the example response for a failure request.
	// The response contains a maximum of 20,480 characters.
	FailureResponse *string `json:"failureResponse,omitempty" tf:"failure_response,omitempty"`

	// Specifies the function graph backend details.
	// The object structure is documented below.
	// Changing this will create a new API resource.
	FuncGraph []FuncGraphInitParameters `json:"funcGraph,omitempty" tf:"func_graph,omitempty"`

	// Specifies the Mock policy backends.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	FuncGraphPolicy []FuncGraphPolicyInitParameters `json:"funcGraphPolicy,omitempty" tf:"func_graph_policy,omitempty"`

	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies an ID of the APIG group to which the API belongs to.
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Specifies the web backend details.
	// The object structure is documented below. Changing this will create a new API resource.
	HTTP []HTTPInitParameters `json:"http,omitempty" tf:"http,omitempty"`

	// Specifies the example response for a failed request.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	HTTPPolicy []HTTPPolicyInitParameters `json:"httpPolicy,omitempty" tf:"http_policy,omitempty"`

	// Specifies the route matching mode.
	// The valid values are EXACT and PREFIX, defaults to EXACT.
	MatchMode *string `json:"matchMode,omitempty" tf:"match_mode,omitempty"`

	// Specifies the mock backend details.
	// The object structure is documented below.
	// Changing this will create a new API resource.
	Mock []MockInitParameters `json:"mock,omitempty" tf:"mock,omitempty"`

	// Specifies the Mock policy backends.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	// The mock policy backends.
	MockPolicy []MockPolicyInitParameters `json:"mockPolicy,omitempty" tf:"mock_policy,omitempty"`

	// Specifies the API name.
	// The valid length is limited from can contain 3 to 255, only Chinese and English letters, digits and
	// following special characters are allowed: -_./（()）:：、.
	// The name must start with a digit, Chinese or English letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the API is located.
	// If omitted, the provider-level region will be used. Changing this will create a new API resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	RequestMethod *string `json:"requestMethod,omitempty" tf:"request_method,omitempty"`

	// Specifies the configurations of the front-end parameters.
	// The object structure is documented below.
	RequestParams []RequestParamsInitParameters `json:"requestParams,omitempty" tf:"request_params,omitempty"`

	// Specifies the request protocol of the API.
	// The valid values are HTTP, HTTPS and BOTH.
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the request address, which can contain a maximum of 512 characters,
	// the request parameters enclosed with brackets ({}).
	RequestURI *string `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// Specifies the APIG group response ID.
	ResponseID *string `json:"responseId,omitempty" tf:"response_id,omitempty"`

	// Specifies whether the authentication of the application code is enabled.
	// The application code must located in the header when security_authentication_enabled is true.
	SecurityAuthenticationEnabled *bool `json:"securityAuthenticationEnabled,omitempty" tf:"security_authentication_enabled,omitempty"`

	// Specifies the security authentication mode of the API request.
	// The valid values are NONE, APP, IAM and AUTHORIZER, defaults to NONE.
	SecurityAuthenticationType *string `json:"securityAuthenticationType,omitempty" tf:"security_authentication_type,omitempty"`

	// Specifies the example response for a successful request.
	// The response contains a maximum of 20,480 characters.
	SuccessResponse *string `json:"successResponse,omitempty" tf:"success_response,omitempty"`

	// Tags. Use letters, digits, and special characters (-*#%.:_) and start with a letter.
	// By default, 10 tags are supported. To increase the quota, contact technical support to modify the API_TAG_NUM_LIMIT configuration.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the API version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type APIV2Observation struct {

	// Specifies the ID of the authorizer to which the API request used.
	// It is Required when security_authentication_type is AUTHORIZER.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the configurations of the backend parameters.
	// The object structure is documented below.
	BackendParams []BackendParamsObservation `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters.
	// The request body does not exceed 20,480 characters.
	BodyDescription *string `json:"bodyDescription,omitempty" tf:"body_description,omitempty"`

	// Specifies whether CORS is supported, defaults to false.
	Cors *bool `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies the API description.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the example response for a failure request.
	// The response contains a maximum of 20,480 characters.
	FailureResponse *string `json:"failureResponse,omitempty" tf:"failure_response,omitempty"`

	// Specifies the function graph backend details.
	// The object structure is documented below.
	// Changing this will create a new API resource.
	FuncGraph []FuncGraphObservation `json:"funcGraph,omitempty" tf:"func_graph,omitempty"`

	// Specifies the Mock policy backends.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	FuncGraphPolicy []FuncGraphPolicyObservation `json:"funcGraphPolicy,omitempty" tf:"func_graph_policy,omitempty"`

	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies an ID of the APIG group to which the API belongs to.
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Specifies the web backend details.
	// The object structure is documented below. Changing this will create a new API resource.
	HTTP []HTTPObservation `json:"http,omitempty" tf:"http,omitempty"`

	// Specifies the example response for a failed request.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	HTTPPolicy []HTTPPolicyObservation `json:"httpPolicy,omitempty" tf:"http_policy,omitempty"`

	// The ID of the API.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the route matching mode.
	// The valid values are EXACT and PREFIX, defaults to EXACT.
	MatchMode *string `json:"matchMode,omitempty" tf:"match_mode,omitempty"`

	// Specifies the mock backend details.
	// The object structure is documented below.
	// Changing this will create a new API resource.
	Mock []MockObservation `json:"mock,omitempty" tf:"mock,omitempty"`

	// Specifies the Mock policy backends.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	// The mock policy backends.
	MockPolicy []MockPolicyObservation `json:"mockPolicy,omitempty" tf:"mock_policy,omitempty"`

	// Specifies the API name.
	// The valid length is limited from can contain 3 to 255, only Chinese and English letters, digits and
	// following special characters are allowed: -_./（()）:：、.
	// The name must start with a digit, Chinese or English letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the API is located.
	// If omitted, the provider-level region will be used. Changing this will create a new API resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Time when the API is registered.
	RegisteredAt *string `json:"registeredAt,omitempty" tf:"registered_at,omitempty"`

	// Specifies the request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	RequestMethod *string `json:"requestMethod,omitempty" tf:"request_method,omitempty"`

	// Specifies the configurations of the front-end parameters.
	// The object structure is documented below.
	RequestParams []RequestParamsObservation `json:"requestParams,omitempty" tf:"request_params,omitempty"`

	// Specifies the request protocol of the API.
	// The valid values are HTTP, HTTPS and BOTH.
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the request address, which can contain a maximum of 512 characters,
	// the request parameters enclosed with brackets ({}).
	RequestURI *string `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// Specifies the APIG group response ID.
	ResponseID *string `json:"responseId,omitempty" tf:"response_id,omitempty"`

	// Specifies whether the authentication of the application code is enabled.
	// The application code must located in the header when security_authentication_enabled is true.
	SecurityAuthenticationEnabled *bool `json:"securityAuthenticationEnabled,omitempty" tf:"security_authentication_enabled,omitempty"`

	// Specifies the security authentication mode of the API request.
	// The valid values are NONE, APP, IAM and AUTHORIZER, defaults to NONE.
	SecurityAuthenticationType *string `json:"securityAuthenticationType,omitempty" tf:"security_authentication_type,omitempty"`

	// Specifies the example response for a successful request.
	// The response contains a maximum of 20,480 characters.
	SuccessResponse *string `json:"successResponse,omitempty" tf:"success_response,omitempty"`

	// Tags. Use letters, digits, and special characters (-*#%.:_) and start with a letter.
	// By default, 10 tags are supported. To increase the quota, contact technical support to modify the API_TAG_NUM_LIMIT configuration.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Time when the API was last modified.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Specifies the API version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type APIV2Parameters struct {

	// Specifies the ID of the authorizer to which the API request used.
	// It is Required when security_authentication_type is AUTHORIZER.
	// +kubebuilder:validation:Optional
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the configurations of the backend parameters.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	BackendParams []BackendParamsParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters.
	// The request body does not exceed 20,480 characters.
	// +kubebuilder:validation:Optional
	BodyDescription *string `json:"bodyDescription,omitempty" tf:"body_description,omitempty"`

	// Specifies whether CORS is supported, defaults to false.
	// +kubebuilder:validation:Optional
	Cors *bool `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies the API description.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the example response for a failure request.
	// The response contains a maximum of 20,480 characters.
	// +kubebuilder:validation:Optional
	FailureResponse *string `json:"failureResponse,omitempty" tf:"failure_response,omitempty"`

	// Specifies the function graph backend details.
	// The object structure is documented below.
	// Changing this will create a new API resource.
	// +kubebuilder:validation:Optional
	FuncGraph []FuncGraphParameters `json:"funcGraph,omitempty" tf:"func_graph,omitempty"`

	// Specifies the Mock policy backends.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	FuncGraphPolicy []FuncGraphPolicyParameters `json:"funcGraphPolicy,omitempty" tf:"func_graph_policy,omitempty"`

	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	// +kubebuilder:validation:Optional
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies an ID of the APIG group to which the API belongs to.
	// +kubebuilder:validation:Optional
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Specifies the web backend details.
	// The object structure is documented below. Changing this will create a new API resource.
	// +kubebuilder:validation:Optional
	HTTP []HTTPParameters `json:"http,omitempty" tf:"http,omitempty"`

	// Specifies the example response for a failed request.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPPolicy []HTTPPolicyParameters `json:"httpPolicy,omitempty" tf:"http_policy,omitempty"`

	// Specifies the route matching mode.
	// The valid values are EXACT and PREFIX, defaults to EXACT.
	// +kubebuilder:validation:Optional
	MatchMode *string `json:"matchMode,omitempty" tf:"match_mode,omitempty"`

	// Specifies the mock backend details.
	// The object structure is documented below.
	// Changing this will create a new API resource.
	// +kubebuilder:validation:Optional
	Mock []MockParameters `json:"mock,omitempty" tf:"mock,omitempty"`

	// Specifies the Mock policy backends.
	// The maximum blocks of the policy is 5.
	// The object structure is documented below.
	// The mock policy backends.
	// +kubebuilder:validation:Optional
	MockPolicy []MockPolicyParameters `json:"mockPolicy,omitempty" tf:"mock_policy,omitempty"`

	// Specifies the API name.
	// The valid length is limited from can contain 3 to 255, only Chinese and English letters, digits and
	// following special characters are allowed: -_./（()）:：、.
	// The name must start with a digit, Chinese or English letter.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the API is located.
	// If omitted, the provider-level region will be used. Changing this will create a new API resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	// +kubebuilder:validation:Optional
	RequestMethod *string `json:"requestMethod,omitempty" tf:"request_method,omitempty"`

	// Specifies the configurations of the front-end parameters.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	RequestParams []RequestParamsParameters `json:"requestParams,omitempty" tf:"request_params,omitempty"`

	// Specifies the request protocol of the API.
	// The valid values are HTTP, HTTPS and BOTH.
	// +kubebuilder:validation:Optional
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the request address, which can contain a maximum of 512 characters,
	// the request parameters enclosed with brackets ({}).
	// +kubebuilder:validation:Optional
	RequestURI *string `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// Specifies the APIG group response ID.
	// +kubebuilder:validation:Optional
	ResponseID *string `json:"responseId,omitempty" tf:"response_id,omitempty"`

	// Specifies whether the authentication of the application code is enabled.
	// The application code must located in the header when security_authentication_enabled is true.
	// +kubebuilder:validation:Optional
	SecurityAuthenticationEnabled *bool `json:"securityAuthenticationEnabled,omitempty" tf:"security_authentication_enabled,omitempty"`

	// Specifies the security authentication mode of the API request.
	// The valid values are NONE, APP, IAM and AUTHORIZER, defaults to NONE.
	// +kubebuilder:validation:Optional
	SecurityAuthenticationType *string `json:"securityAuthenticationType,omitempty" tf:"security_authentication_type,omitempty"`

	// Specifies the example response for a successful request.
	// The response contains a maximum of 20,480 characters.
	// +kubebuilder:validation:Optional
	SuccessResponse *string `json:"successResponse,omitempty" tf:"success_response,omitempty"`

	// Tags. Use letters, digits, and special characters (-*#%.:_) and start with a letter.
	// By default, 10 tags are supported. To increase the quota, contact technical support to modify the API_TAG_NUM_LIMIT configuration.
	// +kubebuilder:validation:Optional
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the API version.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type BackendParamsInitParameters struct {

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the backend parameter.
	// The valid values are PATH, QUERY and HEADER.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the backend parameter name, which contain of 1 to 32 characters and start with a
	// letter. Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed. The parameter name is not
	// case-sensitive. It cannot start with x-apig- or x-sdk- and cannot be x-stage. If the location is specified as
	// HEADER, the name cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the backend parameter type.
	// The valid values are REQUEST, CONSTANT and SYSTEM.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the request parameter name corresponding to the back-end request parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type BackendParamsObservation struct {

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the backend parameter.
	// The valid values are PATH, QUERY and HEADER.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the backend parameter name, which contain of 1 to 32 characters and start with a
	// letter. Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed. The parameter name is not
	// case-sensitive. It cannot start with x-apig- or x-sdk- and cannot be x-stage. If the location is specified as
	// HEADER, the name cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the backend parameter type.
	// The valid values are REQUEST, CONSTANT and SYSTEM.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the request parameter name corresponding to the back-end request parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type BackendParamsParameters struct {

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the backend parameter.
	// The valid values are PATH, QUERY and HEADER.
	// +kubebuilder:validation:Optional
	Location *string `json:"location" tf:"location,omitempty"`

	// Specifies the backend parameter name, which contain of 1 to 32 characters and start with a
	// letter. Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed. The parameter name is not
	// case-sensitive. It cannot start with x-apig- or x-sdk- and cannot be x-stage. If the location is specified as
	// HEADER, the name cannot contain underscores.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	// +kubebuilder:validation:Optional
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the backend parameter type.
	// The valid values are REQUEST, CONSTANT and SYSTEM.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Specifies the request parameter name corresponding to the back-end request parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ConditionsInitParameters struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ConditionsObservation struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ConditionsParameters struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	// +kubebuilder:validation:Optional
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	// +kubebuilder:validation:Optional
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FuncGraphInitParameters struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the URN of the FunctionGraph function.
	FunctionUrn *string `json:"functionUrn,omitempty" tf:"function_urn,omitempty"`

	// Specifies the invocation type.
	// The valid values are async and sync, defaults to sync.
	InvocationType *string `json:"invocationType,omitempty" tf:"invocation_type,omitempty"`

	// Function network architecture.
	// The valid values are VPC and NON-VPC, defaults to NON-VPC.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the timeout for API requests to backend service.
	// The valid value is range form 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the function version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FuncGraphObservation struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the URN of the FunctionGraph function.
	FunctionUrn *string `json:"functionUrn,omitempty" tf:"function_urn,omitempty"`

	// Specifies the invocation type.
	// The valid values are async and sync, defaults to sync.
	InvocationType *string `json:"invocationType,omitempty" tf:"invocation_type,omitempty"`

	// Function network architecture.
	// The valid values are VPC and NON-VPC, defaults to NON-VPC.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the timeout for API requests to backend service.
	// The valid value is range form 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the function version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FuncGraphParameters struct {

	// Specifies the ID of the backend custom authorization.
	// +kubebuilder:validation:Optional
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the URN of the FunctionGraph function.
	// +kubebuilder:validation:Optional
	FunctionUrn *string `json:"functionUrn" tf:"function_urn,omitempty"`

	// Specifies the invocation type.
	// The valid values are async and sync, defaults to sync.
	// +kubebuilder:validation:Optional
	InvocationType *string `json:"invocationType,omitempty" tf:"invocation_type,omitempty"`

	// Function network architecture.
	// The valid values are VPC and NON-VPC, defaults to NON-VPC.
	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the timeout for API requests to backend service.
	// The valid value is range form 1 to 600,000, defaults to 5,000.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the function version.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FuncGraphPolicyBackendParamsInitParameters struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FuncGraphPolicyBackendParamsObservation struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FuncGraphPolicyBackendParamsParameters struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	// +kubebuilder:validation:Optional
	Location *string `json:"location" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	// +kubebuilder:validation:Optional
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FuncGraphPolicyInitParameters struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the configuration list of the backend parameters.
	// The maximum of request parameters is 50.
	// The object structure is documented above.
	BackendParams []FuncGraphPolicyBackendParamsInitParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	Conditions []ConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy.
	// The valid values are ALL and ANY, defaults to ANY.
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the URN of the FunctionGraph function.
	FunctionUrn *string `json:"functionUrn,omitempty" tf:"function_urn,omitempty"`

	// Specifies the invocation type.
	// The valid values are async and sync, defaults to sync.
	InvocationType *string `json:"invocationType,omitempty" tf:"invocation_type,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Function network architecture.
	// The valid values are VPC and NON-VPC, defaults to NON-VPC.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the timeout for API requests to backend service, the unit is ms.
	// The valid value ranges from 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the version of the FunctionGraph function.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FuncGraphPolicyObservation struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the configuration list of the backend parameters.
	// The maximum of request parameters is 50.
	// The object structure is documented above.
	BackendParams []FuncGraphPolicyBackendParamsObservation `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	Conditions []ConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy.
	// The valid values are ALL and ANY, defaults to ANY.
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the URN of the FunctionGraph function.
	FunctionUrn *string `json:"functionUrn,omitempty" tf:"function_urn,omitempty"`

	// Specifies the invocation type.
	// The valid values are async and sync, defaults to sync.
	InvocationType *string `json:"invocationType,omitempty" tf:"invocation_type,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Function network architecture.
	// The valid values are VPC and NON-VPC, defaults to NON-VPC.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the timeout for API requests to backend service, the unit is ms.
	// The valid value ranges from 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the version of the FunctionGraph function.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FuncGraphPolicyParameters struct {

	// Specifies the ID of the backend custom authorization.
	// +kubebuilder:validation:Optional
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the configuration list of the backend parameters.
	// The maximum of request parameters is 50.
	// The object structure is documented above.
	// +kubebuilder:validation:Optional
	BackendParams []FuncGraphPolicyBackendParamsParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	Conditions []ConditionsParameters `json:"conditions" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy.
	// The valid values are ALL and ANY, defaults to ANY.
	// +kubebuilder:validation:Optional
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the URN of the FunctionGraph function.
	// +kubebuilder:validation:Optional
	FunctionUrn *string `json:"functionUrn" tf:"function_urn,omitempty"`

	// Specifies the invocation type.
	// The valid values are async and sync, defaults to sync.
	// +kubebuilder:validation:Optional
	InvocationType *string `json:"invocationType,omitempty" tf:"invocation_type,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Function network architecture.
	// The valid values are VPC and NON-VPC, defaults to NON-VPC.
	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the timeout for API requests to backend service, the unit is ms.
	// The valid value ranges from 1 to 600,000, defaults to 5,000.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the version of the FunctionGraph function.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HTTPInitParameters struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the backend request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	RequestMethod *string `json:"requestMethod,omitempty" tf:"request_method,omitempty"`

	// Specifies the backend request protocol.
	// The valid values are HTTP and HTTPS, defaults to HTTPS.
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the backend request address, which can contain a maximum of 512 characters and
	// must comply with URI specifications.
	RequestURI *string `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// Specifies the number of retry attempts to request the backend service.
	// The valid value ranges from -1 to 10, defaults to -1.
	// -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
	// POST and PATCH are not-idempotent.
	// GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
	RetryCount *float64 `json:"retryCount,omitempty" tf:"retry_count,omitempty"`

	// Specifies whether to enable two-way authentication, defaults to false.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the timeout for API requests to backend service, the unit is ms.
	// The valid value ranges from 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Backend service address.
	// A backend service address consists of a domain name or IP address and a port number,
	// with not more than 255 characters. It must be in the format Host name:Port number,
	// for example, apig.example.com:7443. If the port number is not specified, the default HTTPS port 443 or the default HTTP port 80 is used.
	URLDomain *string `json:"urlDomain,omitempty" tf:"url_domain,omitempty"`

	// Specifies the VPC channel ID. This parameter and url_domain are
	// alternative.
	VPCChannelID *string `json:"vpcChannelId,omitempty" tf:"vpc_channel_id,omitempty"`

	// Specifies the proxy host header.
	// The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
	// By default, the original host header of the request is used.
	VPCChannelProxyHost *string `json:"vpcChannelProxyHost,omitempty" tf:"vpc_channel_proxy_host,omitempty"`

	// Specifies the function version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HTTPObservation struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the backend request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	RequestMethod *string `json:"requestMethod,omitempty" tf:"request_method,omitempty"`

	// Specifies the backend request protocol.
	// The valid values are HTTP and HTTPS, defaults to HTTPS.
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the backend request address, which can contain a maximum of 512 characters and
	// must comply with URI specifications.
	RequestURI *string `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// Specifies the number of retry attempts to request the backend service.
	// The valid value ranges from -1 to 10, defaults to -1.
	// -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
	// POST and PATCH are not-idempotent.
	// GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
	RetryCount *float64 `json:"retryCount,omitempty" tf:"retry_count,omitempty"`

	// Specifies whether to enable two-way authentication, defaults to false.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the timeout for API requests to backend service, the unit is ms.
	// The valid value ranges from 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Backend service address.
	// A backend service address consists of a domain name or IP address and a port number,
	// with not more than 255 characters. It must be in the format Host name:Port number,
	// for example, apig.example.com:7443. If the port number is not specified, the default HTTPS port 443 or the default HTTP port 80 is used.
	URLDomain *string `json:"urlDomain,omitempty" tf:"url_domain,omitempty"`

	// Specifies the VPC channel ID. This parameter and url_domain are
	// alternative.
	VPCChannelID *string `json:"vpcChannelId,omitempty" tf:"vpc_channel_id,omitempty"`

	// Specifies the proxy host header.
	// The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
	// By default, the original host header of the request is used.
	VPCChannelProxyHost *string `json:"vpcChannelProxyHost,omitempty" tf:"vpc_channel_proxy_host,omitempty"`

	// Specifies the function version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HTTPParameters struct {

	// Specifies the ID of the backend custom authorization.
	// +kubebuilder:validation:Optional
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the backend request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	// +kubebuilder:validation:Optional
	RequestMethod *string `json:"requestMethod" tf:"request_method,omitempty"`

	// Specifies the backend request protocol.
	// The valid values are HTTP and HTTPS, defaults to HTTPS.
	// +kubebuilder:validation:Optional
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the backend request address, which can contain a maximum of 512 characters and
	// must comply with URI specifications.
	// +kubebuilder:validation:Optional
	RequestURI *string `json:"requestUri" tf:"request_uri,omitempty"`

	// Specifies the number of retry attempts to request the backend service.
	// The valid value ranges from -1 to 10, defaults to -1.
	// -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
	// POST and PATCH are not-idempotent.
	// GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
	// +kubebuilder:validation:Optional
	RetryCount *float64 `json:"retryCount,omitempty" tf:"retry_count,omitempty"`

	// Specifies whether to enable two-way authentication, defaults to false.
	// +kubebuilder:validation:Optional
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the timeout for API requests to backend service, the unit is ms.
	// The valid value ranges from 1 to 600,000, defaults to 5,000.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Backend service address.
	// A backend service address consists of a domain name or IP address and a port number,
	// with not more than 255 characters. It must be in the format Host name:Port number,
	// for example, apig.example.com:7443. If the port number is not specified, the default HTTPS port 443 or the default HTTP port 80 is used.
	// +kubebuilder:validation:Optional
	URLDomain *string `json:"urlDomain,omitempty" tf:"url_domain,omitempty"`

	// Specifies the VPC channel ID. This parameter and url_domain are
	// alternative.
	// +kubebuilder:validation:Optional
	VPCChannelID *string `json:"vpcChannelId,omitempty" tf:"vpc_channel_id,omitempty"`

	// Specifies the proxy host header.
	// The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
	// By default, the original host header of the request is used.
	// +kubebuilder:validation:Optional
	VPCChannelProxyHost *string `json:"vpcChannelProxyHost,omitempty" tf:"vpc_channel_proxy_host,omitempty"`

	// Specifies the function version.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HTTPPolicyBackendParamsInitParameters struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPPolicyBackendParamsObservation struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPPolicyBackendParamsParameters struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	// +kubebuilder:validation:Optional
	Location *string `json:"location" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	// +kubebuilder:validation:Optional
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type HTTPPolicyConditionsInitParameters struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPPolicyConditionsObservation struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPPolicyConditionsParameters struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	// +kubebuilder:validation:Optional
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	// +kubebuilder:validation:Optional
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type HTTPPolicyInitParameters struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	BackendParams []HTTPPolicyBackendParamsInitParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	Conditions []HTTPPolicyConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy. The valid values are ALL
	// and ANY, defaults to ANY.
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the backend request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	RequestMethod *string `json:"requestMethod,omitempty" tf:"request_method,omitempty"`

	// Specifies the backend request protocol. The valid values are HTTP and
	// HTTPS, defaults to HTTPS.
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the backend request address, which can contain a maximum of 512 characters and
	// must comply with URI specifications.
	RequestURI *string `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// Specifies the number of retry attempts to request the backend service.
	// The valid value ranges from -1 to 10, defaults to -1.
	// -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
	// POST and PATCH are not-idempotent.
	// GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
	RetryCount *float64 `json:"retryCount,omitempty" tf:"retry_count,omitempty"`

	// Specifies the timeout, in ms, which allowed for APIGW to request the backend service. The
	// valid value is range from 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the backend service address.
	// The value which consists of a domain name or IP address, and a port number, with not more than 255 characters.
	// The backend service address must be in the format "{host name}:{Port number}", for example, apig.example.com:7443.
	// If the port number is not specified, the default HTTPS port 443, or the default HTTP port 80 is used.
	// The backend service address can contain environment variables, each starting with a letter and consisting of 3 to
	// 32 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
	URLDomain *string `json:"urlDomain,omitempty" tf:"url_domain,omitempty"`

	// Specifies the VPC channel ID.
	// This parameter and url_domain are alternative.
	VPCChannelID *string `json:"vpcChannelId,omitempty" tf:"vpc_channel_id,omitempty"`

	// Specifies the proxy host header.
	// The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
	// By default, the original host header of the request is used.
	VPCChannelProxyHost *string `json:"vpcChannelProxyHost,omitempty" tf:"vpc_channel_proxy_host,omitempty"`
}

type HTTPPolicyObservation struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	BackendParams []HTTPPolicyBackendParamsObservation `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	Conditions []HTTPPolicyConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy. The valid values are ALL
	// and ANY, defaults to ANY.
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the backend request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	RequestMethod *string `json:"requestMethod,omitempty" tf:"request_method,omitempty"`

	// Specifies the backend request protocol. The valid values are HTTP and
	// HTTPS, defaults to HTTPS.
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the backend request address, which can contain a maximum of 512 characters and
	// must comply with URI specifications.
	RequestURI *string `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// Specifies the number of retry attempts to request the backend service.
	// The valid value ranges from -1 to 10, defaults to -1.
	// -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
	// POST and PATCH are not-idempotent.
	// GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
	RetryCount *float64 `json:"retryCount,omitempty" tf:"retry_count,omitempty"`

	// Specifies the timeout, in ms, which allowed for APIGW to request the backend service. The
	// valid value is range from 1 to 600,000, defaults to 5,000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the backend service address.
	// The value which consists of a domain name or IP address, and a port number, with not more than 255 characters.
	// The backend service address must be in the format "{host name}:{Port number}", for example, apig.example.com:7443.
	// If the port number is not specified, the default HTTPS port 443, or the default HTTP port 80 is used.
	// The backend service address can contain environment variables, each starting with a letter and consisting of 3 to
	// 32 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
	URLDomain *string `json:"urlDomain,omitempty" tf:"url_domain,omitempty"`

	// Specifies the VPC channel ID.
	// This parameter and url_domain are alternative.
	VPCChannelID *string `json:"vpcChannelId,omitempty" tf:"vpc_channel_id,omitempty"`

	// Specifies the proxy host header.
	// The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
	// By default, the original host header of the request is used.
	VPCChannelProxyHost *string `json:"vpcChannelProxyHost,omitempty" tf:"vpc_channel_proxy_host,omitempty"`
}

type HTTPPolicyParameters struct {

	// Specifies the ID of the backend custom authorization.
	// +kubebuilder:validation:Optional
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	// +kubebuilder:validation:Optional
	BackendParams []HTTPPolicyBackendParamsParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	Conditions []HTTPPolicyConditionsParameters `json:"conditions" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy. The valid values are ALL
	// and ANY, defaults to ANY.
	// +kubebuilder:validation:Optional
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the backend request method of the API.
	// The valid values are GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS and ANY.
	// +kubebuilder:validation:Optional
	RequestMethod *string `json:"requestMethod" tf:"request_method,omitempty"`

	// Specifies the backend request protocol. The valid values are HTTP and
	// HTTPS, defaults to HTTPS.
	// +kubebuilder:validation:Optional
	RequestProtocol *string `json:"requestProtocol,omitempty" tf:"request_protocol,omitempty"`

	// Specifies the backend request address, which can contain a maximum of 512 characters and
	// must comply with URI specifications.
	// +kubebuilder:validation:Optional
	RequestURI *string `json:"requestUri" tf:"request_uri,omitempty"`

	// Specifies the number of retry attempts to request the backend service.
	// The valid value ranges from -1 to 10, defaults to -1.
	// -1 indicates that idempotent APIs will retry once and non-idempotent APIs will not retry.
	// POST and PATCH are not-idempotent.
	// GET, HEAD, PUT, OPTIONS and DELETE are idempotent.
	// +kubebuilder:validation:Optional
	RetryCount *float64 `json:"retryCount,omitempty" tf:"retry_count,omitempty"`

	// Specifies the timeout, in ms, which allowed for APIGW to request the backend service. The
	// valid value is range from 1 to 600,000, defaults to 5,000.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the backend service address.
	// The value which consists of a domain name or IP address, and a port number, with not more than 255 characters.
	// The backend service address must be in the format "{host name}:{Port number}", for example, apig.example.com:7443.
	// If the port number is not specified, the default HTTPS port 443, or the default HTTP port 80 is used.
	// The backend service address can contain environment variables, each starting with a letter and consisting of 3 to
	// 32 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
	// +kubebuilder:validation:Optional
	URLDomain *string `json:"urlDomain,omitempty" tf:"url_domain,omitempty"`

	// Specifies the VPC channel ID.
	// This parameter and url_domain are alternative.
	// +kubebuilder:validation:Optional
	VPCChannelID *string `json:"vpcChannelId,omitempty" tf:"vpc_channel_id,omitempty"`

	// Specifies the proxy host header.
	// The host header can be customized for requests to be forwarded to cloud servers through the VPC channel.
	// By default, the original host header of the request is used.
	// +kubebuilder:validation:Optional
	VPCChannelProxyHost *string `json:"vpcChannelProxyHost,omitempty" tf:"vpc_channel_proxy_host,omitempty"`
}

type MockInitParameters struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the response of the backend policy.
	// The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
	Response *string `json:"response,omitempty" tf:"response,omitempty"`

	// Specifies the mock version. It cannot exceed 64 characters.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MockObservation struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the response of the backend policy.
	// The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
	Response *string `json:"response,omitempty" tf:"response,omitempty"`

	// Specifies the mock version. It cannot exceed 64 characters.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MockParameters struct {

	// Specifies the ID of the backend custom authorization.
	// +kubebuilder:validation:Optional
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies the description of the constant or system parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the response of the backend policy.
	// The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Response *string `json:"response,omitempty" tf:"response,omitempty"`

	// Specifies the mock version. It cannot exceed 64 characters.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MockPolicyBackendParamsInitParameters struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MockPolicyBackendParamsObservation struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MockPolicyBackendParamsParameters struct {

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	// +kubebuilder:validation:Optional
	Location *string `json:"location" tf:"location,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the type of the system parameter.
	// The valid values are frontend, backend and internal, defaults to internal.
	// +kubebuilder:validation:Optional
	SystemParamType *string `json:"systemParamType,omitempty" tf:"system_param_type,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type MockPolicyConditionsInitParameters struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MockPolicyConditionsObservation struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MockPolicyConditionsParameters struct {

	// Specifies the backend policy type.
	// The valid values are param, source, defaults to source.
	// +kubebuilder:validation:Optional
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// Specifies the request parameter name.
	// This parameter is required if the policy type is param. The valid values are user_age and X-TEST-ENUM.
	// +kubebuilder:validation:Optional
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Specifies the API type.
	// The valid values are Public and Private.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the value of the backend policy.
	// For a condition with the input parameter source:
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type MockPolicyInitParameters struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies an array of one or more backend parameters.
	// The maximum of request parameters is 50.
	// The object structure is documented above.
	BackendParams []MockPolicyBackendParamsInitParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	Conditions []MockPolicyConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy.
	// The valid values are ALL and ANY, defaults to ANY.
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the response of the backend policy.
	// The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
	Response *string `json:"response,omitempty" tf:"response,omitempty"`
}

type MockPolicyObservation struct {

	// Specifies the ID of the backend custom authorization.
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies an array of one or more backend parameters.
	// The maximum of request parameters is 50.
	// The object structure is documented above.
	BackendParams []MockPolicyBackendParamsObservation `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	Conditions []MockPolicyConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy.
	// The valid values are ALL and ANY, defaults to ANY.
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the response of the backend policy.
	// The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
	Response *string `json:"response,omitempty" tf:"response,omitempty"`
}

type MockPolicyParameters struct {

	// Specifies the ID of the backend custom authorization.
	// +kubebuilder:validation:Optional
	AuthorizerID *string `json:"authorizerId,omitempty" tf:"authorizer_id,omitempty"`

	// Specifies an array of one or more backend parameters.
	// The maximum of request parameters is 50.
	// The object structure is documented above.
	// +kubebuilder:validation:Optional
	BackendParams []MockPolicyBackendParamsParameters `json:"backendParams,omitempty" tf:"backend_params,omitempty"`

	// Specifies an array of one or more policy conditions.
	// Up to five conditions can be set.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	Conditions []MockPolicyConditionsParameters `json:"conditions" tf:"conditions,omitempty"`

	// Specifies the effective mode of the backend policy.
	// The valid values are ALL and ANY, defaults to ANY.
	// +kubebuilder:validation:Optional
	EffectiveMode *string `json:"effectiveMode,omitempty" tf:"effective_mode,omitempty"`

	// Specifies the backend policy name.
	// The valid length is limited from can contain 3 to 64, only letters, digits and underscores (_) are allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the response of the backend policy.
	// The description contains a maximum of 2,048 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Response *string `json:"response,omitempty" tf:"response,omitempty"`
}

type RequestParamsInitParameters struct {

	// Specifies the default value of the request parameter.
	// The value contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the enumerated value(s).
	// Use commas to separate multiple enumeration values, such as VALUE_A,VALUE_B.
	Enumeration *string `json:"enumeration,omitempty" tf:"enumeration,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the maximum value or size of the request parameter.
	Maximum *float64 `json:"maximum,omitempty" tf:"maximum,omitempty"`

	// Specifies the minimum value or size of the request parameter.
	Minimum *float64 `json:"minimum,omitempty" tf:"minimum,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to transparently transfer the parameter.
	Passthrough *bool `json:"passthrough,omitempty" tf:"passthrough,omitempty"`

	// Specifies whether the request parameter is required.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`

	// Specifies the example value of the request parameter.
	// The example contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Sample *string `json:"sample,omitempty" tf:"sample,omitempty"`

	// Specifies the request parameter type.
	// The valid values are STRING and NUMBER, defaults to STRING.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	ValidityCheck *bool `json:"validityCheck,omitempty" tf:"validity_check,omitempty"`
}

type RequestParamsObservation struct {

	// Specifies the default value of the request parameter.
	// The value contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the enumerated value(s).
	// Use commas to separate multiple enumeration values, such as VALUE_A,VALUE_B.
	Enumeration *string `json:"enumeration,omitempty" tf:"enumeration,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the maximum value or size of the request parameter.
	Maximum *float64 `json:"maximum,omitempty" tf:"maximum,omitempty"`

	// Specifies the minimum value or size of the request parameter.
	Minimum *float64 `json:"minimum,omitempty" tf:"minimum,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to transparently transfer the parameter.
	Passthrough *bool `json:"passthrough,omitempty" tf:"passthrough,omitempty"`

	// Specifies whether the request parameter is required.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`

	// Specifies the example value of the request parameter.
	// The example contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Sample *string `json:"sample,omitempty" tf:"sample,omitempty"`

	// Specifies the request parameter type.
	// The valid values are STRING and NUMBER, defaults to STRING.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	ValidityCheck *bool `json:"validityCheck,omitempty" tf:"validity_check,omitempty"`
}

type RequestParamsParameters struct {

	// Specifies the default value of the request parameter.
	// The value contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// Specifies the description of the request parameter.
	// The description contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the enumerated value(s).
	// Use commas to separate multiple enumeration values, such as VALUE_A,VALUE_B.
	// +kubebuilder:validation:Optional
	Enumeration *string `json:"enumeration,omitempty" tf:"enumeration,omitempty"`

	// Specifies the location of the request parameter.
	// The valid values are PATH, QUERY and HEADER, defaults to PATH.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the maximum value or size of the request parameter.
	// +kubebuilder:validation:Optional
	Maximum *float64 `json:"maximum,omitempty" tf:"maximum,omitempty"`

	// Specifies the minimum value or size of the request parameter.
	// +kubebuilder:validation:Optional
	Minimum *float64 `json:"minimum,omitempty" tf:"minimum,omitempty"`

	// Specifies the request parameter name.
	// The valid length is limited from can contain 1 to 32, only letters, digits, hyphens (-), underscores (_) and
	// periods (.) are allowed.
	// If Location is specified as HEADER and security_authentication_type is specified as APP, the parameter name
	// cannot be Authorization (case-insensitive) and cannot contain underscores.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies whether to transparently transfer the parameter.
	// +kubebuilder:validation:Optional
	Passthrough *bool `json:"passthrough,omitempty" tf:"passthrough,omitempty"`

	// Specifies whether the request parameter is required.
	// +kubebuilder:validation:Optional
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`

	// Specifies the example value of the request parameter.
	// The example contains a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Sample *string `json:"sample,omitempty" tf:"sample,omitempty"`

	// Specifies the request parameter type.
	// The valid values are STRING and NUMBER, defaults to STRING.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	ValidityCheck *bool `json:"validityCheck,omitempty" tf:"validity_check,omitempty"`
}

// APIV2Spec defines the desired state of APIV2
type APIV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     APIV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider APIV2InitParameters `json:"initProvider,omitempty"`
}

// APIV2Status defines the observed state of APIV2.
type APIV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        APIV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// APIV2 is the Schema for the APIV2s API. Manages a APIGW API resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type APIV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gatewayId) || (has(self.initProvider) && has(self.initProvider.gatewayId))",message="spec.forProvider.gatewayId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.groupId) || (has(self.initProvider) && has(self.initProvider.groupId))",message="spec.forProvider.groupId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.requestMethod) || (has(self.initProvider) && has(self.initProvider.requestMethod))",message="spec.forProvider.requestMethod is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.requestProtocol) || (has(self.initProvider) && has(self.initProvider.requestProtocol))",message="spec.forProvider.requestProtocol is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.requestUri) || (has(self.initProvider) && has(self.initProvider.requestUri))",message="spec.forProvider.requestUri is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   APIV2Spec   `json:"spec"`
	Status APIV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// APIV2List contains a list of APIV2s
type APIV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []APIV2 `json:"items"`
}

// Repository type metadata.
var (
	APIV2_Kind             = "APIV2"
	APIV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: APIV2_Kind}.String()
	APIV2_KindAPIVersion   = APIV2_Kind + "." + CRDGroupVersion.String()
	APIV2_GroupVersionKind = CRDGroupVersion.WithKind(APIV2_Kind)
)

func init() {
	SchemeBuilder.Register(&APIV2{}, &APIV2List{})
}
