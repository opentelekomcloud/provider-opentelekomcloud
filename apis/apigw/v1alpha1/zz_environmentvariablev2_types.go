// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EnvironmentVariableV2InitParameters struct {

	// Specifies the ID of the environment to which the environment variable belongs.
	// Changing this creates a new resource.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// Specifies the ID of the dedicated gateway instance to which the environment
	// variable belongs. Changing this creates a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the ID of the group to which the environment variable belongs.
	// Changing this creates a new resource.
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Specifies the name of the environment variable.
	// The valid length is limited from 3 to 32 characters.
	// Only letters, digits, hyphens -, and underscores _ are allowed, and must start with a letter.
	// In the definition of an API, the name (case-sensitive) indicates a variable, for example, #Name#.
	// It is replaced by the actual value when the API is published in an environment. The variable name must be unique.
	// Changing this creates a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the value of the environment variable.
	// The valid length is limited from 1 to 255 characters. Only letters, digits and special characters _-/.: are allowed.
	// Changing this creates a new resource.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EnvironmentVariableV2Observation struct {

	// Specifies the ID of the environment to which the environment variable belongs.
	// Changing this creates a new resource.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// Specifies the ID of the dedicated gateway instance to which the environment
	// variable belongs. Changing this creates a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the ID of the group to which the environment variable belongs.
	// Changing this creates a new resource.
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the name of the environment variable.
	// The valid length is limited from 3 to 32 characters.
	// Only letters, digits, hyphens -, and underscores _ are allowed, and must start with a letter.
	// In the definition of an API, the name (case-sensitive) indicates a variable, for example, #Name#.
	// It is replaced by the actual value when the API is published in an environment. The variable name must be unique.
	// Changing this creates a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The region where the dedicated instance is located.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the value of the environment variable.
	// The valid length is limited from 1 to 255 characters. Only letters, digits and special characters _-/.: are allowed.
	// Changing this creates a new resource.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EnvironmentVariableV2Parameters struct {

	// Specifies the ID of the environment to which the environment variable belongs.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// Specifies the ID of the dedicated gateway instance to which the environment
	// variable belongs. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the ID of the group to which the environment variable belongs.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Specifies the name of the environment variable.
	// The valid length is limited from 3 to 32 characters.
	// Only letters, digits, hyphens -, and underscores _ are allowed, and must start with a letter.
	// In the definition of an API, the name (case-sensitive) indicates a variable, for example, #Name#.
	// It is replaced by the actual value when the API is published in an environment. The variable name must be unique.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the value of the environment variable.
	// The valid length is limited from 1 to 255 characters. Only letters, digits and special characters _-/.: are allowed.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// EnvironmentVariableV2Spec defines the desired state of EnvironmentVariableV2
type EnvironmentVariableV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentVariableV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentVariableV2InitParameters `json:"initProvider,omitempty"`
}

// EnvironmentVariableV2Status defines the observed state of EnvironmentVariableV2.
type EnvironmentVariableV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentVariableV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentVariableV2 is the Schema for the EnvironmentVariableV2s API. Manages a APIGW Environment variable resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type EnvironmentVariableV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.environmentId) || (has(self.initProvider) && has(self.initProvider.environmentId))",message="spec.forProvider.environmentId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gatewayId) || (has(self.initProvider) && has(self.initProvider.gatewayId))",message="spec.forProvider.gatewayId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.groupId) || (has(self.initProvider) && has(self.initProvider.groupId))",message="spec.forProvider.groupId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.value) || (has(self.initProvider) && has(self.initProvider.value))",message="spec.forProvider.value is a required parameter"
	Spec   EnvironmentVariableV2Spec   `json:"spec"`
	Status EnvironmentVariableV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentVariableV2List contains a list of EnvironmentVariableV2s
type EnvironmentVariableV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentVariableV2 `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentVariableV2_Kind             = "EnvironmentVariableV2"
	EnvironmentVariableV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentVariableV2_Kind}.String()
	EnvironmentVariableV2_KindAPIVersion   = EnvironmentVariableV2_Kind + "." + CRDGroupVersion.String()
	EnvironmentVariableV2_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentVariableV2_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentVariableV2{}, &EnvironmentVariableV2List{})
}
