// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppThrottlesInitParameters struct {

	// Specifies the maximum number of times an API can be accessed within a specified
	// period.
	MaxAPIRequests *float64 `json:"maxApiRequests,omitempty" tf:"max_api_requests,omitempty"`

	// Specifies the object ID which the special throttling policy belongs.
	ThrottlingObjectID *string `json:"throttlingObjectId,omitempty" tf:"throttling_object_id,omitempty"`
}

type AppThrottlesObservation struct {

	// ID of the special user/application throttling policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the maximum number of times an API can be accessed within a specified
	// period.
	MaxAPIRequests *float64 `json:"maxApiRequests,omitempty" tf:"max_api_requests,omitempty"`

	// Specifies the object ID which the special throttling policy belongs.
	ThrottlingObjectID *string `json:"throttlingObjectId,omitempty" tf:"throttling_object_id,omitempty"`

	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName *string `json:"throttlingObjectName,omitempty" tf:"throttling_object_name,omitempty"`
}

type AppThrottlesParameters struct {

	// Specifies the maximum number of times an API can be accessed within a specified
	// period.
	// +kubebuilder:validation:Optional
	MaxAPIRequests *float64 `json:"maxApiRequests" tf:"max_api_requests,omitempty"`

	// Specifies the object ID which the special throttling policy belongs.
	// +kubebuilder:validation:Optional
	ThrottlingObjectID *string `json:"throttlingObjectId" tf:"throttling_object_id,omitempty"`
}

type ThrottlingPolicyV2InitParameters struct {

	// Specifies the array of one or more special throttling policies for APP limit.
	// The app_throttles object structure is documented below.
	AppThrottles []AppThrottlesInitParameters `json:"appThrottles,omitempty" tf:"app_throttles,omitempty"`

	// Specifies the description about the API throttling policy.
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the dedicated instance to which the throttling
	// policy belongs.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the maximum number of times an API can be accessed within a specified
	// period. The value of this parameter cannot exceed the default limit 200 TPS.
	MaxAPIRequests *float64 `json:"maxApiRequests,omitempty" tf:"max_api_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by an app within
	// the same period.
	// The value of this parameter must be less than or equal to the value of max_user_requests.
	MaxAppRequests *float64 `json:"maxAppRequests,omitempty" tf:"max_app_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by an IP address
	// within the same period.
	// The value of this parameter must be less than or equal to the value of max_api_requests.
	MaxIPRequests *float64 `json:"maxIpRequests,omitempty" tf:"max_ip_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by a user within
	// the same period.
	// The value of this parameter must be less than or equal to the value of max_api_requests.
	MaxUserRequests *float64 `json:"maxUserRequests,omitempty" tf:"max_user_requests,omitempty"`

	// Specifies the name of the throttling policy.
	// The valid length is limited from 3 to 64, only English letters, digits and underscores (_) are
	// allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the period of time for limiting the number of API calls.
	// This parameter applies with each of the API call limits: max_api_requests, max_app_requests, max_ip_requests
	// and max_user_requests.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Specifies the time unit for limiting the number of API calls.
	// The valid values are SECOND, MINUTE, HOUR and DAY, defaults to MINUTE.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// Specifies the type of the request throttling policy.
	// The valid values are as follows:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the array of one or more special throttling policies for IAM user limit.
	// The user_throttles object structure is documented below.
	UserThrottles []UserThrottlesInitParameters `json:"userThrottles,omitempty" tf:"user_throttles,omitempty"`
}

type ThrottlingPolicyV2Observation struct {

	// Specifies the array of one or more special throttling policies for APP limit.
	// The app_throttles object structure is documented below.
	AppThrottles []AppThrottlesObservation `json:"appThrottles,omitempty" tf:"app_throttles,omitempty"`

	// The creation time of the throttling policy.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the description about the API throttling policy.
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the API throttling policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the dedicated instance to which the throttling
	// policy belongs.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the maximum number of times an API can be accessed within a specified
	// period. The value of this parameter cannot exceed the default limit 200 TPS.
	MaxAPIRequests *float64 `json:"maxApiRequests,omitempty" tf:"max_api_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by an app within
	// the same period.
	// The value of this parameter must be less than or equal to the value of max_user_requests.
	MaxAppRequests *float64 `json:"maxAppRequests,omitempty" tf:"max_app_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by an IP address
	// within the same period.
	// The value of this parameter must be less than or equal to the value of max_api_requests.
	MaxIPRequests *float64 `json:"maxIpRequests,omitempty" tf:"max_ip_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by a user within
	// the same period.
	// The value of this parameter must be less than or equal to the value of max_api_requests.
	MaxUserRequests *float64 `json:"maxUserRequests,omitempty" tf:"max_user_requests,omitempty"`

	// Specifies the name of the throttling policy.
	// The valid length is limited from 3 to 64, only English letters, digits and underscores (_) are
	// allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the period of time for limiting the number of API calls.
	// This parameter applies with each of the API call limits: max_api_requests, max_app_requests, max_ip_requests
	// and max_user_requests.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Specifies the time unit for limiting the number of API calls.
	// The valid values are SECOND, MINUTE, HOUR and DAY, defaults to MINUTE.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// The region where the throttling policy is located.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the type of the request throttling policy.
	// The valid values are as follows:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the array of one or more special throttling policies for IAM user limit.
	// The user_throttles object structure is documented below.
	UserThrottles []UserThrottlesObservation `json:"userThrottles,omitempty" tf:"user_throttles,omitempty"`
}

type ThrottlingPolicyV2Parameters struct {

	// Specifies the array of one or more special throttling policies for APP limit.
	// The app_throttles object structure is documented below.
	// +kubebuilder:validation:Optional
	AppThrottles []AppThrottlesParameters `json:"appThrottles,omitempty" tf:"app_throttles,omitempty"`

	// Specifies the description about the API throttling policy.
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the dedicated instance to which the throttling
	// policy belongs.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the maximum number of times an API can be accessed within a specified
	// period. The value of this parameter cannot exceed the default limit 200 TPS.
	// +kubebuilder:validation:Optional
	MaxAPIRequests *float64 `json:"maxApiRequests,omitempty" tf:"max_api_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by an app within
	// the same period.
	// The value of this parameter must be less than or equal to the value of max_user_requests.
	// +kubebuilder:validation:Optional
	MaxAppRequests *float64 `json:"maxAppRequests,omitempty" tf:"max_app_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by an IP address
	// within the same period.
	// The value of this parameter must be less than or equal to the value of max_api_requests.
	// +kubebuilder:validation:Optional
	MaxIPRequests *float64 `json:"maxIpRequests,omitempty" tf:"max_ip_requests,omitempty"`

	// Specifies the maximum number of times the API can be accessed by a user within
	// the same period.
	// The value of this parameter must be less than or equal to the value of max_api_requests.
	// +kubebuilder:validation:Optional
	MaxUserRequests *float64 `json:"maxUserRequests,omitempty" tf:"max_user_requests,omitempty"`

	// Specifies the name of the throttling policy.
	// The valid length is limited from 3 to 64, only English letters, digits and underscores (_) are
	// allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the period of time for limiting the number of API calls.
	// This parameter applies with each of the API call limits: max_api_requests, max_app_requests, max_ip_requests
	// and max_user_requests.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Specifies the time unit for limiting the number of API calls.
	// The valid values are SECOND, MINUTE, HOUR and DAY, defaults to MINUTE.
	// +kubebuilder:validation:Optional
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// Specifies the type of the request throttling policy.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the array of one or more special throttling policies for IAM user limit.
	// The user_throttles object structure is documented below.
	// +kubebuilder:validation:Optional
	UserThrottles []UserThrottlesParameters `json:"userThrottles,omitempty" tf:"user_throttles,omitempty"`
}

type UserThrottlesInitParameters struct {

	// Specifies the maximum number of times an API can be accessed within a specified
	// period.
	MaxAPIRequests *float64 `json:"maxApiRequests,omitempty" tf:"max_api_requests,omitempty"`

	// Specifies the object ID which the special throttling policy belongs.
	ThrottlingObjectID *string `json:"throttlingObjectId,omitempty" tf:"throttling_object_id,omitempty"`
}

type UserThrottlesObservation struct {

	// ID of the special user/application throttling policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the maximum number of times an API can be accessed within a specified
	// period.
	MaxAPIRequests *float64 `json:"maxApiRequests,omitempty" tf:"max_api_requests,omitempty"`

	// Specifies the object ID which the special throttling policy belongs.
	ThrottlingObjectID *string `json:"throttlingObjectId,omitempty" tf:"throttling_object_id,omitempty"`

	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName *string `json:"throttlingObjectName,omitempty" tf:"throttling_object_name,omitempty"`
}

type UserThrottlesParameters struct {

	// Specifies the maximum number of times an API can be accessed within a specified
	// period.
	// +kubebuilder:validation:Optional
	MaxAPIRequests *float64 `json:"maxApiRequests" tf:"max_api_requests,omitempty"`

	// Specifies the object ID which the special throttling policy belongs.
	// +kubebuilder:validation:Optional
	ThrottlingObjectID *string `json:"throttlingObjectId" tf:"throttling_object_id,omitempty"`
}

// ThrottlingPolicyV2Spec defines the desired state of ThrottlingPolicyV2
type ThrottlingPolicyV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ThrottlingPolicyV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ThrottlingPolicyV2InitParameters `json:"initProvider,omitempty"`
}

// ThrottlingPolicyV2Status defines the observed state of ThrottlingPolicyV2.
type ThrottlingPolicyV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ThrottlingPolicyV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ThrottlingPolicyV2 is the Schema for the ThrottlingPolicyV2s API. Manages a APIGW Throttling Policy resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ThrottlingPolicyV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceId) || (has(self.initProvider) && has(self.initProvider.instanceId))",message="spec.forProvider.instanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxApiRequests) || (has(self.initProvider) && has(self.initProvider.maxApiRequests))",message="spec.forProvider.maxApiRequests is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.period) || (has(self.initProvider) && has(self.initProvider.period))",message="spec.forProvider.period is a required parameter"
	Spec   ThrottlingPolicyV2Spec   `json:"spec"`
	Status ThrottlingPolicyV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ThrottlingPolicyV2List contains a list of ThrottlingPolicyV2s
type ThrottlingPolicyV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ThrottlingPolicyV2 `json:"items"`
}

// Repository type metadata.
var (
	ThrottlingPolicyV2_Kind             = "ThrottlingPolicyV2"
	ThrottlingPolicyV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ThrottlingPolicyV2_Kind}.String()
	ThrottlingPolicyV2_KindAPIVersion   = ThrottlingPolicyV2_Kind + "." + CRDGroupVersion.String()
	ThrottlingPolicyV2_GroupVersionKind = CRDGroupVersion.WithKind(ThrottlingPolicyV2_Kind)
)

func init() {
	SchemeBuilder.Register(&ThrottlingPolicyV2{}, &ThrottlingPolicyV2List{})
}
