// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type APIPublishmentV2InitParameters struct {

	// Specifies the ID of the API to be published or already published.
	// Changing this will create a new resource.
	APIID *string `json:"apiId,omitempty" tf:"api_id,omitempty"`

	// Specifies the description of the current publish.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the environment to which the current version of the API
	// will be published or has been published.
	// Changing this will create a new resource.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// The resource ID, which is constructed from the instance ID, environment ID, and API ID, separated by slashes.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the version ID of the current publish.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type APIPublishmentV2Observation struct {

	// Specifies the ID of the API to be published or already published.
	// Changing this will create a new resource.
	APIID *string `json:"apiId,omitempty" tf:"api_id,omitempty"`

	APIName *string `json:"apiName,omitempty" tf:"api_name,omitempty"`

	// Specifies the description of the current publish.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the environment to which the current version of the API
	// will be published or has been published.
	// Changing this will create a new resource.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// The name of the environment to which the current version of the API is published.
	EnvironmentName *string `json:"environmentName,omitempty" tf:"environment_name,omitempty"`

	// The resource ID, which is constructed from the instance ID, environment ID, and API ID, separated by slashes.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// All publish history of the API.
	// The object structure is documented below.
	History []HistoryObservation `json:"history,omitempty" tf:"history,omitempty"`

	// The resource ID, which is constructed from the instance ID, environment ID, and API ID, separated by slashes.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The publishing ID of the API in current environment.
	// The publish ID of the API in current environment.
	PublishID *string `json:"publishId,omitempty" tf:"publish_id,omitempty"`

	// Time when the current version was published.
	// Time when the current version was published.
	PublishedAt *string `json:"publishedAt,omitempty" tf:"published_at,omitempty"`

	// The region in which to APIs was published.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the version ID of the current publish.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type APIPublishmentV2Parameters struct {

	// Specifies the ID of the API to be published or already published.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	APIID *string `json:"apiId,omitempty" tf:"api_id,omitempty"`

	// Specifies the description of the current publish.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the environment to which the current version of the API
	// will be published or has been published.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// The resource ID, which is constructed from the instance ID, environment ID, and API ID, separated by slashes.
	// +kubebuilder:validation:Optional
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specifies the version ID of the current publish.
	// +kubebuilder:validation:Optional
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type HistoryInitParameters struct {
}

type HistoryObservation struct {

	// The version description of the API publish.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The version ID of the API publish.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type HistoryParameters struct {
}

// APIPublishmentV2Spec defines the desired state of APIPublishmentV2
type APIPublishmentV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     APIPublishmentV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider APIPublishmentV2InitParameters `json:"initProvider,omitempty"`
}

// APIPublishmentV2Status defines the observed state of APIPublishmentV2.
type APIPublishmentV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        APIPublishmentV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// APIPublishmentV2 is the Schema for the APIPublishmentV2s API. Manages a APIGW API publishment resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type APIPublishmentV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.apiId) || (has(self.initProvider) && has(self.initProvider.apiId))",message="spec.forProvider.apiId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.environmentId) || (has(self.initProvider) && has(self.initProvider.environmentId))",message="spec.forProvider.environmentId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gatewayId) || (has(self.initProvider) && has(self.initProvider.gatewayId))",message="spec.forProvider.gatewayId is a required parameter"
	Spec   APIPublishmentV2Spec   `json:"spec"`
	Status APIPublishmentV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// APIPublishmentV2List contains a list of APIPublishmentV2s
type APIPublishmentV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []APIPublishmentV2 `json:"items"`
}

// Repository type metadata.
var (
	APIPublishmentV2_Kind             = "APIPublishmentV2"
	APIPublishmentV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: APIPublishmentV2_Kind}.String()
	APIPublishmentV2_KindAPIVersion   = APIPublishmentV2_Kind + "." + CRDGroupVersion.String()
	APIPublishmentV2_GroupVersionKind = CRDGroupVersion.WithKind(APIPublishmentV2_Kind)
)

func init() {
	SchemeBuilder.Register(&APIPublishmentV2{}, &APIPublishmentV2List{})
}
