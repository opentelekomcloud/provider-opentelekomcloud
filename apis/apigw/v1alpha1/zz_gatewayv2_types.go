// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GatewayV2InitParameters struct {

	// Specifies gateway description.
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// Billing type of the public outbound access bandwidth.
	// The valid values are as follows:
	BandwidthChargingMode *string `json:"bandwidthChargingMode,omitempty" tf:"bandwidth_charging_mode,omitempty"`

	// Specifies outbound access bandwidth. This parameter is required if public outbound
	// access is enabled for the gateway. After you configure the bandwidth for the gateway,
	// users can access resources on public networks.
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// Specifies gateway description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the enterprise project ID to which the dedicated
	// instance belongs. This parameter is required for enterprise users.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the ingress bandwidth billing type of the dedicated instance.
	// The valid values are as follows:
	IngressBandwidthChargingMode *string `json:"ingressBandwidthChargingMode,omitempty" tf:"ingress_bandwidth_charging_mode,omitempty"`

	// Specifies public inbound access bandwidth. This parameter is required if public
	// inbound access is enabled for the gateway and loadbalancer_provider is set to elb.
	// After you bind an EIP to the gateway, users can access APIs in the gateway from public networks using the EIP.
	IngressBandwidthSize *float64 `json:"ingressBandwidthSize,omitempty" tf:"ingress_bandwidth_size,omitempty"`

	// Specifies type of the load balancer used by the gateway.
	// This resource provides the following timeouts configuration options:
	LoadbalancerProvider *string `json:"loadbalancerProvider,omitempty" tf:"loadbalancer_provider,omitempty"`

	// Specifies start time of the maintenance time window.
	// It must be in the format "xx:00:00". The value of xx can be 02, 06, 10, 14, 18, or 22.
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Specifies gateway name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies ID of the security group to which the gateway belongs.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Gateway edition. Options:
	// This resource provides the following timeouts configuration options:
	SpecID *string `json:"specId,omitempty" tf:"spec_id,omitempty"`

	// Specifies network ID.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type GatewayV2Observation struct {

	// Specifies gateway description.
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// Billing type of the public outbound access bandwidth.
	// The valid values are as follows:
	BandwidthChargingMode *string `json:"bandwidthChargingMode,omitempty" tf:"bandwidth_charging_mode,omitempty"`

	// Specifies outbound access bandwidth. This parameter is required if public outbound
	// access is enabled for the gateway. After you configure the bandwidth for the gateway,
	// users can access resources on public networks.
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// The ID of DEFAULT group.
	DefaultGroupID *string `json:"defaultGroupId,omitempty" tf:"default_group_id,omitempty"`

	// Specifies gateway description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the enterprise project ID to which the dedicated
	// instance belongs. This parameter is required for enterprise users.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ingress bandwidth billing type of the dedicated instance.
	// The valid values are as follows:
	IngressBandwidthChargingMode *string `json:"ingressBandwidthChargingMode,omitempty" tf:"ingress_bandwidth_charging_mode,omitempty"`

	// Specifies public inbound access bandwidth. This parameter is required if public
	// inbound access is enabled for the gateway and loadbalancer_provider is set to elb.
	// After you bind an EIP to the gateway, users can access APIs in the gateway from public networks using the EIP.
	IngressBandwidthSize *float64 `json:"ingressBandwidthSize,omitempty" tf:"ingress_bandwidth_size,omitempty"`

	// Specifies type of the load balancer used by the gateway.
	// This resource provides the following timeouts configuration options:
	LoadbalancerProvider *string `json:"loadbalancerProvider,omitempty" tf:"loadbalancer_provider,omitempty"`

	// Specifies start time of the maintenance time window.
	// It must be in the format "xx:00:00". The value of xx can be 02, 06, 10, 14, 18, or 22.
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// End time of the maintenance time window. It must be in the format "xx:00:00".
	// There is a 4-hour difference between the start time and end time.
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Specifies gateway name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of private egress addresses.
	PrivateEgressAddresses []*string `json:"privateEgressAddresses,omitempty" tf:"private_egress_addresses,omitempty"`

	// Instance project id.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// IP address for public outbound access.
	PublicEgressAddress *string `json:"publicEgressAddress,omitempty" tf:"public_egress_address,omitempty"`

	// Instance region.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies ID of the security group to which the gateway belongs.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Gateway edition. Options:
	// This resource provides the following timeouts configuration options:
	SpecID *string `json:"specId,omitempty" tf:"spec_id,omitempty"`

	// Instance status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies network ID.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Supported features.
	SupportedFeatures []*string `json:"supportedFeatures,omitempty" tf:"supported_features,omitempty"`

	// Specifies VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// VPC ingress address.
	VPCIngressAddress *string `json:"vpcIngressAddress,omitempty" tf:"vpc_ingress_address,omitempty"`

	// Name of a VPC endpoint service.
	VpcepServiceName *string `json:"vpcepServiceName,omitempty" tf:"vpcep_service_name,omitempty"`
}

type GatewayV2Parameters struct {

	// Specifies gateway description.
	// +kubebuilder:validation:Optional
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// Billing type of the public outbound access bandwidth.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	BandwidthChargingMode *string `json:"bandwidthChargingMode,omitempty" tf:"bandwidth_charging_mode,omitempty"`

	// Specifies outbound access bandwidth. This parameter is required if public outbound
	// access is enabled for the gateway. After you configure the bandwidth for the gateway,
	// users can access resources on public networks.
	// +kubebuilder:validation:Optional
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// Specifies gateway description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the enterprise project ID to which the dedicated
	// instance belongs. This parameter is required for enterprise users.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the ingress bandwidth billing type of the dedicated instance.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	IngressBandwidthChargingMode *string `json:"ingressBandwidthChargingMode,omitempty" tf:"ingress_bandwidth_charging_mode,omitempty"`

	// Specifies public inbound access bandwidth. This parameter is required if public
	// inbound access is enabled for the gateway and loadbalancer_provider is set to elb.
	// After you bind an EIP to the gateway, users can access APIs in the gateway from public networks using the EIP.
	// +kubebuilder:validation:Optional
	IngressBandwidthSize *float64 `json:"ingressBandwidthSize,omitempty" tf:"ingress_bandwidth_size,omitempty"`

	// Specifies type of the load balancer used by the gateway.
	// This resource provides the following timeouts configuration options:
	// +kubebuilder:validation:Optional
	LoadbalancerProvider *string `json:"loadbalancerProvider,omitempty" tf:"loadbalancer_provider,omitempty"`

	// Specifies start time of the maintenance time window.
	// It must be in the format "xx:00:00". The value of xx can be 02, 06, 10, 14, 18, or 22.
	// +kubebuilder:validation:Optional
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Specifies gateway name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies ID of the security group to which the gateway belongs.
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Gateway edition. Options:
	// This resource provides the following timeouts configuration options:
	// +kubebuilder:validation:Optional
	SpecID *string `json:"specId,omitempty" tf:"spec_id,omitempty"`

	// Specifies network ID.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies VPC ID.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

// GatewayV2Spec defines the desired state of GatewayV2
type GatewayV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GatewayV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GatewayV2InitParameters `json:"initProvider,omitempty"`
}

// GatewayV2Status defines the observed state of GatewayV2.
type GatewayV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GatewayV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GatewayV2 is the Schema for the GatewayV2s API. Manages a API Gateway resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type GatewayV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.availabilityZones) || (has(self.initProvider) && has(self.initProvider.availabilityZones))",message="spec.forProvider.availabilityZones is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.securityGroupId) || (has(self.initProvider) && has(self.initProvider.securityGroupId))",message="spec.forProvider.securityGroupId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.specId) || (has(self.initProvider) && has(self.initProvider.specId))",message="spec.forProvider.specId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subnetId) || (has(self.initProvider) && has(self.initProvider.subnetId))",message="spec.forProvider.subnetId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vpcId) || (has(self.initProvider) && has(self.initProvider.vpcId))",message="spec.forProvider.vpcId is a required parameter"
	Spec   GatewayV2Spec   `json:"spec"`
	Status GatewayV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayV2List contains a list of GatewayV2s
type GatewayV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewayV2 `json:"items"`
}

// Repository type metadata.
var (
	GatewayV2_Kind             = "GatewayV2"
	GatewayV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewayV2_Kind}.String()
	GatewayV2_KindAPIVersion   = GatewayV2_Kind + "." + CRDGroupVersion.String()
	GatewayV2_GroupVersionKind = CRDGroupVersion.WithKind(GatewayV2_Kind)
)

func init() {
	SchemeBuilder.Register(&GatewayV2{}, &GatewayV2List{})
}
