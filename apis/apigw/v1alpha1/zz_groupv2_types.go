// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EnvironmentInitParameters struct {

	// Specifies the environment ID of the associated group.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// Specifies an array of one or more environment variables.
	// The variable structure is documented below.
	Variable []VariableInitParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type EnvironmentObservation struct {

	// Specifies the environment ID of the associated group.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// Specifies an array of one or more environment variables.
	// The variable structure is documented below.
	Variable []VariableObservation `json:"variable,omitempty" tf:"variable,omitempty"`
}

type EnvironmentParameters struct {

	// Specifies the environment ID of the associated group.
	// +kubebuilder:validation:Optional
	EnvironmentID *string `json:"environmentId" tf:"environment_id,omitempty"`

	// Specifies an array of one or more environment variables.
	// The variable structure is documented below.
	// +kubebuilder:validation:Optional
	Variable []VariableParameters `json:"variable" tf:"variable,omitempty"`
}

type GroupV2InitParameters struct {

	// Specifies the group description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies an array of one or more environments of the associated group.
	// The environment structure is documented below.
	Environment []EnvironmentInitParameters `json:"environment,omitempty" tf:"environment,omitempty"`

	// Specifies the ID of the dedicated instance to which the group belongs.
	// Changing this will create a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the group name.
	// The valid length is limited from 3 to 64, only letters, digits and hyphens (-) are
	// allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the APIGW group is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type GroupV2Observation struct {

	// Specifies the group description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies an array of one or more environments of the associated group.
	// The environment structure is documented below.
	Environment []EnvironmentObservation `json:"environment,omitempty" tf:"environment,omitempty"`

	// The group ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the dedicated instance to which the group belongs.
	// Changing this will create a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the group name.
	// The valid length is limited from 3 to 64, only letters, digits and hyphens (-) are
	// allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the APIGW group is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The registration time, in RFC-3339 format.
	RegistrationTime *string `json:"registrationTime,omitempty" tf:"registration_time,omitempty"`

	// The time when the API group was last modified, in RFC-3339 format.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type GroupV2Parameters struct {

	// Specifies the group description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies an array of one or more environments of the associated group.
	// The environment structure is documented below.
	// +kubebuilder:validation:Optional
	Environment []EnvironmentParameters `json:"environment,omitempty" tf:"environment,omitempty"`

	// Specifies the ID of the dedicated instance to which the group belongs.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the group name.
	// The valid length is limited from 3 to 64, only letters, digits and hyphens (-) are
	// allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region where the APIGW group is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type VariableInitParameters struct {

	// Specifies the variable name.
	// The valid length is limited from 3 to 32 characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the variable value.
	// The valid length is limited from 1 to 255 characters.
	// Only letters, digits and special characters (_-/.:) are allowed.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableObservation struct {

	// The variable ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the variable name.
	// The valid length is limited from 3 to 32 characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the variable value.
	// The valid length is limited from 1 to 255 characters.
	// Only letters, digits and special characters (_-/.:) are allowed.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableParameters struct {

	// Specifies the variable name.
	// The valid length is limited from 3 to 32 characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the variable value.
	// The valid length is limited from 1 to 255 characters.
	// Only letters, digits and special characters (_-/.:) are allowed.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// GroupV2Spec defines the desired state of GroupV2
type GroupV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GroupV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GroupV2InitParameters `json:"initProvider,omitempty"`
}

// GroupV2Status defines the observed state of GroupV2.
type GroupV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GroupV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GroupV2 is the Schema for the GroupV2s API. Manages a APIGW Group resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type GroupV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceId) || (has(self.initProvider) && has(self.initProvider.instanceId))",message="spec.forProvider.instanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   GroupV2Spec   `json:"spec"`
	Status GroupV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GroupV2List contains a list of GroupV2s
type GroupV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GroupV2 `json:"items"`
}

// Repository type metadata.
var (
	GroupV2_Kind             = "GroupV2"
	GroupV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GroupV2_Kind}.String()
	GroupV2_KindAPIVersion   = GroupV2_Kind + "." + CRDGroupVersion.String()
	GroupV2_GroupVersionKind = CRDGroupVersion.WithKind(GroupV2_Kind)
)

func init() {
	SchemeBuilder.Register(&GroupV2{}, &GroupV2List{})
}
