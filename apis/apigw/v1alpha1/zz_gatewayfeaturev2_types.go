// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GatewayFeatureV2InitParameters struct {

	// Specified the detailed configuration of the feature.
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	// Specified whether to enable the feature. Default value is false.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specified the ID of the dedicated gateway to which the feature belongs.
	// Changing this creates a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specified the name of the feature.
	// Changing this creates a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type GatewayFeatureV2Observation struct {

	// Specified the detailed configuration of the feature.
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	// Specified whether to enable the feature. Default value is false.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specified the ID of the dedicated gateway to which the feature belongs.
	// Changing this creates a new resource.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// The resource ID. The value is the feature name.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specified the name of the feature.
	// Changing this creates a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The region in which to create the resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type GatewayFeatureV2Parameters struct {

	// Specified the detailed configuration of the feature.
	// +kubebuilder:validation:Optional
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	// Specified whether to enable the feature. Default value is false.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specified the ID of the dedicated gateway to which the feature belongs.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Specified the name of the feature.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// GatewayFeatureV2Spec defines the desired state of GatewayFeatureV2
type GatewayFeatureV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GatewayFeatureV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GatewayFeatureV2InitParameters `json:"initProvider,omitempty"`
}

// GatewayFeatureV2Status defines the observed state of GatewayFeatureV2.
type GatewayFeatureV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GatewayFeatureV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GatewayFeatureV2 is the Schema for the GatewayFeatureV2s API. Manages a APIGW gateway feature resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type GatewayFeatureV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gatewayId) || (has(self.initProvider) && has(self.initProvider.gatewayId))",message="spec.forProvider.gatewayId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   GatewayFeatureV2Spec   `json:"spec"`
	Status GatewayFeatureV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayFeatureV2List contains a list of GatewayFeatureV2s
type GatewayFeatureV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewayFeatureV2 `json:"items"`
}

// Repository type metadata.
var (
	GatewayFeatureV2_Kind             = "GatewayFeatureV2"
	GatewayFeatureV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewayFeatureV2_Kind}.String()
	GatewayFeatureV2_KindAPIVersion   = GatewayFeatureV2_Kind + "." + CRDGroupVersion.String()
	GatewayFeatureV2_GroupVersionKind = CRDGroupVersion.WithKind(GatewayFeatureV2_Kind)
)

func init() {
	SchemeBuilder.Register(&GatewayFeatureV2{}, &GatewayFeatureV2List{})
}
