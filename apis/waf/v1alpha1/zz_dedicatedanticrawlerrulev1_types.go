/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DedicatedAntiCrawlerRuleV1InitParameters struct {

	// Rule matching logic.
	// Values are:
	Logic *float64 `json:"logic,omitempty" tf:"logic,omitempty"`

	// Rule name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The WAF policy ID. Changing this creates a new rule.
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// JavaScript anti-crawler rule type.
	// Values are:
	ProtectionMode *string `json:"protectionMode,omitempty" tf:"protection_mode,omitempty"`

	// URL to which the rule applies.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type DedicatedAntiCrawlerRuleV1Observation struct {

	// Timestamp the rule is created.
	CreatedAt *float64 `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// ID of the rule.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Rule matching logic.
	// Values are:
	Logic *float64 `json:"logic,omitempty" tf:"logic,omitempty"`

	// Rule name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The WAF policy ID. Changing this creates a new rule.
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// JavaScript anti-crawler rule type.
	// Values are:
	ProtectionMode *string `json:"protectionMode,omitempty" tf:"protection_mode,omitempty"`

	// Rule status. The value can be 0 or 1.
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// URL to which the rule applies.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type DedicatedAntiCrawlerRuleV1Parameters struct {

	// Rule matching logic.
	// Values are:
	// +kubebuilder:validation:Optional
	Logic *float64 `json:"logic,omitempty" tf:"logic,omitempty"`

	// Rule name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The WAF policy ID. Changing this creates a new rule.
	// +kubebuilder:validation:Optional
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// JavaScript anti-crawler rule type.
	// Values are:
	// +kubebuilder:validation:Optional
	ProtectionMode *string `json:"protectionMode,omitempty" tf:"protection_mode,omitempty"`

	// URL to which the rule applies.
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

// DedicatedAntiCrawlerRuleV1Spec defines the desired state of DedicatedAntiCrawlerRuleV1
type DedicatedAntiCrawlerRuleV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DedicatedAntiCrawlerRuleV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DedicatedAntiCrawlerRuleV1InitParameters `json:"initProvider,omitempty"`
}

// DedicatedAntiCrawlerRuleV1Status defines the observed state of DedicatedAntiCrawlerRuleV1.
type DedicatedAntiCrawlerRuleV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DedicatedAntiCrawlerRuleV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DedicatedAntiCrawlerRuleV1 is the Schema for the DedicatedAntiCrawlerRuleV1s API. Manages a WAF Dedicated Anti Crawler Rule resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type DedicatedAntiCrawlerRuleV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.logic) || (has(self.initProvider) && has(self.initProvider.logic))",message="spec.forProvider.logic is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.policyId) || (has(self.initProvider) && has(self.initProvider.policyId))",message="spec.forProvider.policyId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protectionMode) || (has(self.initProvider) && has(self.initProvider.protectionMode))",message="spec.forProvider.protectionMode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) && has(self.initProvider.url))",message="spec.forProvider.url is a required parameter"
	Spec   DedicatedAntiCrawlerRuleV1Spec   `json:"spec"`
	Status DedicatedAntiCrawlerRuleV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DedicatedAntiCrawlerRuleV1List contains a list of DedicatedAntiCrawlerRuleV1s
type DedicatedAntiCrawlerRuleV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DedicatedAntiCrawlerRuleV1 `json:"items"`
}

// Repository type metadata.
var (
	DedicatedAntiCrawlerRuleV1_Kind             = "DedicatedAntiCrawlerRuleV1"
	DedicatedAntiCrawlerRuleV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DedicatedAntiCrawlerRuleV1_Kind}.String()
	DedicatedAntiCrawlerRuleV1_KindAPIVersion   = DedicatedAntiCrawlerRuleV1_Kind + "." + CRDGroupVersion.String()
	DedicatedAntiCrawlerRuleV1_GroupVersionKind = CRDGroupVersion.WithKind(DedicatedAntiCrawlerRuleV1_Kind)
)

func init() {
	SchemeBuilder.Register(&DedicatedAntiCrawlerRuleV1{}, &DedicatedAntiCrawlerRuleV1List{})
}
