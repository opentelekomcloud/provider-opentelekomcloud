// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AdvancedSettingsInitParameters struct {

	// Subfield of the specified field type. The default value is all.
	Contents []*string `json:"contents,omitempty" tf:"contents,omitempty"`

	// Field type.
	// The following field types are supported: Params, Cookie, Header, Body, and Multipart.
	// When you select Params, Cookie, or Header, you can set this parameter to all or configure subfields as required.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type AdvancedSettingsObservation struct {

	// Subfield of the specified field type. The default value is all.
	Contents []*string `json:"contents,omitempty" tf:"contents,omitempty"`

	// Field type.
	// The following field types are supported: Params, Cookie, Header, Body, and Multipart.
	// When you select Params, Cookie, or Header, you can set this parameter to all or configure subfields as required.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type AdvancedSettingsParameters struct {

	// Subfield of the specified field type. The default value is all.
	// +kubebuilder:validation:Optional
	Contents []*string `json:"contents,omitempty" tf:"contents,omitempty"`

	// Field type.
	// The following field types are supported: Params, Cookie, Header, Body, and Multipart.
	// When you select Params, Cookie, or Header, you can set this parameter to all or configure subfields as required.
	// +kubebuilder:validation:Optional
	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type ConditionsInitParameters struct {

	// Field type. The value can be url, ip, params, cookie, or header.
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// Content. The array length is limited to 1.
	// The content format varies depending on the field type.
	Contents []*string `json:"contents,omitempty" tf:"contents,omitempty"`

	// Subfield. When category is set to params, cookie, or header, set this parameter based on site requirements. This parameter is mandatory.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// The matching logic varies depending on the field type.
	LogicOperation *string `json:"logicOperation,omitempty" tf:"logic_operation,omitempty"`
}

type ConditionsObservation struct {

	// Field type. The value can be url, ip, params, cookie, or header.
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// Content. The array length is limited to 1.
	// The content format varies depending on the field type.
	Contents []*string `json:"contents,omitempty" tf:"contents,omitempty"`

	// Subfield. When category is set to params, cookie, or header, set this parameter based on site requirements. This parameter is mandatory.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// The matching logic varies depending on the field type.
	LogicOperation *string `json:"logicOperation,omitempty" tf:"logic_operation,omitempty"`
}

type ConditionsParameters struct {

	// Field type. The value can be url, ip, params, cookie, or header.
	// +kubebuilder:validation:Optional
	Category *string `json:"category" tf:"category,omitempty"`

	// Content. The array length is limited to 1.
	// The content format varies depending on the field type.
	// +kubebuilder:validation:Optional
	Contents []*string `json:"contents,omitempty" tf:"contents,omitempty"`

	// Subfield. When category is set to params, cookie, or header, set this parameter based on site requirements. This parameter is mandatory.
	// +kubebuilder:validation:Optional
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// The matching logic varies depending on the field type.
	// +kubebuilder:validation:Optional
	LogicOperation *string `json:"logicOperation" tf:"logic_operation,omitempty"`
}

type DedicatedAlarmMaskingRuleV1InitParameters struct {

	// To ignore attacks of a specific field, specify the field in the Advanced settings area.
	// After you add the rule, WAF will stop blocking attacks of the specified field.
	// This parameter is not included if all modules are bypassed. Changing this creates a new rule.
	// The advanced_settings block supports:
	AdvancedSettings []AdvancedSettingsInitParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// Condition list. Changing this creates a new rule.
	// The conditions block supports:
	Conditions []ConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Rule description. Changing this creates a new rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Domain names to be protected. Changing this creates a new rule.
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`

	// The WAF policy ID. Changing this creates a new rule.
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// Items to be masked. Changing this creates a new rule.
	// You can provide multiple items and separate them with semicolons (;).
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`
}

type DedicatedAlarmMaskingRuleV1Observation struct {

	// To ignore attacks of a specific field, specify the field in the Advanced settings area.
	// After you add the rule, WAF will stop blocking attacks of the specified field.
	// This parameter is not included if all modules are bypassed. Changing this creates a new rule.
	// The advanced_settings block supports:
	AdvancedSettings []AdvancedSettingsObservation `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// Condition list. Changing this creates a new rule.
	// The conditions block supports:
	Conditions []ConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Timestamp the rule is created.
	CreatedAt *float64 `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Rule description. Changing this creates a new rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Domain names to be protected. Changing this creates a new rule.
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`

	// ID of the rule.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The WAF policy ID. Changing this creates a new rule.
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// Items to be masked. Changing this creates a new rule.
	// You can provide multiple items and separate them with semicolons (;).
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// Rule status. The value can be:
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`
}

type DedicatedAlarmMaskingRuleV1Parameters struct {

	// To ignore attacks of a specific field, specify the field in the Advanced settings area.
	// After you add the rule, WAF will stop blocking attacks of the specified field.
	// This parameter is not included if all modules are bypassed. Changing this creates a new rule.
	// The advanced_settings block supports:
	// +kubebuilder:validation:Optional
	AdvancedSettings []AdvancedSettingsParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// Condition list. Changing this creates a new rule.
	// The conditions block supports:
	// +kubebuilder:validation:Optional
	Conditions []ConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Rule description. Changing this creates a new rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Domain names to be protected. Changing this creates a new rule.
	// +kubebuilder:validation:Optional
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`

	// The WAF policy ID. Changing this creates a new rule.
	// +kubebuilder:validation:Optional
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// Items to be masked. Changing this creates a new rule.
	// You can provide multiple items and separate them with semicolons (;).
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`
}

// DedicatedAlarmMaskingRuleV1Spec defines the desired state of DedicatedAlarmMaskingRuleV1
type DedicatedAlarmMaskingRuleV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DedicatedAlarmMaskingRuleV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DedicatedAlarmMaskingRuleV1InitParameters `json:"initProvider,omitempty"`
}

// DedicatedAlarmMaskingRuleV1Status defines the observed state of DedicatedAlarmMaskingRuleV1.
type DedicatedAlarmMaskingRuleV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DedicatedAlarmMaskingRuleV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DedicatedAlarmMaskingRuleV1 is the Schema for the DedicatedAlarmMaskingRuleV1s API. Manages a WAF Dedicated False Alarm Masking Rule resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type DedicatedAlarmMaskingRuleV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.conditions) || (has(self.initProvider) && has(self.initProvider.conditions))",message="spec.forProvider.conditions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.domains) || (has(self.initProvider) && has(self.initProvider.domains))",message="spec.forProvider.domains is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.policyId) || (has(self.initProvider) && has(self.initProvider.policyId))",message="spec.forProvider.policyId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rule) || (has(self.initProvider) && has(self.initProvider.rule))",message="spec.forProvider.rule is a required parameter"
	Spec   DedicatedAlarmMaskingRuleV1Spec   `json:"spec"`
	Status DedicatedAlarmMaskingRuleV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DedicatedAlarmMaskingRuleV1List contains a list of DedicatedAlarmMaskingRuleV1s
type DedicatedAlarmMaskingRuleV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DedicatedAlarmMaskingRuleV1 `json:"items"`
}

// Repository type metadata.
var (
	DedicatedAlarmMaskingRuleV1_Kind             = "DedicatedAlarmMaskingRuleV1"
	DedicatedAlarmMaskingRuleV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DedicatedAlarmMaskingRuleV1_Kind}.String()
	DedicatedAlarmMaskingRuleV1_KindAPIVersion   = DedicatedAlarmMaskingRuleV1_Kind + "." + CRDGroupVersion.String()
	DedicatedAlarmMaskingRuleV1_GroupVersionKind = CRDGroupVersion.WithKind(DedicatedAlarmMaskingRuleV1_Kind)
)

func init() {
	SchemeBuilder.Register(&DedicatedAlarmMaskingRuleV1{}, &DedicatedAlarmMaskingRuleV1List{})
}
