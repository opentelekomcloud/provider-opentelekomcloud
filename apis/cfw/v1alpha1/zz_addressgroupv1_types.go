// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AddressGroupV1InitParameters struct {

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the description of the address group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the CFW Address group name. The CFW address group name of the same type is unique in the same firewall.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`
}

type AddressGroupV1Observation struct {

	// Indicates the Address group type: 0 (user-defined address group), 1 (WAF back-to-source IP address group), 2 (DDoS back-to-source IP address group), or 3 (NAT64 address group).
	AddressSetType *float64 `json:"addressSetType,omitempty" tf:"address_set_type,omitempty"`

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the description of the address group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates the address group ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the CFW Address group name. The CFW address group name of the same type is unique in the same firewall.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`
}

type AddressGroupV1Parameters struct {

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	// +kubebuilder:validation:Optional
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the description of the address group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the CFW Address group name. The CFW address group name of the same type is unique in the same firewall.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	// +kubebuilder:validation:Optional
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`
}

// AddressGroupV1Spec defines the desired state of AddressGroupV1
type AddressGroupV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AddressGroupV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AddressGroupV1InitParameters `json:"initProvider,omitempty"`
}

// AddressGroupV1Status defines the observed state of AddressGroupV1.
type AddressGroupV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AddressGroupV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AddressGroupV1 is the Schema for the AddressGroupV1s API. Manages a CFW Address group resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type AddressGroupV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.objectId) || (has(self.initProvider) && has(self.initProvider.objectId))",message="spec.forProvider.objectId is a required parameter"
	Spec   AddressGroupV1Spec   `json:"spec"`
	Status AddressGroupV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AddressGroupV1List contains a list of AddressGroupV1s
type AddressGroupV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AddressGroupV1 `json:"items"`
}

// Repository type metadata.
var (
	AddressGroupV1_Kind             = "AddressGroupV1"
	AddressGroupV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AddressGroupV1_Kind}.String()
	AddressGroupV1_KindAPIVersion   = AddressGroupV1_Kind + "." + CRDGroupVersion.String()
	AddressGroupV1_GroupVersionKind = CRDGroupVersion.WithKind(AddressGroupV1_Kind)
)

func init() {
	SchemeBuilder.Register(&AddressGroupV1{}, &AddressGroupV1List{})
}
