// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServiceGroupV1InitParameters struct {

	// Specifies the description of the service group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the CFW Service group name. The CFW service group name of the same type is unique in the same firewall.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`
}

type ServiceGroupV1Observation struct {

	// Specifies the description of the service group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates the service group ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the CFW Service group name. The CFW service group name of the same type is unique in the same firewall.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Indicates the Service group type: 0 (user-defined service group), 1 (common web service), 2 (common remote login and ping), or 3 (common database).
	ServiceSetType *float64 `json:"serviceSetType,omitempty" tf:"service_set_type,omitempty"`
}

type ServiceGroupV1Parameters struct {

	// Specifies the description of the service group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the CFW Service group name. The CFW service group name of the same type is unique in the same firewall.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	// +kubebuilder:validation:Optional
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`
}

// ServiceGroupV1Spec defines the desired state of ServiceGroupV1
type ServiceGroupV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceGroupV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceGroupV1InitParameters `json:"initProvider,omitempty"`
}

// ServiceGroupV1Status defines the observed state of ServiceGroupV1.
type ServiceGroupV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceGroupV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceGroupV1 is the Schema for the ServiceGroupV1s API. Manages a CFW Service group resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ServiceGroupV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.objectId) || (has(self.initProvider) && has(self.initProvider.objectId))",message="spec.forProvider.objectId is a required parameter"
	Spec   ServiceGroupV1Spec   `json:"spec"`
	Status ServiceGroupV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceGroupV1List contains a list of ServiceGroupV1s
type ServiceGroupV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceGroupV1 `json:"items"`
}

// Repository type metadata.
var (
	ServiceGroupV1_Kind             = "ServiceGroupV1"
	ServiceGroupV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceGroupV1_Kind}.String()
	ServiceGroupV1_KindAPIVersion   = ServiceGroupV1_Kind + "." + CRDGroupVersion.String()
	ServiceGroupV1_GroupVersionKind = CRDGroupVersion.WithKind(ServiceGroupV1_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceGroupV1{}, &ServiceGroupV1List{})
}
