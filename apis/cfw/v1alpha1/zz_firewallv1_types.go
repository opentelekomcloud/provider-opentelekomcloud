// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ChargeInfoInitParameters struct {

	// Specifies the Billing mode. The value can only be postPaid (case-sensitive), indicating pay-per-use billing.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`
}

type ChargeInfoObservation struct {

	// Specifies the Billing mode. The value can only be postPaid (case-sensitive), indicating pay-per-use billing.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`
}

type ChargeInfoParameters struct {

	// Specifies the Billing mode. The value can only be postPaid (case-sensitive), indicating pay-per-use billing.
	// +kubebuilder:validation:Optional
	ChargeMode *string `json:"chargeMode" tf:"charge_mode,omitempty"`
}

type FirewallV1InitParameters struct {

	// Specifies the billing type, which can be yearly/monthly or pay-per-use (default setting).
	// The charge_info structure is documented below.
	ChargeInfo []ChargeInfoInitParameters `json:"chargeInfo,omitempty" tf:"charge_info,omitempty"`

	// Specifies the Firewall specifications. The flavor structure is documented below.
	Flavor []FlavorInitParameters `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Specifies the CFW firewall instance name. The CFW firewall instance name of the same
	// type is unique in the same tenant.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the Firewall protection type. Currently, its value can only be 0 (Internet protection).
	ServiceType *string `json:"serviceType,omitempty" tf:"service_type,omitempty"`
}

type FirewallV1Observation struct {

	// Specifies the billing type, which can be yearly/monthly or pay-per-use (default setting).
	// The charge_info structure is documented below.
	ChargeInfo []ChargeInfoObservation `json:"chargeInfo,omitempty" tf:"charge_info,omitempty"`

	// Indicates the billing mode: 0 (yearly/monthly), 1 (pay-per-use).
	ChargeMode *float64 `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// Indicates the engine type. Its value can only be 1 (Hillstone engine).
	EngineType *float64 `json:"engineType,omitempty" tf:"engine_type,omitempty"`

	// Indicates the Enterprise project ID, which is the ID of a project planned based on organizations.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Provides a map of features indicating whether a feature is enabled: true (yes), false (no).
	// +mapType=granular
	FeatureToggle map[string]*bool `json:"featureToggle,omitempty" tf:"feature_toggle,omitempty"`

	// Specifies the Firewall specifications. The flavor structure is documented below.
	Flavor []FlavorObservation `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Indicates the Cluster type: 0 (active/standby), 1 (cluster). In active/standby mode, there are four nodes. Two active nodes form a cluster, and the other two are the standby of the active nodes. In cluster mode, only two nodes are started to form a cluster..
	HaType *float64 `json:"haType,omitempty" tf:"ha_type,omitempty"`

	// Indicates the Firewall instance ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates whether OBS is supported: true (yes), false (no).
	IsAvailableObs *bool `json:"isAvailableObs,omitempty" tf:"is_available_obs,omitempty"`

	// Indicates whether an engine is old: true (yes), false (no)..
	IsOldFirewallInstance *bool `json:"isOldFirewallInstance,omitempty" tf:"is_old_firewall_instance,omitempty"`

	// Indicates whether threat intelligence tags are supported: true (yes), false (no).
	IsSupportThreatTags *bool `json:"isSupportThreatTags,omitempty" tf:"is_support_threat_tags,omitempty"`

	// Specifies the CFW firewall instance name. The CFW firewall instance name of the same
	// type is unique in the same tenant.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the protected object list. The protect_objects structure is documented below.
	ProtectObjects []ProtectObjectsObservation `json:"protectObjects,omitempty" tf:"protect_objects,omitempty"`

	// Indicates the Firewall resource ID, which is the same as id.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Indicates the firewall resource list. The resources structure is documented below.
	Resources []ResourcesObservation `json:"resources,omitempty" tf:"resources,omitempty"`

	// Specifies the Firewall protection type. Currently, its value can only be 0 (Internet protection).
	ServiceType *string `json:"serviceType,omitempty" tf:"service_type,omitempty"`

	// Indicates the firewall status: -1 (waiting for payment), 0 (creating), 1 (deleting), 2 (running), 3 (upgrading), 4 (deleted), 5 (frozen), 6 (creation failed), 7 (deletion failed), 8 (freezing failed), or 9 (being stored), 10 (storage failed), or 11 (upgrade failed).
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// Indicates whether IPv6 is supported: true (yes), false (no).
	SupportIPv6 *bool `json:"supportIpv6,omitempty" tf:"support_ipv6,omitempty"`

	// Indicates whether website filtering is supported: true (yes), false (no).
	SupportURLFiltering *bool `json:"supportUrlFiltering,omitempty" tf:"support_url_filtering,omitempty"`
}

type FirewallV1Parameters struct {

	// Specifies the billing type, which can be yearly/monthly or pay-per-use (default setting).
	// The charge_info structure is documented below.
	// +kubebuilder:validation:Optional
	ChargeInfo []ChargeInfoParameters `json:"chargeInfo,omitempty" tf:"charge_info,omitempty"`

	// Specifies the Firewall specifications. The flavor structure is documented below.
	// +kubebuilder:validation:Optional
	Flavor []FlavorParameters `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Specifies the CFW firewall instance name. The CFW firewall instance name of the same
	// type is unique in the same tenant.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the Firewall protection type. Currently, its value can only be 0 (Internet protection).
	// +kubebuilder:validation:Optional
	ServiceType *string `json:"serviceType,omitempty" tf:"service_type,omitempty"`
}

type FlavorInitParameters struct {

	// Specifies the Firewall edition. Only the professional edition standard is supported.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type FlavorObservation struct {

	// Indicates the bandwidth, in Mbits/s.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Indicates the default firewall bandwidth, in Mbits/s.
	DefaultBandwidth *float64 `json:"defaultBandwidth,omitempty" tf:"default_bandwidth,omitempty"`

	// Indicates the default number of EIPs.
	DefaultEIPCount *float64 `json:"defaultEipCount,omitempty" tf:"default_eip_count,omitempty"`

	// Indicates the default log storage, in bytes.
	DefaultLogStorage *float64 `json:"defaultLogStorage,omitempty" tf:"default_log_storage,omitempty"`

	// Indicates the default number of VPCs.
	DefaultVPCCount *float64 `json:"defaultVpcCount,omitempty" tf:"default_vpc_count,omitempty"`

	// Indicates the number of EIPs.
	EIPCount *float64 `json:"eipCount,omitempty" tf:"eip_count,omitempty"`

	// Indicates the log storage, in bytes.
	LogStorage *float64 `json:"logStorage,omitempty" tf:"log_storage,omitempty"`

	// Indicates the number of VPCs.
	VPCCount *float64 `json:"vpcCount,omitempty" tf:"vpc_count,omitempty"`

	// Specifies the Firewall edition. Only the professional edition standard is supported.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`

	// Indicates the firewall version. Its value can only be 1 (professional edition).
	VersionCode *float64 `json:"versionCode,omitempty" tf:"version_code,omitempty"`
}

type FlavorParameters struct {

	// Specifies the Firewall edition. Only the professional edition standard is supported.
	// +kubebuilder:validation:Optional
	Version *string `json:"version" tf:"version,omitempty"`
}

type ProtectObjectsInitParameters struct {
}

type ProtectObjectsObservation struct {

	// Indicates the protected object ID. It is used to distinguish Internet border protection from VPC border protection after a CFW instance is created.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Indicates the protected object name.
	ObjectName *string `json:"objectName,omitempty" tf:"object_name,omitempty"`

	// Indicates the project type: 0 (north-south), 1 (east-west).
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type ProtectObjectsParameters struct {
}

type ResourcesInitParameters struct {
}

type ResourcesObservation struct {

	// Indicates the Service type, which is used by CBC.
	CloudServiceType *string `json:"cloudServiceType,omitempty" tf:"cloud_service_type,omitempty"`

	// Indicates the resource ID. It can be the firewall ID, bandwidth ID, EIP ID, VPC ID, or the ID returned after CBC callback.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Indicates the resource quantity.
	ResourceSize *float64 `json:"resourceSize,omitempty" tf:"resource_size,omitempty"`

	// Indicates the resource unit.
	ResourceSizeMeasureID *float64 `json:"resourceSizeMeasureId,omitempty" tf:"resource_size_measure_id,omitempty"`

	// Indicates the inventory unit code.
	ResourceSpecCode *string `json:"resourceSpecCode,omitempty" tf:"resource_spec_code,omitempty"`

	// Indicates the resource type.
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`
}

type ResourcesParameters struct {
}

// FirewallV1Spec defines the desired state of FirewallV1
type FirewallV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FirewallV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FirewallV1InitParameters `json:"initProvider,omitempty"`
}

// FirewallV1Status defines the observed state of FirewallV1.
type FirewallV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FirewallV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FirewallV1 is the Schema for the FirewallV1s API. Manages a CFW Firewall Instance resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type FirewallV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.chargeInfo) || (has(self.initProvider) && has(self.initProvider.chargeInfo))",message="spec.forProvider.chargeInfo is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.flavor) || (has(self.initProvider) && has(self.initProvider.flavor))",message="spec.forProvider.flavor is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   FirewallV1Spec   `json:"spec"`
	Status FirewallV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallV1List contains a list of FirewallV1s
type FirewallV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallV1 `json:"items"`
}

// Repository type metadata.
var (
	FirewallV1_Kind             = "FirewallV1"
	FirewallV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FirewallV1_Kind}.String()
	FirewallV1_KindAPIVersion   = FirewallV1_Kind + "." + CRDGroupVersion.String()
	FirewallV1_GroupVersionKind = CRDGroupVersion.WithKind(FirewallV1_Kind)
)

func init() {
	SchemeBuilder.Register(&FirewallV1{}, &FirewallV1List{})
}
