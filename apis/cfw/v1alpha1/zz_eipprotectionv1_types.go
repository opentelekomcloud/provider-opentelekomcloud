// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EIPProtectionV1InitParameters struct {

	// Specifies the EIP ID.
	EIPID *string `json:"eipId,omitempty" tf:"eip_id,omitempty"`

	// Specifies the Firewall ID.
	FirewallID *string `json:"firewallId,omitempty" tf:"firewall_id,omitempty"`

	// Specifies the protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Specifies the EIP IPV4 address. Required if public_ipv6 is not set.
	PublicIP *string `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	// Specifies the EIP IPV6 address. Required if public_ip is not set.
	PublicIPv6 *string `json:"publicIpv6,omitempty" tf:"public_ipv6,omitempty"`

	// Specifies the desired EIP protection status: 0 (protected), 1 (unprotected).
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`
}

type EIPProtectionV1Observation struct {

	// Specifies the EIP ID.
	EIPID *string `json:"eipId,omitempty" tf:"eip_id,omitempty"`

	// Specifies the Firewall ID.
	FirewallID *string `json:"firewallId,omitempty" tf:"firewall_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Specifies the EIP IPV4 address. Required if public_ipv6 is not set.
	PublicIP *string `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	// Specifies the EIP IPV6 address. Required if public_ip is not set.
	PublicIPv6 *string `json:"publicIpv6,omitempty" tf:"public_ipv6,omitempty"`

	// Specifies the desired EIP protection status: 0 (protected), 1 (unprotected).
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`
}

type EIPProtectionV1Parameters struct {

	// Specifies the EIP ID.
	// +kubebuilder:validation:Optional
	EIPID *string `json:"eipId,omitempty" tf:"eip_id,omitempty"`

	// Specifies the Firewall ID.
	// +kubebuilder:validation:Optional
	FirewallID *string `json:"firewallId,omitempty" tf:"firewall_id,omitempty"`

	// Specifies the protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	// +kubebuilder:validation:Optional
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Specifies the EIP IPV4 address. Required if public_ipv6 is not set.
	// +kubebuilder:validation:Optional
	PublicIP *string `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	// Specifies the EIP IPV6 address. Required if public_ip is not set.
	// +kubebuilder:validation:Optional
	PublicIPv6 *string `json:"publicIpv6,omitempty" tf:"public_ipv6,omitempty"`

	// Specifies the desired EIP protection status: 0 (protected), 1 (unprotected).
	// +kubebuilder:validation:Optional
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`
}

// EIPProtectionV1Spec defines the desired state of EIPProtectionV1
type EIPProtectionV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EIPProtectionV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EIPProtectionV1InitParameters `json:"initProvider,omitempty"`
}

// EIPProtectionV1Status defines the observed state of EIPProtectionV1.
type EIPProtectionV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EIPProtectionV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EIPProtectionV1 is the Schema for the EIPProtectionV1s API. Enable or Disable EIP protection using CFW firewall within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type EIPProtectionV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.eipId) || (has(self.initProvider) && has(self.initProvider.eipId))",message="spec.forProvider.eipId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.firewallId) || (has(self.initProvider) && has(self.initProvider.firewallId))",message="spec.forProvider.firewallId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.objectId) || (has(self.initProvider) && has(self.initProvider.objectId))",message="spec.forProvider.objectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.status) || (has(self.initProvider) && has(self.initProvider.status))",message="spec.forProvider.status is a required parameter"
	Spec   EIPProtectionV1Spec   `json:"spec"`
	Status EIPProtectionV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EIPProtectionV1List contains a list of EIPProtectionV1s
type EIPProtectionV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EIPProtectionV1 `json:"items"`
}

// Repository type metadata.
var (
	EIPProtectionV1_Kind             = "EIPProtectionV1"
	EIPProtectionV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EIPProtectionV1_Kind}.String()
	EIPProtectionV1_KindAPIVersion   = EIPProtectionV1_Kind + "." + CRDGroupVersion.String()
	EIPProtectionV1_GroupVersionKind = CRDGroupVersion.WithKind(EIPProtectionV1_Kind)
)

func init() {
	SchemeBuilder.Register(&EIPProtectionV1{}, &EIPProtectionV1List{})
}
