// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AddressGroupMemberV1InitParameters struct {

	// Specifies the IP Address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the description of the address group member.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the address group ID.
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`
}

type AddressGroupMemberV1Observation struct {

	// Specifies the IP Address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the description of the address group member.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates the address group member ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the CFW Address group member name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the address group ID.
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`
}

type AddressGroupMemberV1Parameters struct {

	// Specifies the IP Address.
	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	// +kubebuilder:validation:Optional
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the description of the address group member.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the address group ID.
	// +kubebuilder:validation:Optional
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`
}

// AddressGroupMemberV1Spec defines the desired state of AddressGroupMemberV1
type AddressGroupMemberV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AddressGroupMemberV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AddressGroupMemberV1InitParameters `json:"initProvider,omitempty"`
}

// AddressGroupMemberV1Status defines the observed state of AddressGroupMemberV1.
type AddressGroupMemberV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AddressGroupMemberV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AddressGroupMemberV1 is the Schema for the AddressGroupMemberV1s API. Manages a CFW Address group member resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type AddressGroupMemberV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.address) || (has(self.initProvider) && has(self.initProvider.address))",message="spec.forProvider.address is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.setId) || (has(self.initProvider) && has(self.initProvider.setId))",message="spec.forProvider.setId is a required parameter"
	Spec   AddressGroupMemberV1Spec   `json:"spec"`
	Status AddressGroupMemberV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AddressGroupMemberV1List contains a list of AddressGroupMemberV1s
type AddressGroupMemberV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AddressGroupMemberV1 `json:"items"`
}

// Repository type metadata.
var (
	AddressGroupMemberV1_Kind             = "AddressGroupMemberV1"
	AddressGroupMemberV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AddressGroupMemberV1_Kind}.String()
	AddressGroupMemberV1_KindAPIVersion   = AddressGroupMemberV1_Kind + "." + CRDGroupVersion.String()
	AddressGroupMemberV1_GroupVersionKind = CRDGroupVersion.WithKind(AddressGroupMemberV1_Kind)
)

func init() {
	SchemeBuilder.Register(&AddressGroupMemberV1{}, &AddressGroupMemberV1List{})
}
