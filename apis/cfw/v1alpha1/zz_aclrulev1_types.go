// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ACLRuleV1InitParameters struct {

	// Specifies the rule action: 0 (permit), 1 (deny).
	ActionType *float64 `json:"actionType,omitempty" tf:"action_type,omitempty"`

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the rule application list . Allowed list values: HTTP, HTTPS, TLS1, DNS, SSH, MYSQL, SMTP, RDP, RDPS, VNC, POP3, IMAP4, SMTPS, POP3S, FTPS, ANY, or BGP.
	Applications []*string `json:"applications,omitempty" tf:"applications,omitempty"`

	// Specifies the JSON string converted from the applications field in the application list.
	ApplicationsJSONString *string `json:"applicationsJsonString,omitempty" tf:"applications_json_string,omitempty"`

	// Specifies the description of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination address Data Transport Object.
	// The destination structure is documented below.
	Destination []DestinationInitParameters `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the Direction: 0 (inbound) or 1 (outbound). This parameter is mandatory when type is set to 0 (Internet rule) or 2 (NAT rule).
	Direction *float64 `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies whether to support persistent connections: 0 (no), 1 (yes).
	LongConnectEnable *float64 `json:"longConnectEnable,omitempty" tf:"long_connect_enable,omitempty"`

	// Specifies the persistent connection duration.
	LongConnectTime *float64 `json:"longConnectTime,omitempty" tf:"long_connect_time,omitempty"`

	// Specifies the persistent connection duration (hour).
	LongConnectTimeHour *float64 `json:"longConnectTimeHour,omitempty" tf:"long_connect_time_hour,omitempty"`

	// Specifies the persistent connection duration (minute).
	LongConnectTimeMinute *float64 `json:"longConnectTimeMinute,omitempty" tf:"long_connect_time_minute,omitempty"`

	// Specifies the persistent connection duration (second).
	LongConnectTimeSecond *float64 `json:"longConnectTimeSecond,omitempty" tf:"long_connect_time_second,omitempty"`

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Specifies the request body for changing the rule sequence. The sequence structure is documented below.
	Sequence []SequenceInitParameters `json:"sequence,omitempty" tf:"sequence,omitempty"`

	// Specifies the service object.
	// The service structure is documented below.
	Service []ServiceInitParameters `json:"service,omitempty" tf:"service,omitempty"`

	// Specifies the source address Data Transport Object.
	// The source structure is documented below.
	Source []SourceInitParameters `json:"source,omitempty" tf:"source,omitempty"`

	// Specifies the rule status: 0 (disabled), 1 (enabled).
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// Rule type: 0 (Internet border rule), 1 (inter-VPC rule), or 2 (NAT rule). When type is set to 0, the source and destination addresses of the rule must be EIPs or domain names of the public network. For an inter-VPC rule, the source and destination addresses must be private IP addresses. For a NAT rule, the source address must be a private IP address, and the destination address must be an EIP or domain name of the public network.
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type ACLRuleV1Observation struct {

	// Specifies the rule action: 0 (permit), 1 (deny).
	ActionType *float64 `json:"actionType,omitempty" tf:"action_type,omitempty"`

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the rule application list . Allowed list values: HTTP, HTTPS, TLS1, DNS, SSH, MYSQL, SMTP, RDP, RDPS, VNC, POP3, IMAP4, SMTPS, POP3S, FTPS, ANY, or BGP.
	Applications []*string `json:"applications,omitempty" tf:"applications,omitempty"`

	// Specifies the JSON string converted from the applications field in the application list.
	ApplicationsJSONString *string `json:"applicationsJsonString,omitempty" tf:"applications_json_string,omitempty"`

	// Indicates the Rule creation time in YYYY-MM-DD hh:mm:ss format.
	CreatedDate *string `json:"createdDate,omitempty" tf:"created_date,omitempty"`

	// Specifies the description of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination address Data Transport Object.
	// The destination structure is documented below.
	Destination []DestinationObservation `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the Direction: 0 (inbound) or 1 (outbound). This parameter is mandatory when type is set to 0 (Internet rule) or 2 (NAT rule).
	Direction *float64 `json:"direction,omitempty" tf:"direction,omitempty"`

	// Indicates the ACL rule ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the Last time when the rule was enabled in  YYYY-MM-DD hh:mm:ss format.
	LastOpenTime *string `json:"lastOpenTime,omitempty" tf:"last_open_time,omitempty"`

	// Specifies whether to support persistent connections: 0 (no), 1 (yes).
	LongConnectEnable *float64 `json:"longConnectEnable,omitempty" tf:"long_connect_enable,omitempty"`

	// Specifies the persistent connection duration.
	LongConnectTime *float64 `json:"longConnectTime,omitempty" tf:"long_connect_time,omitempty"`

	// Specifies the persistent connection duration (hour).
	LongConnectTimeHour *float64 `json:"longConnectTimeHour,omitempty" tf:"long_connect_time_hour,omitempty"`

	// Specifies the persistent connection duration (minute).
	LongConnectTimeMinute *float64 `json:"longConnectTimeMinute,omitempty" tf:"long_connect_time_minute,omitempty"`

	// Specifies the persistent connection duration (second).
	LongConnectTimeSecond *float64 `json:"longConnectTimeSecond,omitempty" tf:"long_connect_time_second,omitempty"`

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Specifies the request body for changing the rule sequence. The sequence structure is documented below.
	Sequence []SequenceObservation `json:"sequence,omitempty" tf:"sequence,omitempty"`

	// Specifies the service object.
	// The service structure is documented below.
	Service []ServiceObservation `json:"service,omitempty" tf:"service,omitempty"`

	// Specifies the source address Data Transport Object.
	// The source structure is documented below.
	Source []SourceObservation `json:"source,omitempty" tf:"source,omitempty"`

	// Specifies the rule status: 0 (disabled), 1 (enabled).
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// Rule type: 0 (Internet border rule), 1 (inter-VPC rule), or 2 (NAT rule). When type is set to 0, the source and destination addresses of the rule must be EIPs or domain names of the public network. For an inter-VPC rule, the source and destination addresses must be private IP addresses. For a NAT rule, the source address must be a private IP address, and the destination address must be an EIP or domain name of the public network.
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type ACLRuleV1Parameters struct {

	// Specifies the rule action: 0 (permit), 1 (deny).
	// +kubebuilder:validation:Optional
	ActionType *float64 `json:"actionType,omitempty" tf:"action_type,omitempty"`

	// Specifies the Internet protocol type of an address: 0 (IPv4), 1 (IPv6).
	// +kubebuilder:validation:Optional
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the rule application list . Allowed list values: HTTP, HTTPS, TLS1, DNS, SSH, MYSQL, SMTP, RDP, RDPS, VNC, POP3, IMAP4, SMTPS, POP3S, FTPS, ANY, or BGP.
	// +kubebuilder:validation:Optional
	Applications []*string `json:"applications,omitempty" tf:"applications,omitempty"`

	// Specifies the JSON string converted from the applications field in the application list.
	// +kubebuilder:validation:Optional
	ApplicationsJSONString *string `json:"applicationsJsonString,omitempty" tf:"applications_json_string,omitempty"`

	// Specifies the description of the rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination address Data Transport Object.
	// The destination structure is documented below.
	// +kubebuilder:validation:Optional
	Destination []DestinationParameters `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the Direction: 0 (inbound) or 1 (outbound). This parameter is mandatory when type is set to 0 (Internet rule) or 2 (NAT rule).
	// +kubebuilder:validation:Optional
	Direction *float64 `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies whether to support persistent connections: 0 (no), 1 (yes).
	// +kubebuilder:validation:Optional
	LongConnectEnable *float64 `json:"longConnectEnable,omitempty" tf:"long_connect_enable,omitempty"`

	// Specifies the persistent connection duration.
	// +kubebuilder:validation:Optional
	LongConnectTime *float64 `json:"longConnectTime,omitempty" tf:"long_connect_time,omitempty"`

	// Specifies the persistent connection duration (hour).
	// +kubebuilder:validation:Optional
	LongConnectTimeHour *float64 `json:"longConnectTimeHour,omitempty" tf:"long_connect_time_hour,omitempty"`

	// Specifies the persistent connection duration (minute).
	// +kubebuilder:validation:Optional
	LongConnectTimeMinute *float64 `json:"longConnectTimeMinute,omitempty" tf:"long_connect_time_minute,omitempty"`

	// Specifies the persistent connection duration (second).
	// +kubebuilder:validation:Optional
	LongConnectTimeSecond *float64 `json:"longConnectTimeSecond,omitempty" tf:"long_connect_time_second,omitempty"`

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protected object ID, which is used to distinguish between Internet border protection and VPC border protection after a cloud firewall is created. If the value of type is 0, the protected object ID belongs to the Internet border. If the value of type is 1, the protected object ID belongs to the VPC border.
	// +kubebuilder:validation:Optional
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// Specifies the request body for changing the rule sequence. The sequence structure is documented below.
	// +kubebuilder:validation:Optional
	Sequence []SequenceParameters `json:"sequence,omitempty" tf:"sequence,omitempty"`

	// Specifies the service object.
	// The service structure is documented below.
	// +kubebuilder:validation:Optional
	Service []ServiceParameters `json:"service,omitempty" tf:"service,omitempty"`

	// Specifies the source address Data Transport Object.
	// The source structure is documented below.
	// +kubebuilder:validation:Optional
	Source []SourceParameters `json:"source,omitempty" tf:"source,omitempty"`

	// Specifies the rule status: 0 (disabled), 1 (enabled).
	// +kubebuilder:validation:Optional
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// Rule type: 0 (Internet border rule), 1 (inter-VPC rule), or 2 (NAT rule). When type is set to 0, the source and destination addresses of the rule must be EIPs or domain names of the public network. For an inter-VPC rule, the source and destination addresses must be private IP addresses. For a NAT rule, the source address must be a private IP address, and the destination address must be an EIP or domain name of the public network.
	// +kubebuilder:validation:Optional
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type CustomServiceInitParameters struct {

	// Specifies the description of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination port.
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the source port.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type CustomServiceObservation struct {

	// Specifies the description of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination port.
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the source port.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type CustomServiceParameters struct {

	// Specifies the description of the rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination port.
	// +kubebuilder:validation:Optional
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	// +kubebuilder:validation:Optional
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the source port.
	// +kubebuilder:validation:Optional
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type DestinationInitParameters struct {

	// Specifies the IP address information. It cannot be left blank if type is set to 0.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	AddressGroup []*string `json:"addressGroup,omitempty" tf:"address_group,omitempty"`

	// Specifies the ID of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetID *string `json:"addressSetId,omitempty" tf:"address_set_id,omitempty"`

	// Specifies the name of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetName *string `json:"addressSetName,omitempty" tf:"address_set_name,omitempty"`

	// Specifies the Address group type. It cannot be left blank when type is set to 1 (associated IP address group). It value can be 0 (user-defined address group), 1 (WAF back-to-source IP address group), 2 (DDoS back-to-source IP address group), or 3 (NAT64 address group).
	AddressSetType *float64 `json:"addressSetType,omitempty" tf:"address_set_type,omitempty"`

	// Specifies theInternet protocol type of an address: 0 (IPv4), 1 (IPv6). If type is 0, this parameter cannot be left blank.
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the name of a domain name address. This parameter is valid when type is set to 2 (domain name) or 7 (application domain name group).
	DomainAddressName *string `json:"domainAddressName,omitempty" tf:"domain_address_name,omitempty"`

	// Specifies the domain group ID. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetID *string `json:"domainSetId,omitempty" tf:"domain_set_id,omitempty"`

	// Specifies the domain group name. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetName *string `json:"domainSetName,omitempty" tf:"domain_set_name,omitempty"`

	// Specifies the IP address list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	IPAddress []*string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the pre-defined address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the rule region list.
	RegionList []RegionListInitParameters `json:"regionList,omitempty" tf:"region_list,omitempty"`

	// Specifies the JSON value of the rule region list.
	RegionListJSON *string `json:"regionListJson,omitempty" tf:"region_list_json,omitempty"`

	// Rule type: 0 (Internet border rule), 1 (inter-VPC rule), or 2 (NAT rule). When type is set to 0, the source and destination addresses of the rule must be EIPs or domain names of the public network. For an inter-VPC rule, the source and destination addresses must be private IP addresses. For a NAT rule, the source address must be a private IP address, and the destination address must be an EIP or domain name of the public network.
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type DestinationObservation struct {

	// Specifies the IP address information. It cannot be left blank if type is set to 0.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	AddressGroup []*string `json:"addressGroup,omitempty" tf:"address_group,omitempty"`

	// Specifies the ID of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetID *string `json:"addressSetId,omitempty" tf:"address_set_id,omitempty"`

	// Specifies the name of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetName *string `json:"addressSetName,omitempty" tf:"address_set_name,omitempty"`

	// Specifies the Address group type. It cannot be left blank when type is set to 1 (associated IP address group). It value can be 0 (user-defined address group), 1 (WAF back-to-source IP address group), 2 (DDoS back-to-source IP address group), or 3 (NAT64 address group).
	AddressSetType *float64 `json:"addressSetType,omitempty" tf:"address_set_type,omitempty"`

	// Specifies theInternet protocol type of an address: 0 (IPv4), 1 (IPv6). If type is 0, this parameter cannot be left blank.
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the name of a domain name address. This parameter is valid when type is set to 2 (domain name) or 7 (application domain name group).
	DomainAddressName *string `json:"domainAddressName,omitempty" tf:"domain_address_name,omitempty"`

	// Specifies the domain group ID. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetID *string `json:"domainSetId,omitempty" tf:"domain_set_id,omitempty"`

	// Specifies the domain group name. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetName *string `json:"domainSetName,omitempty" tf:"domain_set_name,omitempty"`

	// Specifies the IP address list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	IPAddress []*string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the pre-defined address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the rule region list.
	RegionList []RegionListObservation `json:"regionList,omitempty" tf:"region_list,omitempty"`

	// Specifies the JSON value of the rule region list.
	RegionListJSON *string `json:"regionListJson,omitempty" tf:"region_list_json,omitempty"`

	// Rule type: 0 (Internet border rule), 1 (inter-VPC rule), or 2 (NAT rule). When type is set to 0, the source and destination addresses of the rule must be EIPs or domain names of the public network. For an inter-VPC rule, the source and destination addresses must be private IP addresses. For a NAT rule, the source address must be a private IP address, and the destination address must be an EIP or domain name of the public network.
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type DestinationParameters struct {

	// Specifies the IP address information. It cannot be left blank if type is set to 0.
	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	// +kubebuilder:validation:Optional
	AddressGroup []*string `json:"addressGroup,omitempty" tf:"address_group,omitempty"`

	// Specifies the ID of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	// +kubebuilder:validation:Optional
	AddressSetID *string `json:"addressSetId,omitempty" tf:"address_set_id,omitempty"`

	// Specifies the name of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	// +kubebuilder:validation:Optional
	AddressSetName *string `json:"addressSetName,omitempty" tf:"address_set_name,omitempty"`

	// Specifies the Address group type. It cannot be left blank when type is set to 1 (associated IP address group). It value can be 0 (user-defined address group), 1 (WAF back-to-source IP address group), 2 (DDoS back-to-source IP address group), or 3 (NAT64 address group).
	// +kubebuilder:validation:Optional
	AddressSetType *float64 `json:"addressSetType,omitempty" tf:"address_set_type,omitempty"`

	// Specifies theInternet protocol type of an address: 0 (IPv4), 1 (IPv6). If type is 0, this parameter cannot be left blank.
	// +kubebuilder:validation:Optional
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the name of a domain name address. This parameter is valid when type is set to 2 (domain name) or 7 (application domain name group).
	// +kubebuilder:validation:Optional
	DomainAddressName *string `json:"domainAddressName,omitempty" tf:"domain_address_name,omitempty"`

	// Specifies the domain group ID. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	// +kubebuilder:validation:Optional
	DomainSetID *string `json:"domainSetId,omitempty" tf:"domain_set_id,omitempty"`

	// Specifies the domain group name. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	// +kubebuilder:validation:Optional
	DomainSetName *string `json:"domainSetName,omitempty" tf:"domain_set_name,omitempty"`

	// Specifies the IP address list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	// +kubebuilder:validation:Optional
	IPAddress []*string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the pre-defined address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	// +kubebuilder:validation:Optional
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the rule region list.
	// +kubebuilder:validation:Optional
	RegionList []RegionListParameters `json:"regionList,omitempty" tf:"region_list,omitempty"`

	// Specifies the JSON value of the rule region list.
	// +kubebuilder:validation:Optional
	RegionListJSON *string `json:"regionListJson,omitempty" tf:"region_list_json,omitempty"`

	// Rule type: 0 (Internet border rule), 1 (inter-VPC rule), or 2 (NAT rule). When type is set to 0, the source and destination addresses of the rule must be EIPs or domain names of the public network. For an inter-VPC rule, the source and destination addresses must be private IP addresses. For a NAT rule, the source address must be a private IP address, and the destination address must be an EIP or domain name of the public network.
	// +kubebuilder:validation:Optional
	Type *float64 `json:"type" tf:"type,omitempty"`
}

type RegionListInitParameters struct {

	// Specifies the region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// Specifies the region type: 0 (country), 1 (province), and 2 (continent).
	RegionType *float64 `json:"regionType,omitempty" tf:"region_type,omitempty"`
}

type RegionListObservation struct {

	// Specifies the region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// Specifies the region type: 0 (country), 1 (province), and 2 (continent).
	RegionType *float64 `json:"regionType,omitempty" tf:"region_type,omitempty"`
}

type RegionListParameters struct {

	// Specifies the region ID.
	// +kubebuilder:validation:Optional
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// Specifies the region type: 0 (country), 1 (province), and 2 (continent).
	// +kubebuilder:validation:Optional
	RegionType *float64 `json:"regionType,omitempty" tf:"region_type,omitempty"`
}

type SequenceInitParameters struct {

	// Specifies whether to pin to bottom: 0 (no), 1 (yes).
	Bottom *float64 `json:"bottom,omitempty" tf:"bottom,omitempty"`

	// Specifies the ID of the target rule.
	DestRuleID *string `json:"destRuleId,omitempty" tf:"dest_rule_id,omitempty"`

	// Specifies whether to pin on top: 0 (no), 1 (yes).
	Top *float64 `json:"top,omitempty" tf:"top,omitempty"`
}

type SequenceObservation struct {

	// Specifies whether to pin to bottom: 0 (no), 1 (yes).
	Bottom *float64 `json:"bottom,omitempty" tf:"bottom,omitempty"`

	// Specifies the ID of the target rule.
	DestRuleID *string `json:"destRuleId,omitempty" tf:"dest_rule_id,omitempty"`

	// Specifies whether to pin on top: 0 (no), 1 (yes).
	Top *float64 `json:"top,omitempty" tf:"top,omitempty"`
}

type SequenceParameters struct {

	// Specifies whether to pin to bottom: 0 (no), 1 (yes).
	// +kubebuilder:validation:Optional
	Bottom *float64 `json:"bottom,omitempty" tf:"bottom,omitempty"`

	// Specifies the ID of the target rule.
	// +kubebuilder:validation:Optional
	DestRuleID *string `json:"destRuleId,omitempty" tf:"dest_rule_id,omitempty"`

	// Specifies whether to pin on top: 0 (no), 1 (yes).
	// +kubebuilder:validation:Optional
	Top *float64 `json:"top,omitempty" tf:"top,omitempty"`
}

type ServiceGroupNamesInitParameters struct {

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protocol list. Permitted list values: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocols []*float64 `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies the service group type: 0 (user-defined service group), 1 (predefined service group).
	ServiceSetType *float64 `json:"serviceSetType,omitempty" tf:"service_set_type,omitempty"`

	// Specifies the service group ID.
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`
}

type ServiceGroupNamesObservation struct {

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protocol list. Permitted list values: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocols []*float64 `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies the service group type: 0 (user-defined service group), 1 (predefined service group).
	ServiceSetType *float64 `json:"serviceSetType,omitempty" tf:"service_set_type,omitempty"`

	// Specifies the service group ID.
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`
}

type ServiceGroupNamesParameters struct {

	// Specifies the CFW ACL rule name. The CFW ACL rule name of the same type is unique in the same firewall instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the protocol list. Permitted list values: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	// +kubebuilder:validation:Optional
	Protocols []*float64 `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies the service group type: 0 (user-defined service group), 1 (predefined service group).
	// +kubebuilder:validation:Optional
	ServiceSetType *float64 `json:"serviceSetType,omitempty" tf:"service_set_type,omitempty"`

	// Specifies the service group ID.
	// +kubebuilder:validation:Optional
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`
}

type ServiceInitParameters struct {

	// Specifies the custom service.
	CustomService []CustomServiceInitParameters `json:"customService,omitempty" tf:"custom_service,omitempty"`

	// Specifies the destination port.
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the pre-defined service group ID list.
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the protocol list. Permitted list values: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocols []*float64 `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies the service group ID list.
	ServiceGroup []*string `json:"serviceGroup,omitempty" tf:"service_group,omitempty"`

	// Specifies the service group name list.
	ServiceGroupNames []ServiceGroupNamesInitParameters `json:"serviceGroupNames,omitempty" tf:"service_group_names,omitempty"`

	// Specifies the Service group ID. This parameter cannot be left blank when type is set to 1 (associated IP address group).
	ServiceSetID *string `json:"serviceSetId,omitempty" tf:"service_set_id,omitempty"`

	// Specifies the Service group name. This parameter cannot be left blank when type is set to 1 (associated IP address group).
	ServiceSetName *string `json:"serviceSetName,omitempty" tf:"service_set_name,omitempty"`

	// Specifies the service group type: 0 (user-defined service group), 1 (common web service), 2 (common remote login and ping), or 3 (common database).
	ServiceSetType *float64 `json:"serviceSetType,omitempty" tf:"service_set_type,omitempty"`

	// Specifies the source port.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`

	// Specifies the service input type: 0 (manual), 1 (automatic).
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type ServiceObservation struct {

	// Specifies the custom service.
	CustomService []CustomServiceObservation `json:"customService,omitempty" tf:"custom_service,omitempty"`

	// Specifies the destination port.
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the pre-defined service group ID list.
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the protocol list. Permitted list values: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	Protocols []*float64 `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies the service group ID list.
	ServiceGroup []*string `json:"serviceGroup,omitempty" tf:"service_group,omitempty"`

	// Specifies the service group name list.
	ServiceGroupNames []ServiceGroupNamesObservation `json:"serviceGroupNames,omitempty" tf:"service_group_names,omitempty"`

	// Specifies the Service group ID. This parameter cannot be left blank when type is set to 1 (associated IP address group).
	ServiceSetID *string `json:"serviceSetId,omitempty" tf:"service_set_id,omitempty"`

	// Specifies the Service group name. This parameter cannot be left blank when type is set to 1 (associated IP address group).
	ServiceSetName *string `json:"serviceSetName,omitempty" tf:"service_set_name,omitempty"`

	// Specifies the service group type: 0 (user-defined service group), 1 (common web service), 2 (common remote login and ping), or 3 (common database).
	ServiceSetType *float64 `json:"serviceSetType,omitempty" tf:"service_set_type,omitempty"`

	// Specifies the source port.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`

	// Specifies the service input type: 0 (manual), 1 (automatic).
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type ServiceParameters struct {

	// Specifies the custom service.
	// +kubebuilder:validation:Optional
	CustomService []CustomServiceParameters `json:"customService,omitempty" tf:"custom_service,omitempty"`

	// Specifies the destination port.
	// +kubebuilder:validation:Optional
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the pre-defined service group ID list.
	// +kubebuilder:validation:Optional
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	// +kubebuilder:validation:Optional
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the protocol list. Permitted list values: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any). It cannot be left blank when type is set to 0 (manual).
	// +kubebuilder:validation:Optional
	Protocols []*float64 `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies the service group ID list.
	// +kubebuilder:validation:Optional
	ServiceGroup []*string `json:"serviceGroup,omitempty" tf:"service_group,omitempty"`

	// Specifies the service group name list.
	// +kubebuilder:validation:Optional
	ServiceGroupNames []ServiceGroupNamesParameters `json:"serviceGroupNames,omitempty" tf:"service_group_names,omitempty"`

	// Specifies the Service group ID. This parameter cannot be left blank when type is set to 1 (associated IP address group).
	// +kubebuilder:validation:Optional
	ServiceSetID *string `json:"serviceSetId,omitempty" tf:"service_set_id,omitempty"`

	// Specifies the Service group name. This parameter cannot be left blank when type is set to 1 (associated IP address group).
	// +kubebuilder:validation:Optional
	ServiceSetName *string `json:"serviceSetName,omitempty" tf:"service_set_name,omitempty"`

	// Specifies the service group type: 0 (user-defined service group), 1 (common web service), 2 (common remote login and ping), or 3 (common database).
	// +kubebuilder:validation:Optional
	ServiceSetType *float64 `json:"serviceSetType,omitempty" tf:"service_set_type,omitempty"`

	// Specifies the source port.
	// +kubebuilder:validation:Optional
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`

	// Specifies the service input type: 0 (manual), 1 (automatic).
	// +kubebuilder:validation:Optional
	Type *float64 `json:"type" tf:"type,omitempty"`
}

type SourceInitParameters struct {

	// Specifies the IP address information. It cannot be left blank if type is set to 0.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	AddressGroup []*string `json:"addressGroup,omitempty" tf:"address_group,omitempty"`

	// Specifies the ID of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetID *string `json:"addressSetId,omitempty" tf:"address_set_id,omitempty"`

	// Specifies the name of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetName *string `json:"addressSetName,omitempty" tf:"address_set_name,omitempty"`

	// Specifies the Address group type. It cannot be left blank when type is set to 1 (associated IP address group). It value can be 0 (user-defined address group), 1 (WAF back-to-source IP address group), 2 (DDoS back-to-source IP address group), or 3 (NAT64 address group).
	AddressSetType *float64 `json:"addressSetType,omitempty" tf:"address_set_type,omitempty"`

	// Specifies theInternet protocol type of an address: 0 (IPv4), 1 (IPv6). If type is 0, this parameter cannot be left blank.
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the name of a domain name address. This parameter is valid when type is set to 2 (domain name) or 7 (application domain name group).
	DomainAddressName *string `json:"domainAddressName,omitempty" tf:"domain_address_name,omitempty"`

	// Specifies the domain group ID. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetID *string `json:"domainSetId,omitempty" tf:"domain_set_id,omitempty"`

	// Specifies the domain group name. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetName *string `json:"domainSetName,omitempty" tf:"domain_set_name,omitempty"`

	// Specifies the IP address list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	IPAddress []*string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the pre-defined address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the rule region list.
	RegionList []SourceRegionListInitParameters `json:"regionList,omitempty" tf:"region_list,omitempty"`

	// Specifies the JSON value of the rule region list.
	RegionListJSON *string `json:"regionListJson,omitempty" tf:"region_list_json,omitempty"`

	// Specifies the Address type: 0 (manual input), 1 (associated IP address group), 2 (domain name), 3 (geographical location), 4 (domain name group) 5 (multiple objects), 6 (domain name group - network), 7 (domain name group - application).
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceObservation struct {

	// Specifies the IP address information. It cannot be left blank if type is set to 0.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	AddressGroup []*string `json:"addressGroup,omitempty" tf:"address_group,omitempty"`

	// Specifies the ID of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetID *string `json:"addressSetId,omitempty" tf:"address_set_id,omitempty"`

	// Specifies the name of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	AddressSetName *string `json:"addressSetName,omitempty" tf:"address_set_name,omitempty"`

	// Specifies the Address group type. It cannot be left blank when type is set to 1 (associated IP address group). It value can be 0 (user-defined address group), 1 (WAF back-to-source IP address group), 2 (DDoS back-to-source IP address group), or 3 (NAT64 address group).
	AddressSetType *float64 `json:"addressSetType,omitempty" tf:"address_set_type,omitempty"`

	// Specifies theInternet protocol type of an address: 0 (IPv4), 1 (IPv6). If type is 0, this parameter cannot be left blank.
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the name of a domain name address. This parameter is valid when type is set to 2 (domain name) or 7 (application domain name group).
	DomainAddressName *string `json:"domainAddressName,omitempty" tf:"domain_address_name,omitempty"`

	// Specifies the domain group ID. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetID *string `json:"domainSetId,omitempty" tf:"domain_set_id,omitempty"`

	// Specifies the domain group name. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	DomainSetName *string `json:"domainSetName,omitempty" tf:"domain_set_name,omitempty"`

	// Specifies the IP address list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	IPAddress []*string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the pre-defined address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the rule region list.
	RegionList []SourceRegionListObservation `json:"regionList,omitempty" tf:"region_list,omitempty"`

	// Specifies the JSON value of the rule region list.
	RegionListJSON *string `json:"regionListJson,omitempty" tf:"region_list_json,omitempty"`

	// Specifies the Address type: 0 (manual input), 1 (associated IP address group), 2 (domain name), 3 (geographical location), 4 (domain name group) 5 (multiple objects), 6 (domain name group - network), 7 (domain name group - application).
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceParameters struct {

	// Specifies the IP address information. It cannot be left blank if type is set to 0.
	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the Address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	// +kubebuilder:validation:Optional
	AddressGroup []*string `json:"addressGroup,omitempty" tf:"address_group,omitempty"`

	// Specifies the ID of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	// +kubebuilder:validation:Optional
	AddressSetID *string `json:"addressSetId,omitempty" tf:"address_set_id,omitempty"`

	// Specifies the name of an associated IP address group. This parameter cannot be left blank when type is set to 1.
	// +kubebuilder:validation:Optional
	AddressSetName *string `json:"addressSetName,omitempty" tf:"address_set_name,omitempty"`

	// Specifies the Address group type. It cannot be left blank when type is set to 1 (associated IP address group). It value can be 0 (user-defined address group), 1 (WAF back-to-source IP address group), 2 (DDoS back-to-source IP address group), or 3 (NAT64 address group).
	// +kubebuilder:validation:Optional
	AddressSetType *float64 `json:"addressSetType,omitempty" tf:"address_set_type,omitempty"`

	// Specifies theInternet protocol type of an address: 0 (IPv4), 1 (IPv6). If type is 0, this parameter cannot be left blank.
	// +kubebuilder:validation:Optional
	AddressType *float64 `json:"addressType,omitempty" tf:"address_type,omitempty"`

	// Specifies the name of a domain name address. This parameter is valid when type is set to 2 (domain name) or 7 (application domain name group).
	// +kubebuilder:validation:Optional
	DomainAddressName *string `json:"domainAddressName,omitempty" tf:"domain_address_name,omitempty"`

	// Specifies the domain group ID. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	// +kubebuilder:validation:Optional
	DomainSetID *string `json:"domainSetId,omitempty" tf:"domain_set_id,omitempty"`

	// Specifies the domain group name. The value cannot be left blank when type is set to 4 (domain name group) or 7 (domain name group - application).
	// +kubebuilder:validation:Optional
	DomainSetName *string `json:"domainSetName,omitempty" tf:"domain_set_name,omitempty"`

	// Specifies the IP address list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	// +kubebuilder:validation:Optional
	IPAddress []*string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the pre-defined address group ID list. This parameter cannot be left blank when type is set to 5 (multiple objects).
	// +kubebuilder:validation:Optional
	PredefinedGroup []*string `json:"predefinedGroup,omitempty" tf:"predefined_group,omitempty"`

	// Specifies the rule region list.
	// +kubebuilder:validation:Optional
	RegionList []SourceRegionListParameters `json:"regionList,omitempty" tf:"region_list,omitempty"`

	// Specifies the JSON value of the rule region list.
	// +kubebuilder:validation:Optional
	RegionListJSON *string `json:"regionListJson,omitempty" tf:"region_list_json,omitempty"`

	// Specifies the Address type: 0 (manual input), 1 (associated IP address group), 2 (domain name), 3 (geographical location), 4 (domain name group) 5 (multiple objects), 6 (domain name group - network), 7 (domain name group - application).
	// +kubebuilder:validation:Optional
	Type *float64 `json:"type" tf:"type,omitempty"`
}

type SourceRegionListInitParameters struct {

	// Specifies the region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// Specifies the region type: 0 (country), 1 (province), and 2 (continent).
	RegionType *float64 `json:"regionType,omitempty" tf:"region_type,omitempty"`
}

type SourceRegionListObservation struct {

	// Specifies the region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// Specifies the region type: 0 (country), 1 (province), and 2 (continent).
	RegionType *float64 `json:"regionType,omitempty" tf:"region_type,omitempty"`
}

type SourceRegionListParameters struct {

	// Specifies the region ID.
	// +kubebuilder:validation:Optional
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// Specifies the region type: 0 (country), 1 (province), and 2 (continent).
	// +kubebuilder:validation:Optional
	RegionType *float64 `json:"regionType,omitempty" tf:"region_type,omitempty"`
}

// ACLRuleV1Spec defines the desired state of ACLRuleV1
type ACLRuleV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ACLRuleV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ACLRuleV1InitParameters `json:"initProvider,omitempty"`
}

// ACLRuleV1Status defines the observed state of ACLRuleV1.
type ACLRuleV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ACLRuleV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ACLRuleV1 is the Schema for the ACLRuleV1s API. Manages a CFW ACL rule resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ACLRuleV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.actionType) || (has(self.initProvider) && has(self.initProvider.actionType))",message="spec.forProvider.actionType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.addressType) || (has(self.initProvider) && has(self.initProvider.addressType))",message="spec.forProvider.addressType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destination) || (has(self.initProvider) && has(self.initProvider.destination))",message="spec.forProvider.destination is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.longConnectEnable) || (has(self.initProvider) && has(self.initProvider.longConnectEnable))",message="spec.forProvider.longConnectEnable is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.objectId) || (has(self.initProvider) && has(self.initProvider.objectId))",message="spec.forProvider.objectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sequence) || (has(self.initProvider) && has(self.initProvider.sequence))",message="spec.forProvider.sequence is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.service) || (has(self.initProvider) && has(self.initProvider.service))",message="spec.forProvider.service is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.source) || (has(self.initProvider) && has(self.initProvider.source))",message="spec.forProvider.source is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.status) || (has(self.initProvider) && has(self.initProvider.status))",message="spec.forProvider.status is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   ACLRuleV1Spec   `json:"spec"`
	Status ACLRuleV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ACLRuleV1List contains a list of ACLRuleV1s
type ACLRuleV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ACLRuleV1 `json:"items"`
}

// Repository type metadata.
var (
	ACLRuleV1_Kind             = "ACLRuleV1"
	ACLRuleV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ACLRuleV1_Kind}.String()
	ACLRuleV1_KindAPIVersion   = ACLRuleV1_Kind + "." + CRDGroupVersion.String()
	ACLRuleV1_GroupVersionKind = CRDGroupVersion.WithKind(ACLRuleV1_Kind)
)

func init() {
	SchemeBuilder.Register(&ACLRuleV1{}, &ACLRuleV1List{})
}
