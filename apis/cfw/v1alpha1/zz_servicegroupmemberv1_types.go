// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServiceGroupMemberV1InitParameters struct {

	// Specifies the description of the service group member.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination port.
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the Protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any).
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the service group ID.
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`

	// Specifies the source port.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type ServiceGroupMemberV1Observation struct {

	// Specifies the description of the service group member.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination port.
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Indicates the service group member ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the Protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any).
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the service group ID.
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`

	// Specifies the source port.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type ServiceGroupMemberV1Parameters struct {

	// Specifies the description of the service group member.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination port.
	// +kubebuilder:validation:Optional
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// Specifies the Protocol type: 6 (TCP), 17 (UDP), 1 (ICMP), 58 (ICMPv6), or -1 (any).
	// +kubebuilder:validation:Optional
	Protocol *float64 `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the service group ID.
	// +kubebuilder:validation:Optional
	SetID *string `json:"setId,omitempty" tf:"set_id,omitempty"`

	// Specifies the source port.
	// +kubebuilder:validation:Optional
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

// ServiceGroupMemberV1Spec defines the desired state of ServiceGroupMemberV1
type ServiceGroupMemberV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceGroupMemberV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceGroupMemberV1InitParameters `json:"initProvider,omitempty"`
}

// ServiceGroupMemberV1Status defines the observed state of ServiceGroupMemberV1.
type ServiceGroupMemberV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceGroupMemberV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceGroupMemberV1 is the Schema for the ServiceGroupMemberV1s API. Manages a CFW Service group member resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ServiceGroupMemberV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destPort) || (has(self.initProvider) && has(self.initProvider.destPort))",message="spec.forProvider.destPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || (has(self.initProvider) && has(self.initProvider.protocol))",message="spec.forProvider.protocol is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.setId) || (has(self.initProvider) && has(self.initProvider.setId))",message="spec.forProvider.setId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sourcePort) || (has(self.initProvider) && has(self.initProvider.sourcePort))",message="spec.forProvider.sourcePort is a required parameter"
	Spec   ServiceGroupMemberV1Spec   `json:"spec"`
	Status ServiceGroupMemberV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceGroupMemberV1List contains a list of ServiceGroupMemberV1s
type ServiceGroupMemberV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceGroupMemberV1 `json:"items"`
}

// Repository type metadata.
var (
	ServiceGroupMemberV1_Kind             = "ServiceGroupMemberV1"
	ServiceGroupMemberV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceGroupMemberV1_Kind}.String()
	ServiceGroupMemberV1_KindAPIVersion   = ServiceGroupMemberV1_Kind + "." + CRDGroupVersion.String()
	ServiceGroupMemberV1_GroupVersionKind = CRDGroupVersion.WithKind(ServiceGroupMemberV1_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceGroupMemberV1{}, &ServiceGroupMemberV1List{})
}
