// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BandwidthAssociateV2InitParameters struct {

	// Specifies whether the dedicated bandwidth used by the EIP that has been removed from
	// a shared bandwidth is billed by traffic or by bandwidth.
	BackupChargeMode *string `json:"backupChargeMode,omitempty" tf:"backup_charge_mode,omitempty"`

	// Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that has been
	// removed from a shared bandwidth.
	BackupSize *float64 `json:"backupSize,omitempty" tf:"backup_size,omitempty"`

	// Specifies ID of the bandwidth to be assigned.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.BandwidthV2
	Bandwidth *string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Reference to a BandwidthV2 in vpc to populate bandwidth.
	// +kubebuilder:validation:Optional
	BandwidthRef *v1.Reference `json:"bandwidthRef,omitempty" tf:"-"`

	// Selector for a BandwidthV2 in vpc to populate bandwidth.
	// +kubebuilder:validation:Optional
	BandwidthSelector *v1.Selector `json:"bandwidthSelector,omitempty" tf:"-"`

	// Specifies IDs of floating IPs to be added to the bandwidth.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.EIPV1
	// +listType=set
	FloatingIps []*string `json:"floatingIps,omitempty" tf:"floating_ips,omitempty"`

	// References to EIPV1 in vpc to populate floatingIps.
	// +kubebuilder:validation:Optional
	FloatingIpsRefs []v1.Reference `json:"floatingIpsRefs,omitempty" tf:"-"`

	// Selector for a list of EIPV1 in vpc to populate floatingIps.
	// +kubebuilder:validation:Optional
	FloatingIpsSelector *v1.Selector `json:"floatingIpsSelector,omitempty" tf:"-"`
}

type BandwidthAssociateV2Observation struct {

	// Specifies whether the dedicated bandwidth used by the EIP that has been removed from
	// a shared bandwidth is billed by traffic or by bandwidth.
	BackupChargeMode *string `json:"backupChargeMode,omitempty" tf:"backup_charge_mode,omitempty"`

	// Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that has been
	// removed from a shared bandwidth.
	BackupSize *float64 `json:"backupSize,omitempty" tf:"backup_size,omitempty"`

	// Specifies ID of the bandwidth to be assigned.
	Bandwidth *string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Specifies IDs of floating IPs to be added to the bandwidth.
	// +listType=set
	FloatingIps []*string `json:"floatingIps,omitempty" tf:"floating_ips,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type BandwidthAssociateV2Parameters struct {

	// Specifies whether the dedicated bandwidth used by the EIP that has been removed from
	// a shared bandwidth is billed by traffic or by bandwidth.
	// +kubebuilder:validation:Optional
	BackupChargeMode *string `json:"backupChargeMode,omitempty" tf:"backup_charge_mode,omitempty"`

	// Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that has been
	// removed from a shared bandwidth.
	// +kubebuilder:validation:Optional
	BackupSize *float64 `json:"backupSize,omitempty" tf:"backup_size,omitempty"`

	// Specifies ID of the bandwidth to be assigned.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.BandwidthV2
	// +kubebuilder:validation:Optional
	Bandwidth *string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Reference to a BandwidthV2 in vpc to populate bandwidth.
	// +kubebuilder:validation:Optional
	BandwidthRef *v1.Reference `json:"bandwidthRef,omitempty" tf:"-"`

	// Selector for a BandwidthV2 in vpc to populate bandwidth.
	// +kubebuilder:validation:Optional
	BandwidthSelector *v1.Selector `json:"bandwidthSelector,omitempty" tf:"-"`

	// Specifies IDs of floating IPs to be added to the bandwidth.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.EIPV1
	// +kubebuilder:validation:Optional
	// +listType=set
	FloatingIps []*string `json:"floatingIps,omitempty" tf:"floating_ips,omitempty"`

	// References to EIPV1 in vpc to populate floatingIps.
	// +kubebuilder:validation:Optional
	FloatingIpsRefs []v1.Reference `json:"floatingIpsRefs,omitempty" tf:"-"`

	// Selector for a list of EIPV1 in vpc to populate floatingIps.
	// +kubebuilder:validation:Optional
	FloatingIpsSelector *v1.Selector `json:"floatingIpsSelector,omitempty" tf:"-"`
}

// BandwidthAssociateV2Spec defines the desired state of BandwidthAssociateV2
type BandwidthAssociateV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BandwidthAssociateV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BandwidthAssociateV2InitParameters `json:"initProvider,omitempty"`
}

// BandwidthAssociateV2Status defines the observed state of BandwidthAssociateV2.
type BandwidthAssociateV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BandwidthAssociateV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BandwidthAssociateV2 is the Schema for the BandwidthAssociateV2s API. Manages a VPC Bandwidth Association resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type BandwidthAssociateV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BandwidthAssociateV2Spec   `json:"spec"`
	Status            BandwidthAssociateV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BandwidthAssociateV2List contains a list of BandwidthAssociateV2s
type BandwidthAssociateV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BandwidthAssociateV2 `json:"items"`
}

// Repository type metadata.
var (
	BandwidthAssociateV2_Kind             = "BandwidthAssociateV2"
	BandwidthAssociateV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BandwidthAssociateV2_Kind}.String()
	BandwidthAssociateV2_KindAPIVersion   = BandwidthAssociateV2_Kind + "." + CRDGroupVersion.String()
	BandwidthAssociateV2_GroupVersionKind = CRDGroupVersion.WithKind(BandwidthAssociateV2_Kind)
)

func init() {
	SchemeBuilder.Register(&BandwidthAssociateV2{}, &BandwidthAssociateV2List{})
}
