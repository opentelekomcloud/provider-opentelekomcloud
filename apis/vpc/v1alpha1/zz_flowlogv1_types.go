/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FlowLogV1InitParameters struct {

	// Whether to enable the VPC flow log function.
	AdminState *bool `json:"adminState,omitempty" tf:"admin_state,omitempty"`

	// (Optinal) Provides supplementary information about the VPC flow log.
	// The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the log group ID.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/logtank/v1alpha1.GroupV2
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Reference to a GroupV2 in logtank to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDRef *v1.Reference `json:"logGroupIdRef,omitempty" tf:"-"`

	// Selector for a GroupV2 in logtank to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDSelector *v1.Selector `json:"logGroupIdSelector,omitempty" tf:"-"`

	// Specifies the log topic ID.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/logtank/v1alpha1.TopicV2
	LogTopicID *string `json:"logTopicId,omitempty" tf:"log_topic_id,omitempty"`

	// Reference to a TopicV2 in logtank to populate logTopicId.
	// +kubebuilder:validation:Optional
	LogTopicIDRef *v1.Reference `json:"logTopicIdRef,omitempty" tf:"-"`

	// Selector for a TopicV2 in logtank to populate logTopicId.
	// +kubebuilder:validation:Optional
	LogTopicIDSelector *v1.Selector `json:"logTopicIdSelector,omitempty" tf:"-"`

	// Specifies the flow log name.
	// The value is a string of 1 to 64 characters that can contain letters, digits, underscores (_), hyphens (-) and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ID of resource type.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.VpcV1
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a VpcV1 in vpc to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a VpcV1 in vpc to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// Specifies the type of resource on which to create the VPC flow log.
	// The value can be port, vpc and network.
	// Changing this creates a new VPC flow log.
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The status of the flow log. The value can be ACTIVE, DOWN or ERROR.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the type of traffic to log. The value can be all, accept and reject.
	// Changing this creates a new VPC flow log.
	TrafficType *string `json:"trafficType,omitempty" tf:"traffic_type,omitempty"`
}

type FlowLogV1Observation struct {

	// Whether to enable the VPC flow log function.
	AdminState *bool `json:"adminState,omitempty" tf:"admin_state,omitempty"`

	// (Optinal) Provides supplementary information about the VPC flow log.
	// The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The VPC flow log ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the log group ID.
	// Changing this creates a new VPC flow log.
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Specifies the log topic ID.
	// Changing this creates a new VPC flow log.
	LogTopicID *string `json:"logTopicId,omitempty" tf:"log_topic_id,omitempty"`

	// Specifies the flow log name.
	// The value is a string of 1 to 64 characters that can contain letters, digits, underscores (_), hyphens (-) and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ID of resource type.
	// Changing this creates a new VPC flow log.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Specifies the type of resource on which to create the VPC flow log.
	// The value can be port, vpc and network.
	// Changing this creates a new VPC flow log.
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The status of the flow log. The value can be ACTIVE, DOWN or ERROR.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the type of traffic to log. The value can be all, accept and reject.
	// Changing this creates a new VPC flow log.
	TrafficType *string `json:"trafficType,omitempty" tf:"traffic_type,omitempty"`
}

type FlowLogV1Parameters struct {

	// Whether to enable the VPC flow log function.
	// +kubebuilder:validation:Optional
	AdminState *bool `json:"adminState,omitempty" tf:"admin_state,omitempty"`

	// (Optinal) Provides supplementary information about the VPC flow log.
	// The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the log group ID.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/logtank/v1alpha1.GroupV2
	// +kubebuilder:validation:Optional
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Reference to a GroupV2 in logtank to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDRef *v1.Reference `json:"logGroupIdRef,omitempty" tf:"-"`

	// Selector for a GroupV2 in logtank to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDSelector *v1.Selector `json:"logGroupIdSelector,omitempty" tf:"-"`

	// Specifies the log topic ID.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/logtank/v1alpha1.TopicV2
	// +kubebuilder:validation:Optional
	LogTopicID *string `json:"logTopicId,omitempty" tf:"log_topic_id,omitempty"`

	// Reference to a TopicV2 in logtank to populate logTopicId.
	// +kubebuilder:validation:Optional
	LogTopicIDRef *v1.Reference `json:"logTopicIdRef,omitempty" tf:"-"`

	// Selector for a TopicV2 in logtank to populate logTopicId.
	// +kubebuilder:validation:Optional
	LogTopicIDSelector *v1.Selector `json:"logTopicIdSelector,omitempty" tf:"-"`

	// Specifies the flow log name.
	// The value is a string of 1 to 64 characters that can contain letters, digits, underscores (_), hyphens (-) and periods (.).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ID of resource type.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.VpcV1
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a VpcV1 in vpc to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a VpcV1 in vpc to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// Specifies the type of resource on which to create the VPC flow log.
	// The value can be port, vpc and network.
	// Changing this creates a new VPC flow log.
	// +kubebuilder:validation:Optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The status of the flow log. The value can be ACTIVE, DOWN or ERROR.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the type of traffic to log. The value can be all, accept and reject.
	// Changing this creates a new VPC flow log.
	// +kubebuilder:validation:Optional
	TrafficType *string `json:"trafficType,omitempty" tf:"traffic_type,omitempty"`
}

// FlowLogV1Spec defines the desired state of FlowLogV1
type FlowLogV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FlowLogV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FlowLogV1InitParameters `json:"initProvider,omitempty"`
}

// FlowLogV1Status defines the observed state of FlowLogV1.
type FlowLogV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FlowLogV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FlowLogV1 is the Schema for the FlowLogV1s API. Manages a VPC Flow Log resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type FlowLogV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourceType) || (has(self.initProvider) && has(self.initProvider.resourceType))",message="spec.forProvider.resourceType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.trafficType) || (has(self.initProvider) && has(self.initProvider.trafficType))",message="spec.forProvider.trafficType is a required parameter"
	Spec   FlowLogV1Spec   `json:"spec"`
	Status FlowLogV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FlowLogV1List contains a list of FlowLogV1s
type FlowLogV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FlowLogV1 `json:"items"`
}

// Repository type metadata.
var (
	FlowLogV1_Kind             = "FlowLogV1"
	FlowLogV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FlowLogV1_Kind}.String()
	FlowLogV1_KindAPIVersion   = FlowLogV1_Kind + "." + CRDGroupVersion.String()
	FlowLogV1_GroupVersionKind = CRDGroupVersion.WithKind(FlowLogV1_Kind)
)

func init() {
	SchemeBuilder.Register(&FlowLogV1{}, &FlowLogV1List{})
}
