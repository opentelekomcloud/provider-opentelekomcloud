/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BandwidthInitParameters struct {

	// This is a reserved field. If the system supports charging
	// by traffic and this field is specified, then you are charged by traffic for elastic
	// IP addresses. Changing this creates a new eip.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The bandwidth name, which is a string of 1 to 64 characters
	// that contain letters, digits, underscores (_), and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether the bandwidth is shared or exclusive. Changing
	// this creates a new eip.
	ShareType *string `json:"shareType,omitempty" tf:"share_type,omitempty"`

	// The bandwidth size. The value ranges from 1 to 300 Mbit/s.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type BandwidthObservation struct {

	// This is a reserved field. If the system supports charging
	// by traffic and this field is specified, then you are charged by traffic for elastic
	// IP addresses. Changing this creates a new eip.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The bandwidth name, which is a string of 1 to 64 characters
	// that contain letters, digits, underscores (_), and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether the bandwidth is shared or exclusive. Changing
	// this creates a new eip.
	ShareType *string `json:"shareType,omitempty" tf:"share_type,omitempty"`

	// The bandwidth size. The value ranges from 1 to 300 Mbit/s.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type BandwidthParameters struct {

	// This is a reserved field. If the system supports charging
	// by traffic and this field is specified, then you are charged by traffic for elastic
	// IP addresses. Changing this creates a new eip.
	// +kubebuilder:validation:Optional
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The bandwidth name, which is a string of 1 to 64 characters
	// that contain letters, digits, underscores (_), and hyphens (-).
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Whether the bandwidth is shared or exclusive. Changing
	// this creates a new eip.
	// +kubebuilder:validation:Optional
	ShareType *string `json:"shareType" tf:"share_type,omitempty"`

	// The bandwidth size. The value ranges from 1 to 300 Mbit/s.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size" tf:"size,omitempty"`
}

type EIPV1InitParameters struct {

	// The bandwidth object.
	Bandwidth []BandwidthInitParameters `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The elastic IP address object.
	Publicip []PublicipInitParameters `json:"publicip,omitempty" tf:"publicip,omitempty"`

	// The region in which to obtain the V1 Networking client.
	// If omitted, the region argument of the provider is used. Changing this
	// creates a new service.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// See Argument Reference above.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The value true indicates that port will be unassigned from EIP.
	// This parameter work only with already allocated resource.
	UnbindPort *bool `json:"unbindPort,omitempty" tf:"unbind_port,omitempty"`

	// +mapType=granular
	ValueSpecs map[string]*string `json:"valueSpecs,omitempty" tf:"value_specs,omitempty"`
}

type EIPV1Observation struct {

	// The bandwidth object.
	Bandwidth []BandwidthObservation `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The elastic IP address object.
	Publicip []PublicipObservation `json:"publicip,omitempty" tf:"publicip,omitempty"`

	// The region in which to obtain the V1 Networking client.
	// If omitted, the region argument of the provider is used. Changing this
	// creates a new service.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// See Argument Reference above.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The value true indicates that port will be unassigned from EIP.
	// This parameter work only with already allocated resource.
	UnbindPort *bool `json:"unbindPort,omitempty" tf:"unbind_port,omitempty"`

	// +mapType=granular
	ValueSpecs map[string]*string `json:"valueSpecs,omitempty" tf:"value_specs,omitempty"`
}

type EIPV1Parameters struct {

	// The bandwidth object.
	// +kubebuilder:validation:Optional
	Bandwidth []BandwidthParameters `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The elastic IP address object.
	// +kubebuilder:validation:Optional
	Publicip []PublicipParameters `json:"publicip,omitempty" tf:"publicip,omitempty"`

	// The region in which to obtain the V1 Networking client.
	// If omitted, the region argument of the provider is used. Changing this
	// creates a new service.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// See Argument Reference above.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The value true indicates that port will be unassigned from EIP.
	// This parameter work only with already allocated resource.
	// +kubebuilder:validation:Optional
	UnbindPort *bool `json:"unbindPort,omitempty" tf:"unbind_port,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	ValueSpecs map[string]*string `json:"valueSpecs,omitempty" tf:"value_specs,omitempty"`
}

type PublicipInitParameters struct {

	// The value must be a valid IP address in the available
	// IP address segment. Changing this creates a new eip.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The ip name, which is a string of 1 to 64 characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port id which this eip will associate with. If the value
	// is "" or this not specified, the eip will be in unbind state.
	PortID *string `json:"portId,omitempty" tf:"port_id,omitempty"`

	// The value must be a type supported by the system.
	// The value can be 5_bgp, 5_mailbgp and 5_gray. Changing this creates a new eip.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PublicipObservation struct {

	// The value must be a valid IP address in the available
	// IP address segment. Changing this creates a new eip.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The ip name, which is a string of 1 to 64 characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port id which this eip will associate with. If the value
	// is "" or this not specified, the eip will be in unbind state.
	PortID *string `json:"portId,omitempty" tf:"port_id,omitempty"`

	// The value must be a type supported by the system.
	// The value can be 5_bgp, 5_mailbgp and 5_gray. Changing this creates a new eip.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PublicipParameters struct {

	// The value must be a valid IP address in the available
	// IP address segment. Changing this creates a new eip.
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The ip name, which is a string of 1 to 64 characters.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port id which this eip will associate with. If the value
	// is "" or this not specified, the eip will be in unbind state.
	// +kubebuilder:validation:Optional
	PortID *string `json:"portId,omitempty" tf:"port_id,omitempty"`

	// The value must be a type supported by the system.
	// The value can be 5_bgp, 5_mailbgp and 5_gray. Changing this creates a new eip.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// EIPV1Spec defines the desired state of EIPV1
type EIPV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EIPV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EIPV1InitParameters `json:"initProvider,omitempty"`
}

// EIPV1Status defines the observed state of EIPV1.
type EIPV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EIPV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EIPV1 is the Schema for the EIPV1s API. Manages a VPC EIP resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type EIPV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.bandwidth) || (has(self.initProvider) && has(self.initProvider.bandwidth))",message="spec.forProvider.bandwidth is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.publicip) || (has(self.initProvider) && has(self.initProvider.publicip))",message="spec.forProvider.publicip is a required parameter"
	Spec   EIPV1Spec   `json:"spec"`
	Status EIPV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EIPV1List contains a list of EIPV1s
type EIPV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EIPV1 `json:"items"`
}

// Repository type metadata.
var (
	EIPV1_Kind             = "EIPV1"
	EIPV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EIPV1_Kind}.String()
	EIPV1_KindAPIVersion   = EIPV1_Kind + "." + CRDGroupVersion.String()
	EIPV1_GroupVersionKind = CRDGroupVersion.WithKind(EIPV1_Kind)
)

func init() {
	SchemeBuilder.Register(&EIPV1{}, &EIPV1List{})
}
