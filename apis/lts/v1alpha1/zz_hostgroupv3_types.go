// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostGroupV3InitParameters struct {

	// Specifies the type of the host group.
	// The default value is IP.
	// The valid values are as follows:
	AgentAccessType *string `json:"agentAccessType,omitempty" tf:"agent_access_type,omitempty"`

	// Specifies the ID list of hosts to join the host group.
	// +listType=set
	HostIds []*string `json:"hostIds,omitempty" tf:"host_ids,omitempty"`

	// Specifies the custom label list of the host group.
	// This parameter is required when agent_access_type is set to LABEL.
	// +listType=set
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the name of the host group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the key/value to attach to the host group.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the type of the host.
	// The value can be linux and windows.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HostGroupV3Observation struct {

	// Specifies the type of the host group.
	// The default value is IP.
	// The valid values are as follows:
	AgentAccessType *string `json:"agentAccessType,omitempty" tf:"agent_access_type,omitempty"`

	// The creation time.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the ID list of hosts to join the host group.
	// +listType=set
	HostIds []*string `json:"hostIds,omitempty" tf:"host_ids,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the custom label list of the host group.
	// This parameter is required when agent_access_type is set to LABEL.
	// +listType=set
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the name of the host group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Shows the region in the host group resource created.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the key/value to attach to the host group.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the type of the host.
	// The value can be linux and windows.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The latest update time.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type HostGroupV3Parameters struct {

	// Specifies the type of the host group.
	// The default value is IP.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	AgentAccessType *string `json:"agentAccessType,omitempty" tf:"agent_access_type,omitempty"`

	// Specifies the ID list of hosts to join the host group.
	// +kubebuilder:validation:Optional
	// +listType=set
	HostIds []*string `json:"hostIds,omitempty" tf:"host_ids,omitempty"`

	// Specifies the custom label list of the host group.
	// This parameter is required when agent_access_type is set to LABEL.
	// +kubebuilder:validation:Optional
	// +listType=set
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the name of the host group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the key/value to attach to the host group.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the type of the host.
	// The value can be linux and windows.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// HostGroupV3Spec defines the desired state of HostGroupV3
type HostGroupV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostGroupV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HostGroupV3InitParameters `json:"initProvider,omitempty"`
}

// HostGroupV3Status defines the observed state of HostGroupV3.
type HostGroupV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostGroupV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// HostGroupV3 is the Schema for the HostGroupV3s API. Manages a LTS Host Group resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type HostGroupV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   HostGroupV3Spec   `json:"spec"`
	Status HostGroupV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostGroupV3List contains a list of HostGroupV3s
type HostGroupV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostGroupV3 `json:"items"`
}

// Repository type metadata.
var (
	HostGroupV3_Kind             = "HostGroupV3"
	HostGroupV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostGroupV3_Kind}.String()
	HostGroupV3_KindAPIVersion   = HostGroupV3_Kind + "." + CRDGroupVersion.String()
	HostGroupV3_GroupVersionKind = CRDGroupVersion.WithKind(HostGroupV3_Kind)
)

func init() {
	SchemeBuilder.Register(&HostGroupV3{}, &HostGroupV3List{})
}
