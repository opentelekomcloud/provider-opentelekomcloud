/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupV3InitParameters struct {

	// Specifies the manual backup description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of a DDS instance.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/dds/v1alpha1.InstanceV3
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a InstanceV3 in dds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a InstanceV3 in dds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the manual backup name.
	// The value must be 4 to 64 characters in length and start with a letter (from A to Z or from a to z).
	// It is case-sensitive and can contain only letters, digits (from 0 to 9), hyphens (-), and underscores (_).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type BackupV3Observation struct {

	// Indicates the start time of the backup. The format is yyyy-mm-dd hh:mm:ss. The value is in UTC format.
	BeginTime *string `json:"beginTime,omitempty" tf:"begin_time,omitempty"`

	// Indicates the database version.
	// The datastore structure is documented below.
	Datastore []DatastoreObservation `json:"datastore,omitempty" tf:"datastore,omitempty"`

	// Specifies the manual backup description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates the end time of the backup. The format is yyyy-mm-dd hh:mm:ss. The value is in UTC format.
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of a DDS instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Indicates the name of a DDS instance.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Specifies the manual backup name.
	// The value must be 4 to 64 characters in length and start with a letter (from A to Z or from a to z).
	// It is case-sensitive and can contain only letters, digits (from 0 to 9), hyphens (-), and underscores (_).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the region in which resource was created.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Indicates the backup size in KB.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Indicates the backup status. Valid value:
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Indicates the backup type. Valid value:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type BackupV3Parameters struct {

	// Specifies the manual backup description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of a DDS instance.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/dds/v1alpha1.InstanceV3
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a InstanceV3 in dds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a InstanceV3 in dds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the manual backup name.
	// The value must be 4 to 64 characters in length and start with a letter (from A to Z or from a to z).
	// It is case-sensitive and can contain only letters, digits (from 0 to 9), hyphens (-), and underscores (_).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DatastoreInitParameters struct {
}

type DatastoreObservation struct {

	// Indicates the database storage engine.
	StorageEngine *string `json:"storageEngine,omitempty" tf:"storage_engine,omitempty"`

	// Indicates the DB engine.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Indicates the database version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DatastoreParameters struct {
}

// BackupV3Spec defines the desired state of BackupV3
type BackupV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BackupV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BackupV3InitParameters `json:"initProvider,omitempty"`
}

// BackupV3Status defines the observed state of BackupV3.
type BackupV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BackupV3 is the Schema for the BackupV3s API. Manages a DDS backup resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type BackupV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   BackupV3Spec   `json:"spec"`
	Status BackupV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupV3List contains a list of BackupV3s
type BackupV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupV3 `json:"items"`
}

// Repository type metadata.
var (
	BackupV3_Kind             = "BackupV3"
	BackupV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupV3_Kind}.String()
	BackupV3_KindAPIVersion   = BackupV3_Kind + "." + CRDGroupVersion.String()
	BackupV3_GroupVersionKind = CRDGroupVersion.WithKind(BackupV3_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupV3{}, &BackupV3List{})
}
