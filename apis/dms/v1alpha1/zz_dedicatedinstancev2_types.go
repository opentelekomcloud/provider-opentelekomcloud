// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CrossVPCAccessesInitParameters struct {

	// The advertised IP Address or domain name.
	AdvertisedIP *string `json:"advertisedIp,omitempty" tf:"advertised_ip,omitempty"`
}

type CrossVPCAccessesObservation struct {

	// The advertised IP Address or domain name.
	AdvertisedIP *string `json:"advertisedIp,omitempty" tf:"advertised_ip,omitempty"`

	// The listener IP address.
	ListenerIP *string `json:"listenerIp,omitempty" tf:"listener_ip,omitempty"`

	// The port number.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The port ID associated with the address.
	PortID *string `json:"portId,omitempty" tf:"port_id,omitempty"`
}

type CrossVPCAccessesParameters struct {

	// The advertised IP Address or domain name.
	// +kubebuilder:validation:Optional
	AdvertisedIP *string `json:"advertisedIp,omitempty" tf:"advertised_ip,omitempty"`
}

type DedicatedInstanceV2InitParameters struct {

	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	AccessUser *string `json:"accessUser,omitempty" tf:"access_user,omitempty"`

	// Specifies the CPU architecture. Valid value is X86.
	// Changing this creates a new instance resource.
	ArchType *string `json:"archType,omitempty" tf:"arch_type,omitempty"`

	// Indicates the ID of an AZ. The parameter value can not be
	// left blank or an empty array. For details, see section
	// Querying AZ Information.
	AvailableZones []*string `json:"availableZones,omitempty" tf:"available_zones,omitempty"`

	// Specifies the broker numbers.
	BrokerNum *float64 `json:"brokerNum,omitempty" tf:"broker_num,omitempty"`

	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	CrossVPCAccesses []CrossVPCAccessesInitParameters `json:"crossVpcAccesses,omitempty" tf:"cross_vpc_accesses,omitempty"`

	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates whether to enable disk encryption.
	DiskEncryptedEnable *bool `json:"diskEncryptedEnable,omitempty" tf:"disk_encrypted_enable,omitempty"`

	// Disk encryption key. If disk encryption is not enabled, this parameter is left blank.
	DiskEncryptedKey *string `json:"diskEncryptedKey,omitempty" tf:"disk_encrypted_key,omitempty"`

	// Whether to enable public access. By default, public access is disabled.
	EnablePublicip *bool `json:"enablePublicip,omitempty" tf:"enable_publicip,omitempty"`

	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// +listType=set
	EnabledMechanisms []*string `json:"enabledMechanisms,omitempty" tf:"enabled_mechanisms,omitempty"`

	// Specifies the version of the Kafka engine,
	// such as 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies the Kafka [flavor ID](https://docs.otc.t-systems.com/distributed-message-service/api-ref/apis_v2_recommended/other_apis/querying_product_specifications_list.html#listengineproducts,
	// e.g. c6.2u4g.cluster.
	FlavorID *string `json:"flavorId,omitempty" tf:"flavor_id,omitempty"`

	// Specifies whether to enable IPv6. Defaults to false.
	// Changing this creates a new instance resource.
	IPv6Enable *bool `json:"ipv6Enable,omitempty" tf:"ipv6_enable,omitempty"`

	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters maintain_begin
	// and maintain_end must be set in pairs. If parameter maintain_begin is left blank, parameter maintain_end is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters maintain_begin
	// and maintain_end must be set in pairs. If parameter maintain_end is left blank, parameter
	// maintain_begin is also blank. In this case, the system automatically allocates the default end time 06:00.
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Specifies the name of the DMS Kafka instance. An instance name starts with a letter,
	// consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Specifies the IPv4 private IP addresses for the new brokers.
	NewTenantIps []*string `json:"newTenantIps,omitempty" tf:"new_tenant_ips,omitempty"`

	// Specifies the password of SASL_SSL user. A password must meet the following
	// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
	// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\|[{}]:'",<.>/?).
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specifies a resource ID in UUID format.
	PublicipID []*string `json:"publicipId,omitempty" tf:"publicip_id,omitempty"`

	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	RetentionPolicy *string `json:"retentionPolicy,omitempty" tf:"retention_policy,omitempty"`

	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the ID of a security group.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the protocol to use after SASL is enabled. Value options:
	SecurityProtocol *string `json:"securityProtocol,omitempty" tf:"security_protocol,omitempty"`

	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	StorageSpace *float64 `json:"storageSpace,omitempty" tf:"storage_space,omitempty"`

	// Specifies the storage I/O specification.
	// The valid values are as follows:
	StorageSpecCode *string `json:"storageSpecCode,omitempty" tf:"storage_spec_code,omitempty"`

	// The key/value pairs to associate with the DMS Kafka instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type DedicatedInstanceV2Observation struct {

	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	AccessUser *string `json:"accessUser,omitempty" tf:"access_user,omitempty"`

	// Specifies the CPU architecture. Valid value is X86.
	// Changing this creates a new instance resource.
	ArchType *string `json:"archType,omitempty" tf:"arch_type,omitempty"`

	// Indicates the ID of an AZ. The parameter value can not be
	// left blank or an empty array. For details, see section
	// Querying AZ Information.
	AvailableZones []*string `json:"availableZones,omitempty" tf:"available_zones,omitempty"`

	Bandwidth *string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Specifies the broker numbers.
	BrokerNum *float64 `json:"brokerNum,omitempty" tf:"broker_num,omitempty"`

	// Indicates whether the certificate can be replaced.
	CertReplaced *bool `json:"certReplaced,omitempty" tf:"cert_replaced,omitempty"`

	// Indicates the IP address of the DMS Kafka instance.
	ConnectAddress *string `json:"connectAddress,omitempty" tf:"connect_address,omitempty"`

	// Indicates the number of connector node.
	ConnectorNodeNum *float64 `json:"connectorNodeNum,omitempty" tf:"connector_node_num,omitempty"`

	// Indicates the create time.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	CrossVPCAccesses []CrossVPCAccessesObservation `json:"crossVpcAccesses,omitempty" tf:"cross_vpc_accesses,omitempty"`

	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates whether to enable disk encryption.
	DiskEncryptedEnable *bool `json:"diskEncryptedEnable,omitempty" tf:"disk_encrypted_enable,omitempty"`

	// Disk encryption key. If disk encryption is not enabled, this parameter is left blank.
	DiskEncryptedKey *string `json:"diskEncryptedKey,omitempty" tf:"disk_encrypted_key,omitempty"`

	// Whether message dumping(smart connect) is enabled.
	Dumping *bool `json:"dumping,omitempty" tf:"dumping,omitempty"`

	// Whether to enable public access. By default, public access is disabled.
	EnablePublicip *bool `json:"enablePublicip,omitempty" tf:"enable_publicip,omitempty"`

	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// +listType=set
	EnabledMechanisms []*string `json:"enabledMechanisms,omitempty" tf:"enabled_mechanisms,omitempty"`

	// Indicates the message engine.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Specifies the version of the Kafka engine,
	// such as 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies the Kafka [flavor ID](https://docs.otc.t-systems.com/distributed-message-service/api-ref/apis_v2_recommended/other_apis/querying_product_specifications_list.html#listengineproducts,
	// e.g. c6.2u4g.cluster.
	FlavorID *string `json:"flavorId,omitempty" tf:"flavor_id,omitempty"`

	// Specifies a resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies whether to enable IPv6. Defaults to false.
	// Changing this creates a new instance resource.
	IPv6Enable *bool `json:"ipv6Enable,omitempty" tf:"ipv6_enable,omitempty"`

	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters maintain_begin
	// and maintain_end must be set in pairs. If parameter maintain_begin is left blank, parameter maintain_end is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters maintain_begin
	// and maintain_end must be set in pairs. If parameter maintain_end is left blank, parameter
	// maintain_begin is also blank. In this case, the system automatically allocates the default end time 06:00.
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Specifies the name of the DMS Kafka instance. An instance name starts with a letter,
	// consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Specifies the IPv4 private IP addresses for the new brokers.
	NewTenantIps []*string `json:"newTenantIps,omitempty" tf:"new_tenant_ips,omitempty"`

	// Indicates the node quantity.
	NodeNum *float64 `json:"nodeNum,omitempty" tf:"node_num,omitempty"`

	// Indicates the number of partitions in Kafka instance.
	PartitionNum *float64 `json:"partitionNum,omitempty" tf:"partition_num,omitempty"`

	// Indicates the connection address on the tenant side.
	PodConnectAddress *string `json:"podConnectAddress,omitempty" tf:"pod_connect_address,omitempty"`

	// Indicates the port number of the DMS Kafka instance.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Indicates the public network access bandwidth.
	PublicBandwidth *float64 `json:"publicBandwidth,omitempty" tf:"public_bandwidth,omitempty"`

	// Indicates the public IP addresses list of the instance.
	PublicIPAddress *string `json:"publicIpAddress,omitempty" tf:"public_ip_address,omitempty"`

	// Specifies a resource ID in UUID format.
	PublicipID []*string `json:"publicipId,omitempty" tf:"publicip_id,omitempty"`

	// The region in which DMS Kafka instance is created.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Indicates a resource specifications identifier.
	ResourceSpecCode *string `json:"resourceSpecCode,omitempty" tf:"resource_spec_code,omitempty"`

	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	RetentionPolicy *string `json:"retentionPolicy,omitempty" tf:"retention_policy,omitempty"`

	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Indicates whether to enable two-way authentication.
	SSLTwoWayEnable *bool `json:"sslTwoWayEnable,omitempty" tf:"ssl_two_way_enable,omitempty"`

	// Specifies the ID of a security group.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the protocol to use after SASL is enabled. Value options:
	SecurityProtocol *string `json:"securityProtocol,omitempty" tf:"security_protocol,omitempty"`

	// Indicates the status of the DMS Kafka instance.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Indicates the storage resource ID.
	StorageResourceID *string `json:"storageResourceId,omitempty" tf:"storage_resource_id,omitempty"`

	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	StorageSpace *float64 `json:"storageSpace,omitempty" tf:"storage_space,omitempty"`

	// Specifies the storage I/O specification.
	// The valid values are as follows:
	StorageSpecCode *string `json:"storageSpecCode,omitempty" tf:"storage_spec_code,omitempty"`

	// Indicates the storage type.
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`

	// The key/value pairs to associate with the DMS Kafka instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Indicates the DMS Kafka instance type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Indicates the used message storage space. Unit: GB
	UsedStorageSpace *float64 `json:"usedStorageSpace,omitempty" tf:"used_storage_space,omitempty"`

	// Indicates the ID of the user who created the DMS Kafka instance
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// Indicates the name of the user who created the DMS Kafka instance
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`

	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type DedicatedInstanceV2Parameters struct {

	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	AccessUser *string `json:"accessUser,omitempty" tf:"access_user,omitempty"`

	// Specifies the CPU architecture. Valid value is X86.
	// Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	ArchType *string `json:"archType,omitempty" tf:"arch_type,omitempty"`

	// Indicates the ID of an AZ. The parameter value can not be
	// left blank or an empty array. For details, see section
	// Querying AZ Information.
	// +kubebuilder:validation:Optional
	AvailableZones []*string `json:"availableZones,omitempty" tf:"available_zones,omitempty"`

	// Specifies the broker numbers.
	// +kubebuilder:validation:Optional
	BrokerNum *float64 `json:"brokerNum,omitempty" tf:"broker_num,omitempty"`

	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	CrossVPCAccesses []CrossVPCAccessesParameters `json:"crossVpcAccesses,omitempty" tf:"cross_vpc_accesses,omitempty"`

	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates whether to enable disk encryption.
	// +kubebuilder:validation:Optional
	DiskEncryptedEnable *bool `json:"diskEncryptedEnable,omitempty" tf:"disk_encrypted_enable,omitempty"`

	// Disk encryption key. If disk encryption is not enabled, this parameter is left blank.
	// +kubebuilder:validation:Optional
	DiskEncryptedKey *string `json:"diskEncryptedKey,omitempty" tf:"disk_encrypted_key,omitempty"`

	// Whether to enable public access. By default, public access is disabled.
	// +kubebuilder:validation:Optional
	EnablePublicip *bool `json:"enablePublicip,omitempty" tf:"enable_publicip,omitempty"`

	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// +kubebuilder:validation:Optional
	// +listType=set
	EnabledMechanisms []*string `json:"enabledMechanisms,omitempty" tf:"enabled_mechanisms,omitempty"`

	// Specifies the version of the Kafka engine,
	// such as 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies the Kafka [flavor ID](https://docs.otc.t-systems.com/distributed-message-service/api-ref/apis_v2_recommended/other_apis/querying_product_specifications_list.html#listengineproducts,
	// e.g. c6.2u4g.cluster.
	// +kubebuilder:validation:Optional
	FlavorID *string `json:"flavorId,omitempty" tf:"flavor_id,omitempty"`

	// Specifies whether to enable IPv6. Defaults to false.
	// Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	IPv6Enable *bool `json:"ipv6Enable,omitempty" tf:"ipv6_enable,omitempty"`

	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters maintain_begin
	// and maintain_end must be set in pairs. If parameter maintain_begin is left blank, parameter maintain_end is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	// +kubebuilder:validation:Optional
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters maintain_begin
	// and maintain_end must be set in pairs. If parameter maintain_end is left blank, parameter
	// maintain_begin is also blank. In this case, the system automatically allocates the default end time 06:00.
	// +kubebuilder:validation:Optional
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Specifies the name of the DMS Kafka instance. An instance name starts with a letter,
	// consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Specifies the IPv4 private IP addresses for the new brokers.
	// +kubebuilder:validation:Optional
	NewTenantIps []*string `json:"newTenantIps,omitempty" tf:"new_tenant_ips,omitempty"`

	// Specifies the password of SASL_SSL user. A password must meet the following
	// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
	// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\|[{}]:'",<.>/?).
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specifies a resource ID in UUID format.
	// +kubebuilder:validation:Optional
	PublicipID []*string `json:"publicipId,omitempty" tf:"publicip_id,omitempty"`

	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	// +kubebuilder:validation:Optional
	RetentionPolicy *string `json:"retentionPolicy,omitempty" tf:"retention_policy,omitempty"`

	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the ID of a security group.
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the protocol to use after SASL is enabled. Value options:
	// +kubebuilder:validation:Optional
	SecurityProtocol *string `json:"securityProtocol,omitempty" tf:"security_protocol,omitempty"`

	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	// +kubebuilder:validation:Optional
	StorageSpace *float64 `json:"storageSpace,omitempty" tf:"storage_space,omitempty"`

	// Specifies the storage I/O specification.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	StorageSpecCode *string `json:"storageSpecCode,omitempty" tf:"storage_spec_code,omitempty"`

	// The key/value pairs to associate with the DMS Kafka instance.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

// DedicatedInstanceV2Spec defines the desired state of DedicatedInstanceV2
type DedicatedInstanceV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DedicatedInstanceV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DedicatedInstanceV2InitParameters `json:"initProvider,omitempty"`
}

// DedicatedInstanceV2Status defines the observed state of DedicatedInstanceV2.
type DedicatedInstanceV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DedicatedInstanceV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DedicatedInstanceV2 is the Schema for the DedicatedInstanceV2s API. Manages an up-to-date DMS Instance v2 resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type DedicatedInstanceV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.brokerNum) || (has(self.initProvider) && has(self.initProvider.brokerNum))",message="spec.forProvider.brokerNum is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.engineVersion) || (has(self.initProvider) && has(self.initProvider.engineVersion))",message="spec.forProvider.engineVersion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.flavorId) || (has(self.initProvider) && has(self.initProvider.flavorId))",message="spec.forProvider.flavorId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.networkId) || (has(self.initProvider) && has(self.initProvider.networkId))",message="spec.forProvider.networkId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.securityGroupId) || (has(self.initProvider) && has(self.initProvider.securityGroupId))",message="spec.forProvider.securityGroupId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageSpace) || (has(self.initProvider) && has(self.initProvider.storageSpace))",message="spec.forProvider.storageSpace is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageSpecCode) || (has(self.initProvider) && has(self.initProvider.storageSpecCode))",message="spec.forProvider.storageSpecCode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vpcId) || (has(self.initProvider) && has(self.initProvider.vpcId))",message="spec.forProvider.vpcId is a required parameter"
	Spec   DedicatedInstanceV2Spec   `json:"spec"`
	Status DedicatedInstanceV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DedicatedInstanceV2List contains a list of DedicatedInstanceV2s
type DedicatedInstanceV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DedicatedInstanceV2 `json:"items"`
}

// Repository type metadata.
var (
	DedicatedInstanceV2_Kind             = "DedicatedInstanceV2"
	DedicatedInstanceV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DedicatedInstanceV2_Kind}.String()
	DedicatedInstanceV2_KindAPIVersion   = DedicatedInstanceV2_Kind + "." + CRDGroupVersion.String()
	DedicatedInstanceV2_GroupVersionKind = CRDGroupVersion.WithKind(DedicatedInstanceV2_Kind)
)

func init() {
	SchemeBuilder.Register(&DedicatedInstanceV2{}, &DedicatedInstanceV2List{})
}
