// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DestinationTaskInitParameters struct {

	// Specifies the access key used to access the OBS bucket.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// Specifies the consumer strategy of the smart connect task.
	// Value options:
	ConsumerStrategy *string `json:"consumerStrategy,omitempty" tf:"consumer_strategy,omitempty"`

	// Specifies the deliver time interval of the smart connect task.
	// It's required when destination_type is OBS_SINK.
	// The value should be between 30 and 900. Changing this parameter will create a new resource.
	DeliverTimeInterval *float64 `json:"deliverTimeInterval,omitempty" tf:"deliver_time_interval,omitempty"`

	// Specifies the destination file type of the smart connect task.
	// Only TEXT is supported. Changing this parameter will create a new resource.
	DestinationFileType *string `json:"destinationFileType,omitempty" tf:"destination_file_type,omitempty"`

	// Specifies the obs bucket name of the smart connect task.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	ObsBucketName *string `json:"obsBucketName,omitempty" tf:"obs_bucket_name,omitempty"`

	// Specifies the obs path of the smart connect task.
	// Obs path is separated by a slash. Changing this parameter will create a new resource.
	ObsPath *string `json:"obsPath,omitempty" tf:"obs_path,omitempty"`

	// Specifies the time directory format of the smart connect task.
	// Value options: yyyy, yyyy/MM, yyyy/MM/dd, yyyy/MM/dd/HH, yyyy/MM/dd/HH/mm.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	PartitionFormat *string `json:"partitionFormat,omitempty" tf:"partition_format,omitempty"`

	// Specifies the record delimiter of the smart connect task.
	// Value options: ,, ;, |, \n.
	// Changing this parameter will create a new resource.
	RecordDelimiter *string `json:"recordDelimiter,omitempty" tf:"record_delimiter,omitempty"`

	// Specifies the secret access key used to access the OBS bucket.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Specifies whether to dump keys.
	// Changing this parameter will create a new resource.
	StoreKeys *bool `json:"storeKeys,omitempty" tf:"store_keys,omitempty"`
}

type DestinationTaskObservation struct {

	// Specifies the access key used to access the OBS bucket.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// Specifies the consumer strategy of the smart connect task.
	// Value options:
	ConsumerStrategy *string `json:"consumerStrategy,omitempty" tf:"consumer_strategy,omitempty"`

	// Specifies the deliver time interval of the smart connect task.
	// It's required when destination_type is OBS_SINK.
	// The value should be between 30 and 900. Changing this parameter will create a new resource.
	DeliverTimeInterval *float64 `json:"deliverTimeInterval,omitempty" tf:"deliver_time_interval,omitempty"`

	// Specifies the destination file type of the smart connect task.
	// Only TEXT is supported. Changing this parameter will create a new resource.
	DestinationFileType *string `json:"destinationFileType,omitempty" tf:"destination_file_type,omitempty"`

	// Specifies the obs bucket name of the smart connect task.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	ObsBucketName *string `json:"obsBucketName,omitempty" tf:"obs_bucket_name,omitempty"`

	// Specifies the obs path of the smart connect task.
	// Obs path is separated by a slash. Changing this parameter will create a new resource.
	ObsPath *string `json:"obsPath,omitempty" tf:"obs_path,omitempty"`

	// Specifies the time directory format of the smart connect task.
	// Value options: yyyy, yyyy/MM, yyyy/MM/dd, yyyy/MM/dd/HH, yyyy/MM/dd/HH/mm.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	PartitionFormat *string `json:"partitionFormat,omitempty" tf:"partition_format,omitempty"`

	// Specifies the record delimiter of the smart connect task.
	// Value options: ,, ;, |, \n.
	// Changing this parameter will create a new resource.
	RecordDelimiter *string `json:"recordDelimiter,omitempty" tf:"record_delimiter,omitempty"`

	// Specifies whether to dump keys.
	// Changing this parameter will create a new resource.
	StoreKeys *bool `json:"storeKeys,omitempty" tf:"store_keys,omitempty"`
}

type DestinationTaskParameters struct {

	// Specifies the access key used to access the OBS bucket.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// Specifies the consumer strategy of the smart connect task.
	// Value options:
	// +kubebuilder:validation:Optional
	ConsumerStrategy *string `json:"consumerStrategy,omitempty" tf:"consumer_strategy,omitempty"`

	// Specifies the deliver time interval of the smart connect task.
	// It's required when destination_type is OBS_SINK.
	// The value should be between 30 and 900. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	DeliverTimeInterval *float64 `json:"deliverTimeInterval,omitempty" tf:"deliver_time_interval,omitempty"`

	// Specifies the destination file type of the smart connect task.
	// Only TEXT is supported. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	DestinationFileType *string `json:"destinationFileType,omitempty" tf:"destination_file_type,omitempty"`

	// Specifies the obs bucket name of the smart connect task.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ObsBucketName *string `json:"obsBucketName,omitempty" tf:"obs_bucket_name,omitempty"`

	// Specifies the obs path of the smart connect task.
	// Obs path is separated by a slash. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ObsPath *string `json:"obsPath,omitempty" tf:"obs_path,omitempty"`

	// Specifies the time directory format of the smart connect task.
	// Value options: yyyy, yyyy/MM, yyyy/MM/dd, yyyy/MM/dd/HH, yyyy/MM/dd/HH/mm.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	PartitionFormat *string `json:"partitionFormat,omitempty" tf:"partition_format,omitempty"`

	// Specifies the record delimiter of the smart connect task.
	// Value options: ,, ;, |, \n.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	RecordDelimiter *string `json:"recordDelimiter,omitempty" tf:"record_delimiter,omitempty"`

	// Specifies the secret access key used to access the OBS bucket.
	// It's required when destination_type is OBS_SINK.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Specifies whether to dump keys.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	StoreKeys *bool `json:"storeKeys,omitempty" tf:"store_keys,omitempty"`
}

type SmartConnectTaskV2InitParameters struct {

	// Specifies the destination configuration of a smart connect task.
	// The destination_task structure is documented below.
	// Changing this parameter will create a new resource.
	DestinationTask []DestinationTaskInitParameters `json:"destinationTask,omitempty" tf:"destination_task,omitempty"`

	// Specifies the destination type of the smart connect task.
	// Valid values are OBS_SINK and NONE. Changing this parameter will create a new resource.
	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type,omitempty"`

	// Specifies the kafka instance ID.
	// Changing this parameter will create a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the source configuration of a smart connect task.
	// The source_task structure is documented below.
	// Changing this parameter will create a new resource.
	SourceTask []SourceTaskInitParameters `json:"sourceTask,omitempty" tf:"source_task,omitempty"`

	// Specifies the source type of the smart connect task. Valid values are
	// KAFKA_REPLICATOR_SOURCE and NONE. Changing this parameter will create a new resource.
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// Specifies whether to start a task later.
	// Changing this parameter will create a new resource.
	StartLater *bool `json:"startLater,omitempty" tf:"start_later,omitempty"`

	// Specifies the smart connect task name.
	// Changing this parameter will create a new resource.
	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`

	// Specifies the topic names list of the smart connect task.
	// Changing this parameter will create a new resource.
	// +listType=set
	Topics []*string `json:"topics,omitempty" tf:"topics,omitempty"`

	// Specifies the regular expression of topic name for the smart connect task.
	// Changing this parameter will create a new resource.
	TopicsRegex *string `json:"topicsRegex,omitempty" tf:"topics_regex,omitempty"`
}

type SmartConnectTaskV2Observation struct {

	// Indicates the creation time of the smart connect task.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the destination configuration of a smart connect task.
	// The destination_task structure is documented below.
	// Changing this parameter will create a new resource.
	DestinationTask []DestinationTaskObservation `json:"destinationTask,omitempty" tf:"destination_task,omitempty"`

	// Specifies the destination type of the smart connect task.
	// Valid values are OBS_SINK and NONE. Changing this parameter will create a new resource.
	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the kafka instance ID.
	// Changing this parameter will create a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The region in which the resource is created.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the source configuration of a smart connect task.
	// The source_task structure is documented below.
	// Changing this parameter will create a new resource.
	SourceTask []SourceTaskObservation `json:"sourceTask,omitempty" tf:"source_task,omitempty"`

	// Specifies the source type of the smart connect task. Valid values are
	// KAFKA_REPLICATOR_SOURCE and NONE. Changing this parameter will create a new resource.
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// Specifies whether to start a task later.
	// Changing this parameter will create a new resource.
	StartLater *bool `json:"startLater,omitempty" tf:"start_later,omitempty"`

	// Indicates the status of the smart connect task.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the smart connect task name.
	// Changing this parameter will create a new resource.
	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`

	// Specifies the topic names list of the smart connect task.
	// Changing this parameter will create a new resource.
	// +listType=set
	Topics []*string `json:"topics,omitempty" tf:"topics,omitempty"`

	// Specifies the regular expression of topic name for the smart connect task.
	// Changing this parameter will create a new resource.
	TopicsRegex *string `json:"topicsRegex,omitempty" tf:"topics_regex,omitempty"`
}

type SmartConnectTaskV2Parameters struct {

	// Specifies the destination configuration of a smart connect task.
	// The destination_task structure is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	DestinationTask []DestinationTaskParameters `json:"destinationTask,omitempty" tf:"destination_task,omitempty"`

	// Specifies the destination type of the smart connect task.
	// Valid values are OBS_SINK and NONE. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type,omitempty"`

	// Specifies the kafka instance ID.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the source configuration of a smart connect task.
	// The source_task structure is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SourceTask []SourceTaskParameters `json:"sourceTask,omitempty" tf:"source_task,omitempty"`

	// Specifies the source type of the smart connect task. Valid values are
	// KAFKA_REPLICATOR_SOURCE and NONE. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// Specifies whether to start a task later.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	StartLater *bool `json:"startLater,omitempty" tf:"start_later,omitempty"`

	// Specifies the smart connect task name.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	TaskName *string `json:"taskName,omitempty" tf:"task_name,omitempty"`

	// Specifies the topic names list of the smart connect task.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	// +listType=set
	Topics []*string `json:"topics,omitempty" tf:"topics,omitempty"`

	// Specifies the regular expression of topic name for the smart connect task.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	TopicsRegex *string `json:"topicsRegex,omitempty" tf:"topics_regex,omitempty"`
}

type SourceTaskInitParameters struct {

	// Specifies the compression algorithm to use for copying messages.
	// Valid values are none, gzip, snappy, lz4 and zstd.
	// Changing this parameter will create a new resource.
	CompressionType *string `json:"compressionType,omitempty" tf:"compression_type,omitempty"`

	// Specifies the start offset. Value options are:
	ConsumerStrategy *string `json:"consumerStrategy,omitempty" tf:"consumer_strategy,omitempty"`

	// Specifies the current Kafka instance alias.
	// Changing this parameter will create a new resource.
	CurrentInstanceAlias *string `json:"currentInstanceAlias,omitempty" tf:"current_instance_alias,omitempty"`

	// Specifies the sync direction. Valid values are:
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies the peer Kafka user password.
	// It's required when security_protocol is SASL_SSL. Changing this parameter will create a new resource.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specifies the peer Kafka instance address list.
	// Changing this parameter will create a new resource.
	// +listType=set
	PeerInstanceAddress []*string `json:"peerInstanceAddress,omitempty" tf:"peer_instance_address,omitempty"`

	// Specifies the peer Kafka instance alias.
	// Changing this parameter will create a new resource.
	PeerInstanceAlias *string `json:"peerInstanceAlias,omitempty" tf:"peer_instance_alias,omitempty"`

	// Specifies the peer Kafka instance ID.
	// Changing this parameter will create a new resource.
	PeerInstanceID *string `json:"peerInstanceId,omitempty" tf:"peer_instance_id,omitempty"`

	// Specifies whether the message header contains the message source.
	// Changing this parameter will create a new resource.
	ProvenanceHeaderEnabled *bool `json:"provenanceHeaderEnabled,omitempty" tf:"provenance_header_enabled,omitempty"`

	// Specifies whether to rename the topic. If true, will add the
	// alias of the source Kafka instance before the target topic name to form a new name of the target topic.
	// Changing this parameter will create a new resource.
	RenameTopicEnabled *bool `json:"renameTopicEnabled,omitempty" tf:"rename_topic_enabled,omitempty"`

	// Specifies the number of topic replicas. The value of this parameter
	// cannot exceed the number of brokers in the peer instance. Changing this parameter will create a new resource.
	ReplicationFactor *float64 `json:"replicationFactor,omitempty" tf:"replication_factor,omitempty"`

	// Specifies the peer Kafka authentication mode.
	// Changing this parameter will create a new resource.
	SaslMechanism *string `json:"saslMechanism,omitempty" tf:"sasl_mechanism,omitempty"`

	// Specifies the peer Kafka authentication. Valid values are:
	SecurityProtocol *string `json:"securityProtocol,omitempty" tf:"security_protocol,omitempty"`

	// Specifies whether to sync the consumption progress.
	// Changing this parameter will create a new resource.
	SyncConsumerOffsetsEnabled *bool `json:"syncConsumerOffsetsEnabled,omitempty" tf:"sync_consumer_offsets_enabled,omitempty"`

	// Specifies the number of data replication tasks.
	// If the direction is set to two-way, the actual number of tasks will be twice the number of tasks you configure here.
	// Changing this parameter will create a new resource.
	TaskNum *float64 `json:"taskNum,omitempty" tf:"task_num,omitempty"`

	// Specifies the topic mapping string list, which is used to customize
	// the target topic name, e.g., topic-sc-1:topic-sc-2. Changing this parameter will create a new resource.
	// +listType=set
	TopicsMapping []*string `json:"topicsMapping,omitempty" tf:"topics_mapping,omitempty"`

	// Specifies the peer Kafka user name.
	// It's required when security_protocol is SASL_SSL. Changing this parameter will create a new resource.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type SourceTaskObservation struct {

	// Specifies the compression algorithm to use for copying messages.
	// Valid values are none, gzip, snappy, lz4 and zstd.
	// Changing this parameter will create a new resource.
	CompressionType *string `json:"compressionType,omitempty" tf:"compression_type,omitempty"`

	// Specifies the start offset. Value options are:
	ConsumerStrategy *string `json:"consumerStrategy,omitempty" tf:"consumer_strategy,omitempty"`

	// Specifies the current Kafka instance alias.
	// Changing this parameter will create a new resource.
	CurrentInstanceAlias *string `json:"currentInstanceAlias,omitempty" tf:"current_instance_alias,omitempty"`

	// Specifies the sync direction. Valid values are:
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies the peer Kafka instance address list.
	// Changing this parameter will create a new resource.
	// +listType=set
	PeerInstanceAddress []*string `json:"peerInstanceAddress,omitempty" tf:"peer_instance_address,omitempty"`

	// Specifies the peer Kafka instance alias.
	// Changing this parameter will create a new resource.
	PeerInstanceAlias *string `json:"peerInstanceAlias,omitempty" tf:"peer_instance_alias,omitempty"`

	// Specifies the peer Kafka instance ID.
	// Changing this parameter will create a new resource.
	PeerInstanceID *string `json:"peerInstanceId,omitempty" tf:"peer_instance_id,omitempty"`

	// Specifies whether the message header contains the message source.
	// Changing this parameter will create a new resource.
	ProvenanceHeaderEnabled *bool `json:"provenanceHeaderEnabled,omitempty" tf:"provenance_header_enabled,omitempty"`

	// Specifies whether to rename the topic. If true, will add the
	// alias of the source Kafka instance before the target topic name to form a new name of the target topic.
	// Changing this parameter will create a new resource.
	RenameTopicEnabled *bool `json:"renameTopicEnabled,omitempty" tf:"rename_topic_enabled,omitempty"`

	// Specifies the number of topic replicas. The value of this parameter
	// cannot exceed the number of brokers in the peer instance. Changing this parameter will create a new resource.
	ReplicationFactor *float64 `json:"replicationFactor,omitempty" tf:"replication_factor,omitempty"`

	// Specifies the peer Kafka authentication mode.
	// Changing this parameter will create a new resource.
	SaslMechanism *string `json:"saslMechanism,omitempty" tf:"sasl_mechanism,omitempty"`

	// Specifies the peer Kafka authentication. Valid values are:
	SecurityProtocol *string `json:"securityProtocol,omitempty" tf:"security_protocol,omitempty"`

	// Specifies whether to sync the consumption progress.
	// Changing this parameter will create a new resource.
	SyncConsumerOffsetsEnabled *bool `json:"syncConsumerOffsetsEnabled,omitempty" tf:"sync_consumer_offsets_enabled,omitempty"`

	// Specifies the number of data replication tasks.
	// If the direction is set to two-way, the actual number of tasks will be twice the number of tasks you configure here.
	// Changing this parameter will create a new resource.
	TaskNum *float64 `json:"taskNum,omitempty" tf:"task_num,omitempty"`

	// Specifies the topic mapping string list, which is used to customize
	// the target topic name, e.g., topic-sc-1:topic-sc-2. Changing this parameter will create a new resource.
	// +listType=set
	TopicsMapping []*string `json:"topicsMapping,omitempty" tf:"topics_mapping,omitempty"`

	// Specifies the peer Kafka user name.
	// It's required when security_protocol is SASL_SSL. Changing this parameter will create a new resource.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type SourceTaskParameters struct {

	// Specifies the compression algorithm to use for copying messages.
	// Valid values are none, gzip, snappy, lz4 and zstd.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	CompressionType *string `json:"compressionType,omitempty" tf:"compression_type,omitempty"`

	// Specifies the start offset. Value options are:
	// +kubebuilder:validation:Optional
	ConsumerStrategy *string `json:"consumerStrategy,omitempty" tf:"consumer_strategy,omitempty"`

	// Specifies the current Kafka instance alias.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	CurrentInstanceAlias *string `json:"currentInstanceAlias,omitempty" tf:"current_instance_alias,omitempty"`

	// Specifies the sync direction. Valid values are:
	// +kubebuilder:validation:Optional
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies the peer Kafka user password.
	// It's required when security_protocol is SASL_SSL. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specifies the peer Kafka instance address list.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	// +listType=set
	PeerInstanceAddress []*string `json:"peerInstanceAddress,omitempty" tf:"peer_instance_address,omitempty"`

	// Specifies the peer Kafka instance alias.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	PeerInstanceAlias *string `json:"peerInstanceAlias,omitempty" tf:"peer_instance_alias,omitempty"`

	// Specifies the peer Kafka instance ID.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	PeerInstanceID *string `json:"peerInstanceId,omitempty" tf:"peer_instance_id,omitempty"`

	// Specifies whether the message header contains the message source.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ProvenanceHeaderEnabled *bool `json:"provenanceHeaderEnabled,omitempty" tf:"provenance_header_enabled,omitempty"`

	// Specifies whether to rename the topic. If true, will add the
	// alias of the source Kafka instance before the target topic name to form a new name of the target topic.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	RenameTopicEnabled *bool `json:"renameTopicEnabled,omitempty" tf:"rename_topic_enabled,omitempty"`

	// Specifies the number of topic replicas. The value of this parameter
	// cannot exceed the number of brokers in the peer instance. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ReplicationFactor *float64 `json:"replicationFactor,omitempty" tf:"replication_factor,omitempty"`

	// Specifies the peer Kafka authentication mode.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SaslMechanism *string `json:"saslMechanism,omitempty" tf:"sasl_mechanism,omitempty"`

	// Specifies the peer Kafka authentication. Valid values are:
	// +kubebuilder:validation:Optional
	SecurityProtocol *string `json:"securityProtocol,omitempty" tf:"security_protocol,omitempty"`

	// Specifies whether to sync the consumption progress.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SyncConsumerOffsetsEnabled *bool `json:"syncConsumerOffsetsEnabled,omitempty" tf:"sync_consumer_offsets_enabled,omitempty"`

	// Specifies the number of data replication tasks.
	// If the direction is set to two-way, the actual number of tasks will be twice the number of tasks you configure here.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	TaskNum *float64 `json:"taskNum,omitempty" tf:"task_num,omitempty"`

	// Specifies the topic mapping string list, which is used to customize
	// the target topic name, e.g., topic-sc-1:topic-sc-2. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	// +listType=set
	TopicsMapping []*string `json:"topicsMapping,omitempty" tf:"topics_mapping,omitempty"`

	// Specifies the peer Kafka user name.
	// It's required when security_protocol is SASL_SSL. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

// SmartConnectTaskV2Spec defines the desired state of SmartConnectTaskV2
type SmartConnectTaskV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SmartConnectTaskV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SmartConnectTaskV2InitParameters `json:"initProvider,omitempty"`
}

// SmartConnectTaskV2Status defines the observed state of SmartConnectTaskV2.
type SmartConnectTaskV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SmartConnectTaskV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SmartConnectTaskV2 is the Schema for the SmartConnectTaskV2s API. Manages an up-to-date DMS Smart Connect Task v2 resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type SmartConnectTaskV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceId) || (has(self.initProvider) && has(self.initProvider.instanceId))",message="spec.forProvider.instanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.taskName) || (has(self.initProvider) && has(self.initProvider.taskName))",message="spec.forProvider.taskName is a required parameter"
	Spec   SmartConnectTaskV2Spec   `json:"spec"`
	Status SmartConnectTaskV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SmartConnectTaskV2List contains a list of SmartConnectTaskV2s
type SmartConnectTaskV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SmartConnectTaskV2 `json:"items"`
}

// Repository type metadata.
var (
	SmartConnectTaskV2_Kind             = "SmartConnectTaskV2"
	SmartConnectTaskV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SmartConnectTaskV2_Kind}.String()
	SmartConnectTaskV2_KindAPIVersion   = SmartConnectTaskV2_Kind + "." + CRDGroupVersion.String()
	SmartConnectTaskV2_GroupVersionKind = CRDGroupVersion.WithKind(SmartConnectTaskV2_Kind)
)

func init() {
	SchemeBuilder.Register(&SmartConnectTaskV2{}, &SmartConnectTaskV2List{})
}
