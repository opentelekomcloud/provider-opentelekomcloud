/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupStrategyInitParameters struct {

	// Specifies the retention days for specific backup files. The value
	// range is from 0 to 732. If this parameter is not specified or set
	// to 0, the automated backup policy is disabled. NOTICE:
	// Primary/standby DB instances of Microsoft SQL Server do not
	// support disabling the automated backup policy.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the backup time window. Automated backups will be
	// triggered during the backup time window. It must be a valid value in the "hh:mm-HH:MM"
	// format. The current time is in the UTC format. The HH value must
	// be 1 greater than the hh value. The values of mm and MM must be
	// the same and must be set to any of the following: 00, 15, 30, or
	// 45. Example value: 08:15-09:15 23:00-00:00.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type BackupStrategyObservation struct {

	// Specifies the retention days for specific backup files. The value
	// range is from 0 to 732. If this parameter is not specified or set
	// to 0, the automated backup policy is disabled. NOTICE:
	// Primary/standby DB instances of Microsoft SQL Server do not
	// support disabling the automated backup policy.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the backup time window. Automated backups will be
	// triggered during the backup time window. It must be a valid value in the "hh:mm-HH:MM"
	// format. The current time is in the UTC format. The HH value must
	// be 1 greater than the hh value. The values of mm and MM must be
	// the same and must be set to any of the following: 00, 15, 30, or
	// 45. Example value: 08:15-09:15 23:00-00:00.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type BackupStrategyParameters struct {

	// Specifies the retention days for specific backup files. The value
	// range is from 0 to 732. If this parameter is not specified or set
	// to 0, the automated backup policy is disabled. NOTICE:
	// Primary/standby DB instances of Microsoft SQL Server do not
	// support disabling the automated backup policy.
	// +kubebuilder:validation:Optional
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the backup time window. Automated backups will be
	// triggered during the backup time window. It must be a valid value in the "hh:mm-HH:MM"
	// format. The current time is in the UTC format. The HH value must
	// be 1 greater than the hh value. The values of mm and MM must be
	// the same and must be set to any of the following: 00, 15, 30, or
	// 45. Example value: 08:15-09:15 23:00-00:00.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime" tf:"start_time,omitempty"`
}

type DBInitParameters struct {

	// Specifies the database password. The value cannot be
	// empty and should contain 8 to 32 characters, including uppercase
	// and lowercase letters, digits, and the following special
	// characters: ~!@#%^*-_=+? You are advised to enter a strong
	// password to improve security, preventing security risks such as
	// brute force cracking.  Changing this parameter will create a new resource.
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Specifies the database port information. The MySQL database port
	// ranges from 1024 to 65535 (excluding 12017 and 33071, which are
	// occupied by the RDS system and cannot be used). The PostgreSQL
	// database port ranges from 2100 to 9500. The Microsoft SQL Server
	// database port can be 1433 or ranges from 2100 to 9500, excluding
	// 5355 and 5985. If this parameter is not set, the default value is
	// as follows: For MySQL, the default value is 3306. For PostgreSQL,
	// the default value is 5432. For Microsoft SQL Server, the default
	// value is 1433.  Changing this parameter will create a new resource.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Specifies the DB engine. Value: MySQL, PostgreSQL, SQLServer. Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the database version. MySQL databases support MySQL 5.6
	// and above. PostgreSQL databases support PostgreSQL 9.5 and above. Microsoft SQL Server
	// databases support 2014 SE, 2016 SE, and above.
	// Changing this parameter will create a new resource.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DBObservation struct {

	// Specifies the database port information. The MySQL database port
	// ranges from 1024 to 65535 (excluding 12017 and 33071, which are
	// occupied by the RDS system and cannot be used). The PostgreSQL
	// database port ranges from 2100 to 9500. The Microsoft SQL Server
	// database port can be 1433 or ranges from 2100 to 9500, excluding
	// 5355 and 5985. If this parameter is not set, the default value is
	// as follows: For MySQL, the default value is 3306. For PostgreSQL,
	// the default value is 5432. For Microsoft SQL Server, the default
	// value is 1433.  Changing this parameter will create a new resource.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Specifies the DB engine. Value: MySQL, PostgreSQL, SQLServer. Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Indicates the default user name of database.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`

	// Specifies the database version. MySQL databases support MySQL 5.6
	// and above. PostgreSQL databases support PostgreSQL 9.5 and above. Microsoft SQL Server
	// databases support 2014 SE, 2016 SE, and above.
	// Changing this parameter will create a new resource.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DBParameters struct {

	// Specifies the database password. The value cannot be
	// empty and should contain 8 to 32 characters, including uppercase
	// and lowercase letters, digits, and the following special
	// characters: ~!@#%^*-_=+? You are advised to enter a strong
	// password to improve security, preventing security risks such as
	// brute force cracking.  Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Specifies the database port information. The MySQL database port
	// ranges from 1024 to 65535 (excluding 12017 and 33071, which are
	// occupied by the RDS system and cannot be used). The PostgreSQL
	// database port ranges from 2100 to 9500. The Microsoft SQL Server
	// database port can be 1433 or ranges from 2100 to 9500, excluding
	// 5355 and 5985. If this parameter is not set, the default value is
	// as follows: For MySQL, the default value is 3306. For PostgreSQL,
	// the default value is 5432. For Microsoft SQL Server, the default
	// value is 1433.  Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Specifies the DB engine. Value: MySQL, PostgreSQL, SQLServer. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the database version. MySQL databases support MySQL 5.6
	// and above. PostgreSQL databases support PostgreSQL 9.5 and above. Microsoft SQL Server
	// databases support 2014 SE, 2016 SE, and above.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type InstanceV3InitParameters struct {

	// Specifies the AZ name. Changing this parameter will create a new resource.
	AvailabilityZone []*string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy []BackupStrategyInitParameters `json:"backupStrategy,omitempty" tf:"backup_strategy,omitempty"`

	// Reference to a SecgroupV2 in compute to populate securityGroupId.
	// +kubebuilder:validation:Optional
	ComputeSecurityGroupIDRefs *v1.Reference `json:"computeSecurityGroupIdRefs,omitempty" tf:"-"`

	// Selector for a SecgroupV2 in compute to populate securityGroupId.
	// +kubebuilder:validation:Optional
	ComputeSecurityGroupIDSelector *v1.Selector `json:"computeSecurityGroupIdSelector,omitempty" tf:"-"`

	// Specifies the database information. Structure is documented below. Changing this parameter will create a new resource.
	DB []DBInitParameters `json:"db,omitempty" tf:"db,omitempty"`

	// Specifies the specification code.
	// Use data source opentelekomcloud_rds_flavors_v3 to get a list of available flavor names.
	// Examples could be rds.pg.c2.medium or   rds.pg.c2.medium.ha for HA clusters.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Specifies the replication mode for the standby DB instance. For MySQL, the value
	// is async or semisync. For PostgreSQL, the value is async or sync. For Microsoft SQL Server, the value is sync.
	// Parameter is required for HA clusters.
	HaReplicationMode *string `json:"haReplicationMode,omitempty" tf:"ha_replication_mode,omitempty"`

	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	LowerCaseTableNames *string `json:"lowerCaseTableNames,omitempty" tf:"lower_case_table_names,omitempty"`

	// Specifies the DB instance name. The DB instance name of the same type
	// must be unique for the same tenant. The value must be 4 to 64
	// characters in length and start with a letter. It is case-sensitive
	// and can contain only letters, digits, hyphens (-), and underscores
	// (_).  Changing this parameter will create a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the parameter group ID.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/rds/v1alpha1.ParametergroupV3
	ParamGroupID *string `json:"paramGroupId,omitempty" tf:"param_group_id,omitempty"`

	// Reference to a ParametergroupV3 in rds to populate paramGroupId.
	// +kubebuilder:validation:Optional
	ParamGroupIDRef *v1.Reference `json:"paramGroupIdRef,omitempty" tf:"-"`

	// Selector for a ParametergroupV3 in rds to populate paramGroupId.
	// +kubebuilder:validation:Optional
	ParamGroupIDSelector *v1.Selector `json:"paramGroupIdSelector,omitempty" tf:"-"`

	// Map of additional configuration parameters. Values should be strings. Parameters set here
	// overrides values from configuration template (parameter group).
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Specifies floating IP to be assigned to the instance.
	// This should be a list with single element only.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.EIPV1
	// +crossplane:generate:reference:extractor=github.com/opentelekomcloud/provider-opentelekomcloud/config/common.ExtractEipAddress()
	// +crossplane:generate:reference:refFieldName=PublicIpsRefs
	// +crossplane:generate:reference:selectorFieldName=PublicIpsSelector
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// References to EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsRefs []v1.Reference `json:"publicIpsRefs,omitempty" tf:"-"`

	// Selector for a list of EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsSelector *v1.Selector `json:"publicIpsSelector,omitempty" tf:"-"`

	// Specifies whether to restore database to an instance described in current resource.
	// Structure is documented below.
	RestoreFromBackup []RestoreFromBackupInitParameters `json:"restoreFromBackup,omitempty" tf:"restore_from_backup,omitempty"`

	// Specifies the restoration information. By selecting this option a new RDS
	// instance will be created from separate instance backup. Structure is documented below.
	RestorePoint []RestorePointInitParameters `json:"restorePoint,omitempty" tf:"restore_point,omitempty"`

	// Specifies whether SSL should be enabled for MySql instances.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the security group which the RDS DB instance belongs to.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/compute/v1alpha1.SecgroupV2
	// +crossplane:generate:reference:refFieldName=ComputeSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=ComputeSecurityGroupIDSelector
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the subnet id. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.SubnetV1
	// +crossplane:generate:reference:extractor=github.com/opentelekomcloud/provider-opentelekomcloud/config/common.ExtractNetworkID()
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a SubnetV1 in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a SubnetV1 in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Tags key/value pairs to associate with the instance. Deprecated, please use
	// the tags instead.
	// +mapType=granular
	Tag map[string]*string `json:"tag,omitempty" tf:"tag,omitempty"`

	// Tags key/value pairs to associate with the instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the VPC ID. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.VpcV1
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VpcV1 in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VpcV1 in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Specifies the volume information. Structure is documented below.
	Volume []VolumeInitParameters `json:"volume,omitempty" tf:"volume,omitempty"`
}

type InstanceV3Observation struct {

	// Specifies the AZ name. Changing this parameter will create a new resource.
	AvailabilityZone []*string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Indicates the instance AZs.
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy []BackupStrategyObservation `json:"backupStrategy,omitempty" tf:"backup_strategy,omitempty"`

	// Indicates the creation time.
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// Specifies the database information. Structure is documented below. Changing this parameter will create a new resource.
	DB []DBObservation `json:"db,omitempty" tf:"db,omitempty"`

	// Specifies the specification code.
	// Use data source opentelekomcloud_rds_flavors_v3 to get a list of available flavor names.
	// Examples could be rds.pg.c2.medium or   rds.pg.c2.medium.ha for HA clusters.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Specifies the replication mode for the standby DB instance. For MySQL, the value
	// is async or semisync. For PostgreSQL, the value is async or sync. For Microsoft SQL Server, the value is sync.
	// Parameter is required for HA clusters.
	HaReplicationMode *string `json:"haReplicationMode,omitempty" tf:"ha_replication_mode,omitempty"`

	// Indicates the node ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	LowerCaseTableNames *string `json:"lowerCaseTableNames,omitempty" tf:"lower_case_table_names,omitempty"`

	// Specifies the DB instance name. The DB instance name of the same type
	// must be unique for the same tenant. The value must be 4 to 64
	// characters in length and start with a letter. It is case-sensitive
	// and can contain only letters, digits, hyphens (-), and underscores
	// (_).  Changing this parameter will create a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the instance nodes information. Structure is documented below.
	Nodes []NodesObservation `json:"nodes,omitempty" tf:"nodes,omitempty"`

	// Specifies the parameter group ID.
	ParamGroupID *string `json:"paramGroupId,omitempty" tf:"param_group_id,omitempty"`

	// Map of additional configuration parameters. Values should be strings. Parameters set here
	// overrides values from configuration template (parameter group).
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Indicates the private IP address list. It is a blank string until an
	// ECS is created.
	PrivateIps []*string `json:"privateIps,omitempty" tf:"private_ips,omitempty"`

	// Specifies floating IP to be assigned to the instance.
	// This should be a list with single element only.
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// Specifies whether to restore database to an instance described in current resource.
	// Structure is documented below.
	RestoreFromBackup []RestoreFromBackupObservation `json:"restoreFromBackup,omitempty" tf:"restore_from_backup,omitempty"`

	// Specifies the restoration information. By selecting this option a new RDS
	// instance will be created from separate instance backup. Structure is documented below.
	RestorePoint []RestorePointObservation `json:"restorePoint,omitempty" tf:"restore_point,omitempty"`

	// Indicates the backup ID in cases when instance was restored by using
	// restore_from_backup block.
	RestoredBackupID *string `json:"restoredBackupId,omitempty" tf:"restored_backup_id,omitempty"`

	// Specifies whether SSL should be enabled for MySql instances.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the security group which the RDS DB instance belongs to.
	// Changing this parameter will create a new resource.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the subnet id. Changing this parameter will create a new resource.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Tags key/value pairs to associate with the instance. Deprecated, please use
	// the tags instead.
	// +mapType=granular
	Tag map[string]*string `json:"tag,omitempty" tf:"tag,omitempty"`

	// Tags key/value pairs to associate with the instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the volume information. Structure is documented below.
	Volume []VolumeObservation `json:"volume,omitempty" tf:"volume,omitempty"`
}

type InstanceV3Parameters struct {

	// Specifies the AZ name. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AvailabilityZone []*string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Specifies the advanced backup policy. Structure is documented below.
	// +kubebuilder:validation:Optional
	BackupStrategy []BackupStrategyParameters `json:"backupStrategy,omitempty" tf:"backup_strategy,omitempty"`

	// Reference to a SecgroupV2 in compute to populate securityGroupId.
	// +kubebuilder:validation:Optional
	ComputeSecurityGroupIDRefs *v1.Reference `json:"computeSecurityGroupIdRefs,omitempty" tf:"-"`

	// Selector for a SecgroupV2 in compute to populate securityGroupId.
	// +kubebuilder:validation:Optional
	ComputeSecurityGroupIDSelector *v1.Selector `json:"computeSecurityGroupIdSelector,omitempty" tf:"-"`

	// Specifies the database information. Structure is documented below. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	DB []DBParameters `json:"db,omitempty" tf:"db,omitempty"`

	// Specifies the specification code.
	// Use data source opentelekomcloud_rds_flavors_v3 to get a list of available flavor names.
	// Examples could be rds.pg.c2.medium or   rds.pg.c2.medium.ha for HA clusters.
	// +kubebuilder:validation:Optional
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Specifies the replication mode for the standby DB instance. For MySQL, the value
	// is async or semisync. For PostgreSQL, the value is async or sync. For Microsoft SQL Server, the value is sync.
	// Parameter is required for HA clusters.
	// +kubebuilder:validation:Optional
	HaReplicationMode *string `json:"haReplicationMode,omitempty" tf:"ha_replication_mode,omitempty"`

	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	LowerCaseTableNames *string `json:"lowerCaseTableNames,omitempty" tf:"lower_case_table_names,omitempty"`

	// Specifies the DB instance name. The DB instance name of the same type
	// must be unique for the same tenant. The value must be 4 to 64
	// characters in length and start with a letter. It is case-sensitive
	// and can contain only letters, digits, hyphens (-), and underscores
	// (_).  Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the parameter group ID.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/rds/v1alpha1.ParametergroupV3
	// +kubebuilder:validation:Optional
	ParamGroupID *string `json:"paramGroupId,omitempty" tf:"param_group_id,omitempty"`

	// Reference to a ParametergroupV3 in rds to populate paramGroupId.
	// +kubebuilder:validation:Optional
	ParamGroupIDRef *v1.Reference `json:"paramGroupIdRef,omitempty" tf:"-"`

	// Selector for a ParametergroupV3 in rds to populate paramGroupId.
	// +kubebuilder:validation:Optional
	ParamGroupIDSelector *v1.Selector `json:"paramGroupIdSelector,omitempty" tf:"-"`

	// Map of additional configuration parameters. Values should be strings. Parameters set here
	// overrides values from configuration template (parameter group).
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Specifies floating IP to be assigned to the instance.
	// This should be a list with single element only.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.EIPV1
	// +crossplane:generate:reference:extractor=github.com/opentelekomcloud/provider-opentelekomcloud/config/common.ExtractEipAddress()
	// +crossplane:generate:reference:refFieldName=PublicIpsRefs
	// +crossplane:generate:reference:selectorFieldName=PublicIpsSelector
	// +kubebuilder:validation:Optional
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// References to EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsRefs []v1.Reference `json:"publicIpsRefs,omitempty" tf:"-"`

	// Selector for a list of EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsSelector *v1.Selector `json:"publicIpsSelector,omitempty" tf:"-"`

	// Specifies whether to restore database to an instance described in current resource.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RestoreFromBackup []RestoreFromBackupParameters `json:"restoreFromBackup,omitempty" tf:"restore_from_backup,omitempty"`

	// Specifies the restoration information. By selecting this option a new RDS
	// instance will be created from separate instance backup. Structure is documented below.
	// +kubebuilder:validation:Optional
	RestorePoint []RestorePointParameters `json:"restorePoint,omitempty" tf:"restore_point,omitempty"`

	// Specifies whether SSL should be enabled for MySql instances.
	// +kubebuilder:validation:Optional
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the security group which the RDS DB instance belongs to.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/compute/v1alpha1.SecgroupV2
	// +crossplane:generate:reference:refFieldName=ComputeSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=ComputeSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the subnet id. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.SubnetV1
	// +crossplane:generate:reference:extractor=github.com/opentelekomcloud/provider-opentelekomcloud/config/common.ExtractNetworkID()
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a SubnetV1 in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a SubnetV1 in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Tags key/value pairs to associate with the instance. Deprecated, please use
	// the tags instead.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tag map[string]*string `json:"tag,omitempty" tf:"tag,omitempty"`

	// Tags key/value pairs to associate with the instance.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the VPC ID. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.VpcV1
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VpcV1 in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VpcV1 in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Specifies the volume information. Structure is documented below.
	// +kubebuilder:validation:Optional
	Volume []VolumeParameters `json:"volume,omitempty" tf:"volume,omitempty"`
}

type NodesInitParameters struct {
}

type NodesObservation struct {

	// Indicates the AZ.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Indicates the node ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the node name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the node type. The value can be master or slave, indicating the primary node or standby node respectively.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// Indicates the node status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type NodesParameters struct {
}

type RestoreFromBackupInitParameters struct {

	// Specifies the ID of the backup used to restore data.
	// This parameter must be specified when the backup file is used for restoration.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp.
	// The unit is millisecond and the time zone is UTC.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// Specifies the source instance ID.
	SourceInstanceID *string `json:"sourceInstanceId,omitempty" tf:"source_instance_id,omitempty"`

	// Specifies the restoration mode. The values can be:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RestoreFromBackupObservation struct {

	// Specifies the ID of the backup used to restore data.
	// This parameter must be specified when the backup file is used for restoration.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp.
	// The unit is millisecond and the time zone is UTC.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// Specifies the source instance ID.
	SourceInstanceID *string `json:"sourceInstanceId,omitempty" tf:"source_instance_id,omitempty"`

	// Specifies the restoration mode. The values can be:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RestoreFromBackupParameters struct {

	// Specifies the ID of the backup used to restore data.
	// This parameter must be specified when the backup file is used for restoration.
	// +kubebuilder:validation:Optional
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp.
	// The unit is millisecond and the time zone is UTC.
	// +kubebuilder:validation:Optional
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// Specifies the source instance ID.
	// +kubebuilder:validation:Optional
	SourceInstanceID *string `json:"sourceInstanceId" tf:"source_instance_id,omitempty"`

	// Specifies the restoration mode. The values can be:
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RestorePointInitParameters struct {

	// Specifies the ID of the backup used to restore data.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the original DB instance ID.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp.
	// The unit is millisecond and the time zone is UTC.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`
}

type RestorePointObservation struct {

	// Specifies the ID of the backup used to restore data.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the original DB instance ID.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp.
	// The unit is millisecond and the time zone is UTC.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`
}

type RestorePointParameters struct {

	// Specifies the ID of the backup used to restore data.
	// +kubebuilder:validation:Optional
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the original DB instance ID.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId" tf:"instance_id,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp.
	// The unit is millisecond and the time zone is UTC.
	// +kubebuilder:validation:Optional
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`
}

type VolumeInitParameters struct {

	// Specifies the key ID for disk encryption. Changing this parameter will create a new resource.
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Specifies the upper limit of automatic expansion of storage, in GB.
	LimitSize *float64 `json:"limitSize,omitempty" tf:"limit_size,omitempty"`

	// Specifies the volume size. Its value range is from 40 GB to 4000
	// GB. The value must be a multiple of 10. Changing this resize the volume.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Specifies the threshold to trigger automatic expansion.
	// If the available storage drops to this threshold or 10 GB, the automatic expansion is triggered.
	// The valid values are as follows:
	TriggerThreshold *float64 `json:"triggerThreshold,omitempty" tf:"trigger_threshold,omitempty"`

	// Specifies the volume type. Its value can be any of the following
	// and is case-sensitive: COMMON: indicates the SATA type.
	// ULTRAHIGH: indicates the SSD type.  Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VolumeObservation struct {

	// Specifies the key ID for disk encryption. Changing this parameter will create a new resource.
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Specifies the upper limit of automatic expansion of storage, in GB.
	LimitSize *float64 `json:"limitSize,omitempty" tf:"limit_size,omitempty"`

	// Specifies the volume size. Its value range is from 40 GB to 4000
	// GB. The value must be a multiple of 10. Changing this resize the volume.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Specifies the threshold to trigger automatic expansion.
	// If the available storage drops to this threshold or 10 GB, the automatic expansion is triggered.
	// The valid values are as follows:
	TriggerThreshold *float64 `json:"triggerThreshold,omitempty" tf:"trigger_threshold,omitempty"`

	// Specifies the volume type. Its value can be any of the following
	// and is case-sensitive: COMMON: indicates the SATA type.
	// ULTRAHIGH: indicates the SSD type.  Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VolumeParameters struct {

	// Specifies the key ID for disk encryption. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Specifies the upper limit of automatic expansion of storage, in GB.
	// +kubebuilder:validation:Optional
	LimitSize *float64 `json:"limitSize,omitempty" tf:"limit_size,omitempty"`

	// Specifies the volume size. Its value range is from 40 GB to 4000
	// GB. The value must be a multiple of 10. Changing this resize the volume.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size" tf:"size,omitempty"`

	// Specifies the threshold to trigger automatic expansion.
	// If the available storage drops to this threshold or 10 GB, the automatic expansion is triggered.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	TriggerThreshold *float64 `json:"triggerThreshold,omitempty" tf:"trigger_threshold,omitempty"`

	// Specifies the volume type. Its value can be any of the following
	// and is case-sensitive: COMMON: indicates the SATA type.
	// ULTRAHIGH: indicates the SSD type.  Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// InstanceV3Spec defines the desired state of InstanceV3
type InstanceV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceV3InitParameters `json:"initProvider,omitempty"`
}

// InstanceV3Status defines the observed state of InstanceV3.
type InstanceV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// InstanceV3 is the Schema for the InstanceV3s API. Manages an RDS Instance v3 resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type InstanceV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.availabilityZone) || (has(self.initProvider) && has(self.initProvider.availabilityZone))",message="spec.forProvider.availabilityZone is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.db) || (has(self.initProvider) && has(self.initProvider.db))",message="spec.forProvider.db is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.flavor) || (has(self.initProvider) && has(self.initProvider.flavor))",message="spec.forProvider.flavor is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.volume) || (has(self.initProvider) && has(self.initProvider.volume))",message="spec.forProvider.volume is a required parameter"
	Spec   InstanceV3Spec   `json:"spec"`
	Status InstanceV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceV3List contains a list of InstanceV3s
type InstanceV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []InstanceV3 `json:"items"`
}

// Repository type metadata.
var (
	InstanceV3_Kind             = "InstanceV3"
	InstanceV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: InstanceV3_Kind}.String()
	InstanceV3_KindAPIVersion   = InstanceV3_Kind + "." + CRDGroupVersion.String()
	InstanceV3_GroupVersionKind = CRDGroupVersion.WithKind(InstanceV3_Kind)
)

func init() {
	SchemeBuilder.Register(&InstanceV3{}, &InstanceV3List{})
}
