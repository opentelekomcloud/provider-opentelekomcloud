/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupV3InitParameters struct {

	// Specifies a list of self-built Microsoft SQL Server databases that are partially backed up.
	// (Only Microsoft SQL Server support partial backups.)
	Databases []DatabasesInitParameters `json:"databases,omitempty" tf:"databases,omitempty"`

	// Specifies the backup description.
	// It contains a maximum of 256 characters and cannot contain the following special characters: >!<"&'=
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the RDS instance to which the backup belongs.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/rds/v1alpha1.InstanceV3
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a InstanceV3 in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a InstanceV3 in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The name of the backup.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the backup type. Value:
	// - auto: automated full backup
	// - manual: manual full backup
	// - fragment: differential full backup
	// - incremental: automated incremental backup
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type BackupV3Observation struct {

	// The ID of the backup.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Indicates the backup start time in the "yyyy-mm-ddThh:mm:ssZ" format,
	// where "T" indicates the start time of the time field, and "Z" indicates the time zone offset.
	BeginTime *string `json:"beginTime,omitempty" tf:"begin_time,omitempty"`

	// Specifies a list of self-built Microsoft SQL Server databases that are partially backed up.
	// (Only Microsoft SQL Server support partial backups.)
	Databases []DatabasesObservation `json:"databases,omitempty" tf:"databases,omitempty"`

	// Specifies the backup description.
	// It contains a maximum of 256 characters and cannot contain the following special characters: >!<"&'=
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the backup.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the RDS instance to which the backup belongs.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The name of the backup.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Indicates the backup status. Value:
	// - BUILDING: Backup in progress
	// - COMPLETED: Backup completed
	// - FAILED: Backup failed
	// - DELETING: Backup being deleted
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Indicates the backup type. Value:
	// - auto: automated full backup
	// - manual: manual full backup
	// - fragment: differential full backup
	// - incremental: automated incremental backup
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type BackupV3Parameters struct {

	// Specifies a list of self-built Microsoft SQL Server databases that are partially backed up.
	// (Only Microsoft SQL Server support partial backups.)
	// +kubebuilder:validation:Optional
	Databases []DatabasesParameters `json:"databases,omitempty" tf:"databases,omitempty"`

	// Specifies the backup description.
	// It contains a maximum of 256 characters and cannot contain the following special characters: >!<"&'=
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the RDS instance to which the backup belongs.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/rds/v1alpha1.InstanceV3
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a InstanceV3 in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a InstanceV3 in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The name of the backup.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the backup type. Value:
	// - auto: automated full backup
	// - manual: manual full backup
	// - fragment: differential full backup
	// - incremental: automated incremental backup
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DatabasesInitParameters struct {

	// The name of the backup.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DatabasesObservation struct {

	// The name of the backup.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DatabasesParameters struct {

	// The name of the backup.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

// BackupV3Spec defines the desired state of BackupV3
type BackupV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BackupV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BackupV3InitParameters `json:"initProvider,omitempty"`
}

// BackupV3Status defines the observed state of BackupV3.
type BackupV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BackupV3 is the Schema for the BackupV3s API. Manages an RDS Backup resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type BackupV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   BackupV3Spec   `json:"spec"`
	Status BackupV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupV3List contains a list of BackupV3s
type BackupV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupV3 `json:"items"`
}

// Repository type metadata.
var (
	BackupV3_Kind             = "BackupV3"
	BackupV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupV3_Kind}.String()
	BackupV3_KindAPIVersion   = BackupV3_Kind + "." + CRDGroupVersion.String()
	BackupV3_GroupVersionKind = CRDGroupVersion.WithKind(BackupV3_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupV3{}, &BackupV3List{})
}
