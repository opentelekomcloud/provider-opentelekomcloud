/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ReadReplicaV3DBInitParameters struct {
}

type ReadReplicaV3DBObservation struct {

	// Indicates the database port information.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Indicates the DB engine. Value: MySQL, PostgreSQL, SQLServer
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Indicates the default user name of database.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`

	// Indicates the database version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ReadReplicaV3DBParameters struct {
}

type ReadReplicaV3InitParameters struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	FlavorRef *string `json:"flavorRef,omitempty" tf:"flavor_ref,omitempty"`

	// Specifies the DB replica instance name. The DB instance name of the same type must be unique for the same
	// tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores  (_). Changing this parameter will create a new
	// resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies floating IP to be assigned to the instance.
	// This should be a list with single element only.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.EIPV1
	// +crossplane:generate:reference:extractor=github.com/opentelekomcloud/provider-opentelekomcloud/config/common.ExtractEipAddress()
	// +crossplane:generate:reference:refFieldName=PublicIpsRefs
	// +crossplane:generate:reference:selectorFieldName=PublicIpsSelector
	// +listType=set
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// References to EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsRefs []v1.Reference `json:"publicIpsRefs,omitempty" tf:"-"`

	// Selector for a list of EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsSelector *v1.Selector `json:"publicIpsSelector,omitempty" tf:"-"`

	// Specifies the region of the replica instance. Changing this parameter will create a new
	// resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies ID of the replicated instance. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/rds/v1alpha1.InstanceV3
	ReplicaOfID *string `json:"replicaOfId,omitempty" tf:"replica_of_id,omitempty"`

	// Reference to a InstanceV3 in rds to populate replicaOfId.
	// +kubebuilder:validation:Optional
	ReplicaOfIDRef *v1.Reference `json:"replicaOfIdRef,omitempty" tf:"-"`

	// Selector for a InstanceV3 in rds to populate replicaOfId.
	// +kubebuilder:validation:Optional
	ReplicaOfIDSelector *v1.Selector `json:"replicaOfIdSelector,omitempty" tf:"-"`

	// Specifies whether SSL should be enabled for MySql instances.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the volume information. Structure is documented below.
	Volume []ReadReplicaV3VolumeInitParameters `json:"volume,omitempty" tf:"volume,omitempty"`
}

type ReadReplicaV3Observation struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Indicates the database information. Structure is documented below.
	DB []ReadReplicaV3DBObservation `json:"db,omitempty" tf:"db,omitempty"`

	FlavorRef *string `json:"flavorRef,omitempty" tf:"flavor_ref,omitempty"`

	// ID of the read replica instance.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the DB replica instance name. The DB instance name of the same type must be unique for the same
	// tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores  (_). Changing this parameter will create a new
	// resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the private IP address list.
	// +listType=set
	PrivateIps []*string `json:"privateIps,omitempty" tf:"private_ips,omitempty"`

	// Specifies floating IP to be assigned to the instance.
	// This should be a list with single element only.
	// +listType=set
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// Specifies the region of the replica instance. Changing this parameter will create a new
	// resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies ID of the replicated instance. Changing this parameter will create a new resource.
	ReplicaOfID *string `json:"replicaOfId,omitempty" tf:"replica_of_id,omitempty"`

	// Specifies whether SSL should be enabled for MySql instances.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Indicates the security group which the replica instance belongs to.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Indicates the subnet id (OpenStack network ID).
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Indicates the VPC ID (OpenStack router ID).
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the volume information. Structure is documented below.
	Volume []ReadReplicaV3VolumeObservation `json:"volume,omitempty" tf:"volume,omitempty"`
}

type ReadReplicaV3Parameters struct {

	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// +kubebuilder:validation:Optional
	FlavorRef *string `json:"flavorRef,omitempty" tf:"flavor_ref,omitempty"`

	// Specifies the DB replica instance name. The DB instance name of the same type must be unique for the same
	// tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores  (_). Changing this parameter will create a new
	// resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies floating IP to be assigned to the instance.
	// This should be a list with single element only.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/vpc/v1alpha1.EIPV1
	// +crossplane:generate:reference:extractor=github.com/opentelekomcloud/provider-opentelekomcloud/config/common.ExtractEipAddress()
	// +crossplane:generate:reference:refFieldName=PublicIpsRefs
	// +crossplane:generate:reference:selectorFieldName=PublicIpsSelector
	// +kubebuilder:validation:Optional
	// +listType=set
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// References to EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsRefs []v1.Reference `json:"publicIpsRefs,omitempty" tf:"-"`

	// Selector for a list of EIPV1 in vpc to populate publicIps.
	// +kubebuilder:validation:Optional
	PublicIpsSelector *v1.Selector `json:"publicIpsSelector,omitempty" tf:"-"`

	// Specifies the region of the replica instance. Changing this parameter will create a new
	// resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies ID of the replicated instance. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/opentelekomcloud/provider-opentelekomcloud/apis/rds/v1alpha1.InstanceV3
	// +kubebuilder:validation:Optional
	ReplicaOfID *string `json:"replicaOfId,omitempty" tf:"replica_of_id,omitempty"`

	// Reference to a InstanceV3 in rds to populate replicaOfId.
	// +kubebuilder:validation:Optional
	ReplicaOfIDRef *v1.Reference `json:"replicaOfIdRef,omitempty" tf:"-"`

	// Selector for a InstanceV3 in rds to populate replicaOfId.
	// +kubebuilder:validation:Optional
	ReplicaOfIDSelector *v1.Selector `json:"replicaOfIdSelector,omitempty" tf:"-"`

	// Specifies whether SSL should be enabled for MySql instances.
	// +kubebuilder:validation:Optional
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the volume information. Structure is documented below.
	// +kubebuilder:validation:Optional
	Volume []ReadReplicaV3VolumeParameters `json:"volume,omitempty" tf:"volume,omitempty"`
}

type ReadReplicaV3VolumeInitParameters struct {

	// Specifies the key ID for disk encryption. Changing this parameter will create a new
	// resource.
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Specifies the volume type. Changing this parameter will create a new resource. Its value can be any of the
	// following and is case-sensitive.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ReadReplicaV3VolumeObservation struct {

	// Specifies the key ID for disk encryption. Changing this parameter will create a new
	// resource.
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Indicates the volume size. Same as replicated instance disk size.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Specifies the volume type. Changing this parameter will create a new resource. Its value can be any of the
	// following and is case-sensitive.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ReadReplicaV3VolumeParameters struct {

	// Specifies the key ID for disk encryption. Changing this parameter will create a new
	// resource.
	// +kubebuilder:validation:Optional
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Specifies the volume type. Changing this parameter will create a new resource. Its value can be any of the
	// following and is case-sensitive.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// ReadReplicaV3Spec defines the desired state of ReadReplicaV3
type ReadReplicaV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReadReplicaV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ReadReplicaV3InitParameters `json:"initProvider,omitempty"`
}

// ReadReplicaV3Status defines the observed state of ReadReplicaV3.
type ReadReplicaV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReadReplicaV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ReadReplicaV3 is the Schema for the ReadReplicaV3s API. Manages an RDS Read Replica resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ReadReplicaV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.flavorRef) || (has(self.initProvider) && has(self.initProvider.flavorRef))",message="spec.forProvider.flavorRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.volume) || (has(self.initProvider) && has(self.initProvider.volume))",message="spec.forProvider.volume is a required parameter"
	Spec   ReadReplicaV3Spec   `json:"spec"`
	Status ReadReplicaV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReadReplicaV3List contains a list of ReadReplicaV3s
type ReadReplicaV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReadReplicaV3 `json:"items"`
}

// Repository type metadata.
var (
	ReadReplicaV3_Kind             = "ReadReplicaV3"
	ReadReplicaV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReadReplicaV3_Kind}.String()
	ReadReplicaV3_KindAPIVersion   = ReadReplicaV3_Kind + "." + CRDGroupVersion.String()
	ReadReplicaV3_GroupVersionKind = CRDGroupVersion.WithKind(ReadReplicaV3_Kind)
)

func init() {
	SchemeBuilder.Register(&ReadReplicaV3{}, &ReadReplicaV3List{})
}
