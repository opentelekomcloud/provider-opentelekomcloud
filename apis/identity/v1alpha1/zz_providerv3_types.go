/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProviderV3InitParameters struct {

	// A description of the provider.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether an identity provider is enabled. Default value is false.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name (ID) of the provider. Changing this creates a new provider.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ProviderV3Observation struct {

	// A description of the provider.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether an identity provider is enabled. Default value is false.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +mapType=granular
	Links map[string]*string `json:"links,omitempty" tf:"links,omitempty"`

	// The name (ID) of the provider. Changing this creates a new provider.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +listType=set
	RemoteIds []*string `json:"remoteIds,omitempty" tf:"remote_ids,omitempty"`
}

type ProviderV3Parameters struct {

	// A description of the provider.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether an identity provider is enabled. Default value is false.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name (ID) of the provider. Changing this creates a new provider.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// ProviderV3Spec defines the desired state of ProviderV3
type ProviderV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProviderV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ProviderV3InitParameters `json:"initProvider,omitempty"`
}

// ProviderV3Status defines the observed state of ProviderV3.
type ProviderV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProviderV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ProviderV3 is the Schema for the ProviderV3s API. Manages a IAM Provider v3 resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ProviderV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ProviderV3Spec   `json:"spec"`
	Status ProviderV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProviderV3List contains a list of ProviderV3s
type ProviderV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProviderV3 `json:"items"`
}

// Repository type metadata.
var (
	ProviderV3_Kind             = "ProviderV3"
	ProviderV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProviderV3_Kind}.String()
	ProviderV3_KindAPIVersion   = ProviderV3_Kind + "." + CRDGroupVersion.String()
	ProviderV3_GroupVersionKind = CRDGroupVersion.WithKind(ProviderV3_Kind)
)

func init() {
	SchemeBuilder.Register(&ProviderV3{}, &ProviderV3List{})
}
