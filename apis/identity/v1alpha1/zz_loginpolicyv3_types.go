/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LoginPolicyV3InitParameters struct {

	// = 0
	AccountValidityPeriod *float64 `json:"accountValidityPeriod,omitempty" tf:"account_validity_period,omitempty"`

	// = ""
	CustomInfoForLogin *string `json:"customInfoForLogin,omitempty" tf:"custom_info_for_login,omitempty"`

	// = 15
	LockoutDuration *float64 `json:"lockoutDuration,omitempty" tf:"lockout_duration,omitempty"`

	// = 3
	LoginFailedTimes *float64 `json:"loginFailedTimes,omitempty" tf:"login_failed_times,omitempty"`

	// = 60
	PeriodWithLoginFailures *float64 `json:"periodWithLoginFailures,omitempty" tf:"period_with_login_failures,omitempty"`

	// = 1395
	SessionTimeout *float64 `json:"sessionTimeout,omitempty" tf:"session_timeout,omitempty"`

	// = false
	ShowRecentLoginInfo *bool `json:"showRecentLoginInfo,omitempty" tf:"show_recent_login_info,omitempty"`
}

type LoginPolicyV3Observation struct {

	// = 0
	AccountValidityPeriod *float64 `json:"accountValidityPeriod,omitempty" tf:"account_validity_period,omitempty"`

	// = ""
	CustomInfoForLogin *string `json:"customInfoForLogin,omitempty" tf:"custom_info_for_login,omitempty"`

	// The ID of account login policy, which is the same as the domain ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// = 15
	LockoutDuration *float64 `json:"lockoutDuration,omitempty" tf:"lockout_duration,omitempty"`

	// = 3
	LoginFailedTimes *float64 `json:"loginFailedTimes,omitempty" tf:"login_failed_times,omitempty"`

	// = 60
	PeriodWithLoginFailures *float64 `json:"periodWithLoginFailures,omitempty" tf:"period_with_login_failures,omitempty"`

	// = 1395
	SessionTimeout *float64 `json:"sessionTimeout,omitempty" tf:"session_timeout,omitempty"`

	// = false
	ShowRecentLoginInfo *bool `json:"showRecentLoginInfo,omitempty" tf:"show_recent_login_info,omitempty"`
}

type LoginPolicyV3Parameters struct {

	// = 0
	// +kubebuilder:validation:Optional
	AccountValidityPeriod *float64 `json:"accountValidityPeriod,omitempty" tf:"account_validity_period,omitempty"`

	// = ""
	// +kubebuilder:validation:Optional
	CustomInfoForLogin *string `json:"customInfoForLogin,omitempty" tf:"custom_info_for_login,omitempty"`

	// = 15
	// +kubebuilder:validation:Optional
	LockoutDuration *float64 `json:"lockoutDuration,omitempty" tf:"lockout_duration,omitempty"`

	// = 3
	// +kubebuilder:validation:Optional
	LoginFailedTimes *float64 `json:"loginFailedTimes,omitempty" tf:"login_failed_times,omitempty"`

	// = 60
	// +kubebuilder:validation:Optional
	PeriodWithLoginFailures *float64 `json:"periodWithLoginFailures,omitempty" tf:"period_with_login_failures,omitempty"`

	// = 1395
	// +kubebuilder:validation:Optional
	SessionTimeout *float64 `json:"sessionTimeout,omitempty" tf:"session_timeout,omitempty"`

	// = false
	// +kubebuilder:validation:Optional
	ShowRecentLoginInfo *bool `json:"showRecentLoginInfo,omitempty" tf:"show_recent_login_info,omitempty"`
}

// LoginPolicyV3Spec defines the desired state of LoginPolicyV3
type LoginPolicyV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LoginPolicyV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LoginPolicyV3InitParameters `json:"initProvider,omitempty"`
}

// LoginPolicyV3Status defines the observed state of LoginPolicyV3.
type LoginPolicyV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LoginPolicyV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// LoginPolicyV3 is the Schema for the LoginPolicyV3s API. Manages a IAM Login Policy resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type LoginPolicyV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LoginPolicyV3Spec   `json:"spec"`
	Status            LoginPolicyV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LoginPolicyV3List contains a list of LoginPolicyV3s
type LoginPolicyV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoginPolicyV3 `json:"items"`
}

// Repository type metadata.
var (
	LoginPolicyV3_Kind             = "LoginPolicyV3"
	LoginPolicyV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LoginPolicyV3_Kind}.String()
	LoginPolicyV3_KindAPIVersion   = LoginPolicyV3_Kind + "." + CRDGroupVersion.String()
	LoginPolicyV3_GroupVersionKind = CRDGroupVersion.WithKind(LoginPolicyV3_Kind)
)

func init() {
	SchemeBuilder.Register(&LoginPolicyV3{}, &LoginPolicyV3List{})
}
