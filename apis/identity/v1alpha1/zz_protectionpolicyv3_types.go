/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProtectionPolicyV3InitParameters struct {

	// = false
	EnableOperationProtectionPolicy *bool `json:"enableOperationProtectionPolicy,omitempty" tf:"enable_operation_protection_policy,omitempty"`
}

type ProtectionPolicyV3Observation struct {

	// = false
	EnableOperationProtectionPolicy *bool `json:"enableOperationProtectionPolicy,omitempty" tf:"enable_operation_protection_policy,omitempty"`

	// The ID of account protection policy, which is the same as the domain ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ProtectionPolicyV3Parameters struct {

	// = false
	// +kubebuilder:validation:Optional
	EnableOperationProtectionPolicy *bool `json:"enableOperationProtectionPolicy,omitempty" tf:"enable_operation_protection_policy,omitempty"`
}

// ProtectionPolicyV3Spec defines the desired state of ProtectionPolicyV3
type ProtectionPolicyV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProtectionPolicyV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ProtectionPolicyV3InitParameters `json:"initProvider,omitempty"`
}

// ProtectionPolicyV3Status defines the observed state of ProtectionPolicyV3.
type ProtectionPolicyV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProtectionPolicyV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ProtectionPolicyV3 is the Schema for the ProtectionPolicyV3s API. Manages a IAM Protection Policy resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type ProtectionPolicyV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProtectionPolicyV3Spec   `json:"spec"`
	Status            ProtectionPolicyV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProtectionPolicyV3List contains a list of ProtectionPolicyV3s
type ProtectionPolicyV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProtectionPolicyV3 `json:"items"`
}

// Repository type metadata.
var (
	ProtectionPolicyV3_Kind             = "ProtectionPolicyV3"
	ProtectionPolicyV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProtectionPolicyV3_Kind}.String()
	ProtectionPolicyV3_KindAPIVersion   = ProtectionPolicyV3_Kind + "." + CRDGroupVersion.String()
	ProtectionPolicyV3_GroupVersionKind = CRDGroupVersion.WithKind(ProtectionPolicyV3_Kind)
)

func init() {
	SchemeBuilder.Register(&ProtectionPolicyV3{}, &ProtectionPolicyV3List{})
}
