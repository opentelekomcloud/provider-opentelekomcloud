// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PasswordPolicyV3InitParameters struct {

	// = 0
	MaximumConsecutiveIdenticalChars *float64 `json:"maximumConsecutiveIdenticalChars,omitempty" tf:"maximum_consecutive_identical_chars,omitempty"`

	// = 0
	MinimumPasswordAge *float64 `json:"minimumPasswordAge,omitempty" tf:"minimum_password_age,omitempty"`

	// = 8
	MinimumPasswordLength *float64 `json:"minimumPasswordLength,omitempty" tf:"minimum_password_length,omitempty"`

	// = 1
	NumberOfRecentPasswordsDisallowed *float64 `json:"numberOfRecentPasswordsDisallowed,omitempty" tf:"number_of_recent_passwords_disallowed,omitempty"`

	// = true
	PasswordNotUsernameOrInvert *bool `json:"passwordNotUsernameOrInvert,omitempty" tf:"password_not_username_or_invert,omitempty"`

	// = 0
	PasswordValidityPeriod *float64 `json:"passwordValidityPeriod,omitempty" tf:"password_validity_period,omitempty"`
}

type PasswordPolicyV3Observation struct {

	// The ID of account password policy, which is the same as the domain ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// = 0
	MaximumConsecutiveIdenticalChars *float64 `json:"maximumConsecutiveIdenticalChars,omitempty" tf:"maximum_consecutive_identical_chars,omitempty"`

	// The maximum number of characters that a password can contain.
	MaximumPasswordLength *float64 `json:"maximumPasswordLength,omitempty" tf:"maximum_password_length,omitempty"`

	// = 0
	MinimumPasswordAge *float64 `json:"minimumPasswordAge,omitempty" tf:"minimum_password_age,omitempty"`

	// = 8
	MinimumPasswordLength *float64 `json:"minimumPasswordLength,omitempty" tf:"minimum_password_length,omitempty"`

	// = 1
	NumberOfRecentPasswordsDisallowed *float64 `json:"numberOfRecentPasswordsDisallowed,omitempty" tf:"number_of_recent_passwords_disallowed,omitempty"`

	// = true
	PasswordNotUsernameOrInvert *bool `json:"passwordNotUsernameOrInvert,omitempty" tf:"password_not_username_or_invert,omitempty"`

	PasswordRequirements *string `json:"passwordRequirements,omitempty" tf:"password_requirements,omitempty"`

	// = 0
	PasswordValidityPeriod *float64 `json:"passwordValidityPeriod,omitempty" tf:"password_validity_period,omitempty"`
}

type PasswordPolicyV3Parameters struct {

	// = 0
	// +kubebuilder:validation:Optional
	MaximumConsecutiveIdenticalChars *float64 `json:"maximumConsecutiveIdenticalChars,omitempty" tf:"maximum_consecutive_identical_chars,omitempty"`

	// = 0
	// +kubebuilder:validation:Optional
	MinimumPasswordAge *float64 `json:"minimumPasswordAge,omitempty" tf:"minimum_password_age,omitempty"`

	// = 8
	// +kubebuilder:validation:Optional
	MinimumPasswordLength *float64 `json:"minimumPasswordLength,omitempty" tf:"minimum_password_length,omitempty"`

	// = 1
	// +kubebuilder:validation:Optional
	NumberOfRecentPasswordsDisallowed *float64 `json:"numberOfRecentPasswordsDisallowed,omitempty" tf:"number_of_recent_passwords_disallowed,omitempty"`

	// = true
	// +kubebuilder:validation:Optional
	PasswordNotUsernameOrInvert *bool `json:"passwordNotUsernameOrInvert,omitempty" tf:"password_not_username_or_invert,omitempty"`

	// = 0
	// +kubebuilder:validation:Optional
	PasswordValidityPeriod *float64 `json:"passwordValidityPeriod,omitempty" tf:"password_validity_period,omitempty"`
}

// PasswordPolicyV3Spec defines the desired state of PasswordPolicyV3
type PasswordPolicyV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PasswordPolicyV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PasswordPolicyV3InitParameters `json:"initProvider,omitempty"`
}

// PasswordPolicyV3Status defines the observed state of PasswordPolicyV3.
type PasswordPolicyV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PasswordPolicyV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PasswordPolicyV3 is the Schema for the PasswordPolicyV3s API. Manages a IAM Password Policy resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type PasswordPolicyV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PasswordPolicyV3Spec   `json:"spec"`
	Status            PasswordPolicyV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PasswordPolicyV3List contains a list of PasswordPolicyV3s
type PasswordPolicyV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PasswordPolicyV3 `json:"items"`
}

// Repository type metadata.
var (
	PasswordPolicyV3_Kind             = "PasswordPolicyV3"
	PasswordPolicyV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PasswordPolicyV3_Kind}.String()
	PasswordPolicyV3_KindAPIVersion   = PasswordPolicyV3_Kind + "." + CRDGroupVersion.String()
	PasswordPolicyV3_GroupVersionKind = CRDGroupVersion.WithKind(PasswordPolicyV3_Kind)
)

func init() {
	SchemeBuilder.Register(&PasswordPolicyV3{}, &PasswordPolicyV3List{})
}
