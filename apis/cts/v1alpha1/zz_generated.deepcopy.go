//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventNotificationV3) DeepCopyInto(out *EventNotificationV3) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventNotificationV3.
func (in *EventNotificationV3) DeepCopy() *EventNotificationV3 {
	if in == nil {
		return nil
	}
	out := new(EventNotificationV3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventNotificationV3) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventNotificationV3InitParameters) DeepCopyInto(out *EventNotificationV3InitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationName != nil {
		in, out := &in.NotificationName, &out.NotificationName
		*out = new(string)
		**out = **in
	}
	if in.NotifyUserList != nil {
		in, out := &in.NotifyUserList, &out.NotifyUserList
		*out = make([]NotifyUserListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperationType != nil {
		in, out := &in.OperationType, &out.OperationType
		*out = new(string)
		**out = **in
	}
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]OperationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventNotificationV3InitParameters.
func (in *EventNotificationV3InitParameters) DeepCopy() *EventNotificationV3InitParameters {
	if in == nil {
		return nil
	}
	out := new(EventNotificationV3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventNotificationV3List) DeepCopyInto(out *EventNotificationV3List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EventNotificationV3, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventNotificationV3List.
func (in *EventNotificationV3List) DeepCopy() *EventNotificationV3List {
	if in == nil {
		return nil
	}
	out := new(EventNotificationV3List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventNotificationV3List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventNotificationV3Observation) DeepCopyInto(out *EventNotificationV3Observation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(float64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NotificationID != nil {
		in, out := &in.NotificationID, &out.NotificationID
		*out = new(string)
		**out = **in
	}
	if in.NotificationName != nil {
		in, out := &in.NotificationName, &out.NotificationName
		*out = new(string)
		**out = **in
	}
	if in.NotificationType != nil {
		in, out := &in.NotificationType, &out.NotificationType
		*out = new(string)
		**out = **in
	}
	if in.NotifyUserList != nil {
		in, out := &in.NotifyUserList, &out.NotifyUserList
		*out = make([]NotifyUserListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperationType != nil {
		in, out := &in.OperationType, &out.OperationType
		*out = new(string)
		**out = **in
	}
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]OperationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventNotificationV3Observation.
func (in *EventNotificationV3Observation) DeepCopy() *EventNotificationV3Observation {
	if in == nil {
		return nil
	}
	out := new(EventNotificationV3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventNotificationV3Parameters) DeepCopyInto(out *EventNotificationV3Parameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationName != nil {
		in, out := &in.NotificationName, &out.NotificationName
		*out = new(string)
		**out = **in
	}
	if in.NotifyUserList != nil {
		in, out := &in.NotifyUserList, &out.NotifyUserList
		*out = make([]NotifyUserListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperationType != nil {
		in, out := &in.OperationType, &out.OperationType
		*out = new(string)
		**out = **in
	}
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]OperationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventNotificationV3Parameters.
func (in *EventNotificationV3Parameters) DeepCopy() *EventNotificationV3Parameters {
	if in == nil {
		return nil
	}
	out := new(EventNotificationV3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventNotificationV3Spec) DeepCopyInto(out *EventNotificationV3Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventNotificationV3Spec.
func (in *EventNotificationV3Spec) DeepCopy() *EventNotificationV3Spec {
	if in == nil {
		return nil
	}
	out := new(EventNotificationV3Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventNotificationV3Status) DeepCopyInto(out *EventNotificationV3Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventNotificationV3Status.
func (in *EventNotificationV3Status) DeepCopy() *EventNotificationV3Status {
	if in == nil {
		return nil
	}
	out := new(EventNotificationV3Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifyUserListInitParameters) DeepCopyInto(out *NotifyUserListInitParameters) {
	*out = *in
	if in.UserGroup != nil {
		in, out := &in.UserGroup, &out.UserGroup
		*out = new(string)
		**out = **in
	}
	if in.UserList != nil {
		in, out := &in.UserList, &out.UserList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifyUserListInitParameters.
func (in *NotifyUserListInitParameters) DeepCopy() *NotifyUserListInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotifyUserListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifyUserListObservation) DeepCopyInto(out *NotifyUserListObservation) {
	*out = *in
	if in.UserGroup != nil {
		in, out := &in.UserGroup, &out.UserGroup
		*out = new(string)
		**out = **in
	}
	if in.UserList != nil {
		in, out := &in.UserList, &out.UserList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifyUserListObservation.
func (in *NotifyUserListObservation) DeepCopy() *NotifyUserListObservation {
	if in == nil {
		return nil
	}
	out := new(NotifyUserListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifyUserListParameters) DeepCopyInto(out *NotifyUserListParameters) {
	*out = *in
	if in.UserGroup != nil {
		in, out := &in.UserGroup, &out.UserGroup
		*out = new(string)
		**out = **in
	}
	if in.UserList != nil {
		in, out := &in.UserList, &out.UserList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifyUserListParameters.
func (in *NotifyUserListParameters) DeepCopy() *NotifyUserListParameters {
	if in == nil {
		return nil
	}
	out := new(NotifyUserListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationsInitParameters) DeepCopyInto(out *OperationsInitParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.TraceNames != nil {
		in, out := &in.TraceNames, &out.TraceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationsInitParameters.
func (in *OperationsInitParameters) DeepCopy() *OperationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationsObservation) DeepCopyInto(out *OperationsObservation) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.TraceNames != nil {
		in, out := &in.TraceNames, &out.TraceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationsObservation.
func (in *OperationsObservation) DeepCopy() *OperationsObservation {
	if in == nil {
		return nil
	}
	out := new(OperationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationsParameters) DeepCopyInto(out *OperationsParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.TraceNames != nil {
		in, out := &in.TraceNames, &out.TraceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationsParameters.
func (in *OperationsParameters) DeepCopy() *OperationsParameters {
	if in == nil {
		return nil
	}
	out := new(OperationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackerV3) DeepCopyInto(out *TrackerV3) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackerV3.
func (in *TrackerV3) DeepCopy() *TrackerV3 {
	if in == nil {
		return nil
	}
	out := new(TrackerV3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrackerV3) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackerV3InitParameters) DeepCopyInto(out *TrackerV3InitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CompressType != nil {
		in, out := &in.CompressType, &out.CompressType
		*out = new(string)
		**out = **in
	}
	if in.FilePrefixName != nil {
		in, out := &in.FilePrefixName, &out.FilePrefixName
		*out = new(string)
		**out = **in
	}
	if in.IsLtsEnabled != nil {
		in, out := &in.IsLtsEnabled, &out.IsLtsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsObsCreated != nil {
		in, out := &in.IsObsCreated, &out.IsObsCreated
		*out = new(bool)
		**out = **in
	}
	if in.IsSortByService != nil {
		in, out := &in.IsSortByService, &out.IsSortByService
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackerV3InitParameters.
func (in *TrackerV3InitParameters) DeepCopy() *TrackerV3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TrackerV3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackerV3List) DeepCopyInto(out *TrackerV3List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrackerV3, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackerV3List.
func (in *TrackerV3List) DeepCopy() *TrackerV3List {
	if in == nil {
		return nil
	}
	out := new(TrackerV3List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrackerV3List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackerV3Observation) DeepCopyInto(out *TrackerV3Observation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CompressType != nil {
		in, out := &in.CompressType, &out.CompressType
		*out = new(string)
		**out = **in
	}
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.FilePrefixName != nil {
		in, out := &in.FilePrefixName, &out.FilePrefixName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsLtsEnabled != nil {
		in, out := &in.IsLtsEnabled, &out.IsLtsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsObsCreated != nil {
		in, out := &in.IsObsCreated, &out.IsObsCreated
		*out = new(bool)
		**out = **in
	}
	if in.IsSortByService != nil {
		in, out := &in.IsSortByService, &out.IsSortByService
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogTopicName != nil {
		in, out := &in.LogTopicName, &out.LogTopicName
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TrackerName != nil {
		in, out := &in.TrackerName, &out.TrackerName
		*out = new(string)
		**out = **in
	}
	if in.TrackerType != nil {
		in, out := &in.TrackerType, &out.TrackerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackerV3Observation.
func (in *TrackerV3Observation) DeepCopy() *TrackerV3Observation {
	if in == nil {
		return nil
	}
	out := new(TrackerV3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackerV3Parameters) DeepCopyInto(out *TrackerV3Parameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CompressType != nil {
		in, out := &in.CompressType, &out.CompressType
		*out = new(string)
		**out = **in
	}
	if in.FilePrefixName != nil {
		in, out := &in.FilePrefixName, &out.FilePrefixName
		*out = new(string)
		**out = **in
	}
	if in.IsLtsEnabled != nil {
		in, out := &in.IsLtsEnabled, &out.IsLtsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsObsCreated != nil {
		in, out := &in.IsObsCreated, &out.IsObsCreated
		*out = new(bool)
		**out = **in
	}
	if in.IsSortByService != nil {
		in, out := &in.IsSortByService, &out.IsSortByService
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackerV3Parameters.
func (in *TrackerV3Parameters) DeepCopy() *TrackerV3Parameters {
	if in == nil {
		return nil
	}
	out := new(TrackerV3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackerV3Spec) DeepCopyInto(out *TrackerV3Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackerV3Spec.
func (in *TrackerV3Spec) DeepCopy() *TrackerV3Spec {
	if in == nil {
		return nil
	}
	out := new(TrackerV3Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackerV3Status) DeepCopyInto(out *TrackerV3Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackerV3Status.
func (in *TrackerV3Status) DeepCopy() *TrackerV3Status {
	if in == nil {
		return nil
	}
	out := new(TrackerV3Status)
	in.DeepCopyInto(out)
	return out
}
