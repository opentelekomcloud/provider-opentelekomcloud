/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FileSystemV2InitParameters struct {

	// The access level of the shared file system. Changing this will create
	// a new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
	// resource instead.
	AccessLevel *string `json:"accessLevel,omitempty" tf:"access_level,omitempty"`

	// The access that the back end grants or denies. Changing this will
	// create new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
	// resource instead.
	AccessTo *string `json:"accessTo,omitempty" tf:"access_to,omitempty"`

	// The type of the share access rule. Changing this will create a new
	// access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2 resource instead.
	AccessType *string `json:"accessType,omitempty" tf:"access_type,omitempty"`

	// The availability zone name. Changing this parameter will create
	// a new resource.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Describes the shared file system.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The level of visibility for the shared file system.
	IsPublic *bool `json:"isPublic,omitempty" tf:"is_public,omitempty"`

	// Metadata key/value pairs as a dictionary of strings. Changing this will
	// create a new resource.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The name of the shared file system.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The region in which to obtain the V2 SFS client. If omitted, the
	// region argument of the provider is used. Changing this creates a new share.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The protocol for sharing file systems. The default value is NFS.
	ShareProto *string `json:"shareProto,omitempty" tf:"share_proto,omitempty"`

	// The size (GB) of the shared file system.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Tags key/value pairs to associate with the SFS File System.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type FileSystemV2Observation struct {

	// The access level of the shared file system. Changing this will create
	// a new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
	// resource instead.
	AccessLevel *string `json:"accessLevel,omitempty" tf:"access_level,omitempty"`

	// The status of the share access rule.
	AccessRuleStatus *string `json:"accessRuleStatus,omitempty" tf:"access_rule_status,omitempty"`

	// The access that the back end grants or denies. Changing this will
	// create new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
	// resource instead.
	AccessTo *string `json:"accessTo,omitempty" tf:"access_to,omitempty"`

	// The type of the share access rule. Changing this will create a new
	// access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2 resource instead.
	AccessType *string `json:"accessType,omitempty" tf:"access_type,omitempty"`

	// The availability zone name. Changing this parameter will create
	// a new resource.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Describes the shared file system.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The address for accessing the shared file system.
	ExportLocation *string `json:"exportLocation,omitempty" tf:"export_location,omitempty"`

	// The host name of the shared file system.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The UUID of the shared file system.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The level of visibility for the shared file system.
	IsPublic *bool `json:"isPublic,omitempty" tf:"is_public,omitempty"`

	// Metadata key/value pairs as a dictionary of strings. Changing this will
	// create a new resource.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The name of the shared file system.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The region in which to obtain the V2 SFS client. If omitted, the
	// region argument of the provider is used. Changing this creates a new share.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The UUID of the share access rule.
	ShareAccessID *string `json:"shareAccessId,omitempty" tf:"share_access_id,omitempty"`

	// The protocol for sharing file systems. The default value is NFS.
	ShareProto *string `json:"shareProto,omitempty" tf:"share_proto,omitempty"`

	// The storage service type assigned for the shared file system, such as
	// high-performance storage (composed of SSDs) and large-capacity storage (composed of SATA disks).
	ShareType *string `json:"shareType,omitempty" tf:"share_type,omitempty"`

	// The size (GB) of the shared file system.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// The status of the shared file system.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Tags key/value pairs to associate with the SFS File System.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The volume type.
	VolumeType *string `json:"volumeType,omitempty" tf:"volume_type,omitempty"`
}

type FileSystemV2Parameters struct {

	// The access level of the shared file system. Changing this will create
	// a new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
	// resource instead.
	// +kubebuilder:validation:Optional
	AccessLevel *string `json:"accessLevel,omitempty" tf:"access_level,omitempty"`

	// The access that the back end grants or denies. Changing this will
	// create new access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2
	// resource instead.
	// +kubebuilder:validation:Optional
	AccessTo *string `json:"accessTo,omitempty" tf:"access_to,omitempty"`

	// The type of the share access rule. Changing this will create a new
	// access rule. Deprecated, please use the opentelekomcloud_sfs_share_access_rule_v2 resource instead.
	// +kubebuilder:validation:Optional
	AccessType *string `json:"accessType,omitempty" tf:"access_type,omitempty"`

	// The availability zone name. Changing this parameter will create
	// a new resource.
	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Describes the shared file system.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The level of visibility for the shared file system.
	// +kubebuilder:validation:Optional
	IsPublic *bool `json:"isPublic,omitempty" tf:"is_public,omitempty"`

	// Metadata key/value pairs as a dictionary of strings. Changing this will
	// create a new resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The name of the shared file system.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The region in which to obtain the V2 SFS client. If omitted, the
	// region argument of the provider is used. Changing this creates a new share.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The protocol for sharing file systems. The default value is NFS.
	// +kubebuilder:validation:Optional
	ShareProto *string `json:"shareProto,omitempty" tf:"share_proto,omitempty"`

	// The size (GB) of the shared file system.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Tags key/value pairs to associate with the SFS File System.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// FileSystemV2Spec defines the desired state of FileSystemV2
type FileSystemV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FileSystemV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FileSystemV2InitParameters `json:"initProvider,omitempty"`
}

// FileSystemV2Status defines the observed state of FileSystemV2.
type FileSystemV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FileSystemV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FileSystemV2 is the Schema for the FileSystemV2s API. Manages an SFS File System resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type FileSystemV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.size) || (has(self.initProvider) && has(self.initProvider.size))",message="spec.forProvider.size is a required parameter"
	Spec   FileSystemV2Spec   `json:"spec"`
	Status FileSystemV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FileSystemV2List contains a list of FileSystemV2s
type FileSystemV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FileSystemV2 `json:"items"`
}

// Repository type metadata.
var (
	FileSystemV2_Kind             = "FileSystemV2"
	FileSystemV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FileSystemV2_Kind}.String()
	FileSystemV2_KindAPIVersion   = FileSystemV2_Kind + "." + CRDGroupVersion.String()
	FileSystemV2_GroupVersionKind = CRDGroupVersion.WithKind(FileSystemV2_Kind)
)

func init() {
	SchemeBuilder.Register(&FileSystemV2{}, &FileSystemV2List{})
}
