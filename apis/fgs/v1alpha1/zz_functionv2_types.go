/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AliasesInitParameters struct {

	// Specifies the description of the function.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the version name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AliasesObservation struct {

	// Specifies the description of the function.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the version name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AliasesParameters struct {

	// Specifies the description of the function.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the version name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type CronConfigsInitParameters struct {

	// Specifies the number of reserved instance to which the policy belongs.
	// The valid value ranges from 0 to 1,000.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Specifies the cron expression.
	Cron *string `json:"cron,omitempty" tf:"cron,omitempty"`

	// Specifies the expiration timestamp of the policy. The unit is s, e.g. 1740560074.
	ExpiredTime *float64 `json:"expiredTime,omitempty" tf:"expired_time,omitempty"`

	// Specifies the version name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the effective timestamp of policy. The unit is s, e.g. 1740560074.
	StartTime *float64 `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type CronConfigsObservation struct {

	// Specifies the number of reserved instance to which the policy belongs.
	// The valid value ranges from 0 to 1,000.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Specifies the cron expression.
	Cron *string `json:"cron,omitempty" tf:"cron,omitempty"`

	// Specifies the expiration timestamp of the policy. The unit is s, e.g. 1740560074.
	ExpiredTime *float64 `json:"expiredTime,omitempty" tf:"expired_time,omitempty"`

	// Specifies the version name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the effective timestamp of policy. The unit is s, e.g. 1740560074.
	StartTime *float64 `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type CronConfigsParameters struct {

	// Specifies the number of reserved instance to which the policy belongs.
	// The valid value ranges from 0 to 1,000.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count" tf:"count,omitempty"`

	// Specifies the cron expression.
	// +kubebuilder:validation:Optional
	Cron *string `json:"cron" tf:"cron,omitempty"`

	// Specifies the expiration timestamp of the policy. The unit is s, e.g. 1740560074.
	// +kubebuilder:validation:Optional
	ExpiredTime *float64 `json:"expiredTime" tf:"expired_time,omitempty"`

	// Specifies the version name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the effective timestamp of policy. The unit is s, e.g. 1740560074.
	// +kubebuilder:validation:Optional
	StartTime *float64 `json:"startTime" tf:"start_time,omitempty"`
}

type CustomImageInitParameters struct {

	// Specifies the URL of SWR image, the URL must start with swr..
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type CustomImageObservation struct {

	// Specifies the URL of SWR image, the URL must start with swr..
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type CustomImageParameters struct {

	// Specifies the URL of SWR image, the URL must start with swr..
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type FuncMountsInitParameters struct {

	// Specifies the function access path.
	LocalMountPath *string `json:"localMountPath,omitempty" tf:"local_mount_path,omitempty"`

	// Specifies the ID of the mounted resource (corresponding cloud service).
	MountResource *string `json:"mountResource,omitempty" tf:"mount_resource,omitempty"`

	// Specifies the remote mount path. Example: 192.168.0.12:/data.
	MountSharePath *string `json:"mountSharePath,omitempty" tf:"mount_share_path,omitempty"`

	// Specifies the mount type.
	MountType *string `json:"mountType,omitempty" tf:"mount_type,omitempty"`
}

type FuncMountsObservation struct {

	// Specifies the function access path.
	LocalMountPath *string `json:"localMountPath,omitempty" tf:"local_mount_path,omitempty"`

	// Specifies the ID of the mounted resource (corresponding cloud service).
	MountResource *string `json:"mountResource,omitempty" tf:"mount_resource,omitempty"`

	// Specifies the remote mount path. Example: 192.168.0.12:/data.
	MountSharePath *string `json:"mountSharePath,omitempty" tf:"mount_share_path,omitempty"`

	// Specifies the mount type.
	MountType *string `json:"mountType,omitempty" tf:"mount_type,omitempty"`
}

type FuncMountsParameters struct {

	// Specifies the function access path.
	// +kubebuilder:validation:Optional
	LocalMountPath *string `json:"localMountPath" tf:"local_mount_path,omitempty"`

	// Specifies the ID of the mounted resource (corresponding cloud service).
	// +kubebuilder:validation:Optional
	MountResource *string `json:"mountResource" tf:"mount_resource,omitempty"`

	// Specifies the remote mount path. Example: 192.168.0.12:/data.
	// +kubebuilder:validation:Optional
	MountSharePath *string `json:"mountSharePath" tf:"mount_share_path,omitempty"`

	// Specifies the mount type.
	// +kubebuilder:validation:Optional
	MountType *string `json:"mountType" tf:"mount_type,omitempty"`
}

type FunctionV2InitParameters struct {

	// Specifies the agency. This parameter is mandatory if the function needs to access other
	// cloud services.
	Agency *string `json:"agency,omitempty" tf:"agency,omitempty"`

	// Specifies the group to which the function belongs.
	App *string `json:"app,omitempty" tf:"app,omitempty"`

	// Specifies the execution agency enables you to obtain a token or an AK/SK for
	// accessing other cloud services.
	AppAgency *string `json:"appAgency,omitempty" tf:"app_agency,omitempty"`

	// Specifies the name of a function file.
	// Required if the code_type is set to jar or zip.
	CodeFilename *string `json:"codeFilename,omitempty" tf:"code_filename,omitempty"`

	// Specifies the function code type, which can be:
	CodeType *string `json:"codeType,omitempty" tf:"code_type,omitempty"`

	// Specifies the code url.
	// Required if the code_type is set to obs.
	CodeURL *string `json:"codeUrl,omitempty" tf:"code_url,omitempty"`

	// Specifies the number of concurrent requests of the function.
	// The valid value ranges from 1 to 1,000, the default value is 1.
	ConcurrencyNum *float64 `json:"concurrencyNum,omitempty" tf:"concurrency_num,omitempty"`

	// Specifies the custom image configuration for creating function.
	// The custom_image structure is documented below.
	CustomImage []CustomImageInitParameters `json:"customImage,omitempty" tf:"custom_image,omitempty"`

	// Specifies the ID list of the dependencies.
	// +listType=set
	DependList []*string `json:"dependList,omitempty" tf:"depend_list,omitempty"`

	// Specifies the description of the function.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the key/value information defined to be encrypted for the
	// function.
	EncryptedUserDataSecretRef *v1.SecretKeySelector `json:"encryptedUserDataSecretRef,omitempty" tf:"-"`

	// Specifies the function code.
	// The code value can be encoded using Base64 or just with the text code.
	// Required if the code_type is set to inline, zip, or jar.
	FuncCode *string `json:"funcCode,omitempty" tf:"func_code,omitempty"`

	// Specifies the file system list. The func_mounts object structure is documented
	// below.
	FuncMounts []FuncMountsInitParameters `json:"funcMounts,omitempty" tf:"func_mounts,omitempty"`

	// Specifies the FunctionGraph version, default value is v2.
	// The valid values are as follows:
	FunctiongraphVersion *string `json:"functiongraphVersion,omitempty" tf:"functiongraph_version,omitempty"`

	// Specifies the GPU memory size allocated to the function, in MByte (MB).
	// The valid value ranges form 1,024 to 16,384, the value must be a multiple of 1,024.
	// If not specified, the GPU function is disabled.
	GpuMemory *float64 `json:"gpuMemory,omitempty" tf:"gpu_memory,omitempty"`

	// Specifies the entry point of the function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// Specifies the initializer of the function.
	InitializerHandler *string `json:"initializerHandler,omitempty" tf:"initializer_handler,omitempty"`

	// Specifies the maximum duration the function can be initialized. Value range:
	// 1s to 300s.
	InitializerTimeout *float64 `json:"initializerTimeout,omitempty" tf:"initializer_timeout,omitempty"`

	// Specifies the ID of the LTS log group.
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Specifies the name of the LTS log group.
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// Specifies the ID of the LTS log stream.
	LogTopicID *string `json:"logTopicId,omitempty" tf:"log_topic_id,omitempty"`

	// Specifies the name of the LTS stream.
	LogTopicName *string `json:"logTopicName,omitempty" tf:"log_topic_name,omitempty"`

	// Specifies the maximum number of instances of the function.
	// The valid value ranges from -1 to 1,000, defaults to 400.
	MaxInstanceNum *string `json:"maxInstanceNum,omitempty" tf:"max_instance_num,omitempty"`

	// Specifies the memory size allocated to the function, in MByte (MB).
	MemorySize *float64 `json:"memorySize,omitempty" tf:"memory_size,omitempty"`

	// Specifies the user group ID, a non-0 integer from –1 to 65,534.
	// Defaults to -1.
	MountUserGroupID *float64 `json:"mountUserGroupId,omitempty" tf:"mount_user_group_id,omitempty"`

	// Specifies the user ID, a non-0 integer from –1 to 65,534.
	// Defaults to -1.
	MountUserID *float64 `json:"mountUserId,omitempty" tf:"mount_user_id,omitempty"`

	// Specifies the name of the function.
	// Changing this will create a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the network ID of subnet.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Specifies the reserved instance policies of the function.
	// The reserved_instances structure is documented below.
	ReservedInstances []ReservedInstancesInitParameters `json:"reservedInstances,omitempty" tf:"reserved_instances,omitempty"`

	// Specifies the environment for executing the function.
	// The valid values are as follows:
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// Specifies the key/value pairs to associate with the function.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the timeout interval of the function, in seconds.
	// The value ranges from 3 to 900.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the Key/Value information defined for the function.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`

	// Specifies the ID of VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the versions management of the function.
	// The versions structure is documented below.
	Versions []VersionsInitParameters `json:"versions,omitempty" tf:"versions,omitempty"`
}

type FunctionV2Observation struct {

	// Specifies the agency. This parameter is mandatory if the function needs to access other
	// cloud services.
	Agency *string `json:"agency,omitempty" tf:"agency,omitempty"`

	// Specifies the group to which the function belongs.
	App *string `json:"app,omitempty" tf:"app,omitempty"`

	// Specifies the execution agency enables you to obtain a token or an AK/SK for
	// accessing other cloud services.
	AppAgency *string `json:"appAgency,omitempty" tf:"app_agency,omitempty"`

	// Specifies the name of a function file.
	// Required if the code_type is set to jar or zip.
	CodeFilename *string `json:"codeFilename,omitempty" tf:"code_filename,omitempty"`

	// Specifies the function code type, which can be:
	CodeType *string `json:"codeType,omitempty" tf:"code_type,omitempty"`

	// Specifies the code url.
	// Required if the code_type is set to obs.
	CodeURL *string `json:"codeUrl,omitempty" tf:"code_url,omitempty"`

	// Specifies the number of concurrent requests of the function.
	// The valid value ranges from 1 to 1,000, the default value is 1.
	ConcurrencyNum *float64 `json:"concurrencyNum,omitempty" tf:"concurrency_num,omitempty"`

	// Specifies the custom image configuration for creating function.
	// The custom_image structure is documented below.
	CustomImage []CustomImageObservation `json:"customImage,omitempty" tf:"custom_image,omitempty"`

	// The private DNS configuration of the function network.
	DNSList *string `json:"dnsList,omitempty" tf:"dns_list,omitempty"`

	// Specifies the ID list of the dependencies.
	// +listType=set
	DependList []*string `json:"dependList,omitempty" tf:"depend_list,omitempty"`

	// Specifies the description of the function.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the function code.
	// The code value can be encoded using Base64 or just with the text code.
	// Required if the code_type is set to inline, zip, or jar.
	FuncCode *string `json:"funcCode,omitempty" tf:"func_code,omitempty"`

	// Specifies the file system list. The func_mounts object structure is documented
	// below.
	FuncMounts []FuncMountsObservation `json:"funcMounts,omitempty" tf:"func_mounts,omitempty"`

	// Specifies the FunctionGraph version, default value is v2.
	// The valid values are as follows:
	FunctiongraphVersion *string `json:"functiongraphVersion,omitempty" tf:"functiongraph_version,omitempty"`

	// Specifies the GPU memory size allocated to the function, in MByte (MB).
	// The valid value ranges form 1,024 to 16,384, the value must be a multiple of 1,024.
	// If not specified, the GPU function is disabled.
	GpuMemory *float64 `json:"gpuMemory,omitempty" tf:"gpu_memory,omitempty"`

	GpuType *string `json:"gpuType,omitempty" tf:"gpu_type,omitempty"`

	// Specifies the entry point of the function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The resource ID, consist of urn and current version, the format is <urn>:<version>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the initializer of the function.
	InitializerHandler *string `json:"initializerHandler,omitempty" tf:"initializer_handler,omitempty"`

	// Specifies the maximum duration the function can be initialized. Value range:
	// 1s to 300s.
	InitializerTimeout *float64 `json:"initializerTimeout,omitempty" tf:"initializer_timeout,omitempty"`

	// Specifies the ID of the LTS log group.
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Specifies the name of the LTS log group.
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// Specifies the ID of the LTS log stream.
	LogTopicID *string `json:"logTopicId,omitempty" tf:"log_topic_id,omitempty"`

	// Specifies the name of the LTS stream.
	LogTopicName *string `json:"logTopicName,omitempty" tf:"log_topic_name,omitempty"`

	// Specifies the maximum number of instances of the function.
	// The valid value ranges from -1 to 1,000, defaults to 400.
	MaxInstanceNum *string `json:"maxInstanceNum,omitempty" tf:"max_instance_num,omitempty"`

	// Specifies the memory size allocated to the function, in MByte (MB).
	MemorySize *float64 `json:"memorySize,omitempty" tf:"memory_size,omitempty"`

	// Specifies the user group ID, a non-0 integer from –1 to 65,534.
	// Defaults to -1.
	MountUserGroupID *float64 `json:"mountUserGroupId,omitempty" tf:"mount_user_group_id,omitempty"`

	// Specifies the user ID, a non-0 integer from –1 to 65,534.
	// Defaults to -1.
	MountUserID *float64 `json:"mountUserId,omitempty" tf:"mount_user_id,omitempty"`

	// Specifies the name of the function.
	// Changing this will create a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the network ID of subnet.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// The region in which function graph resource is created.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the reserved instance policies of the function.
	// The reserved_instances structure is documented below.
	ReservedInstances []ReservedInstancesObservation `json:"reservedInstances,omitempty" tf:"reserved_instances,omitempty"`

	// Specifies the environment for executing the function.
	// The valid values are as follows:
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// Specifies the key/value pairs to associate with the function.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the timeout interval of the function, in seconds.
	// The value ranges from 3 to 900.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Uniform Resource Name.
	Urn *string `json:"urn,omitempty" tf:"urn,omitempty"`

	// Specifies the Key/Value information defined for the function.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`

	// Specifies the ID of VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// The version of the function.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`

	// Specifies the versions management of the function.
	// The versions structure is documented below.
	Versions []VersionsObservation `json:"versions,omitempty" tf:"versions,omitempty"`
}

type FunctionV2Parameters struct {

	// Specifies the agency. This parameter is mandatory if the function needs to access other
	// cloud services.
	// +kubebuilder:validation:Optional
	Agency *string `json:"agency,omitempty" tf:"agency,omitempty"`

	// Specifies the group to which the function belongs.
	// +kubebuilder:validation:Optional
	App *string `json:"app,omitempty" tf:"app,omitempty"`

	// Specifies the execution agency enables you to obtain a token or an AK/SK for
	// accessing other cloud services.
	// +kubebuilder:validation:Optional
	AppAgency *string `json:"appAgency,omitempty" tf:"app_agency,omitempty"`

	// Specifies the name of a function file.
	// Required if the code_type is set to jar or zip.
	// +kubebuilder:validation:Optional
	CodeFilename *string `json:"codeFilename,omitempty" tf:"code_filename,omitempty"`

	// Specifies the function code type, which can be:
	// +kubebuilder:validation:Optional
	CodeType *string `json:"codeType,omitempty" tf:"code_type,omitempty"`

	// Specifies the code url.
	// Required if the code_type is set to obs.
	// +kubebuilder:validation:Optional
	CodeURL *string `json:"codeUrl,omitempty" tf:"code_url,omitempty"`

	// Specifies the number of concurrent requests of the function.
	// The valid value ranges from 1 to 1,000, the default value is 1.
	// +kubebuilder:validation:Optional
	ConcurrencyNum *float64 `json:"concurrencyNum,omitempty" tf:"concurrency_num,omitempty"`

	// Specifies the custom image configuration for creating function.
	// The custom_image structure is documented below.
	// +kubebuilder:validation:Optional
	CustomImage []CustomImageParameters `json:"customImage,omitempty" tf:"custom_image,omitempty"`

	// Specifies the ID list of the dependencies.
	// +kubebuilder:validation:Optional
	// +listType=set
	DependList []*string `json:"dependList,omitempty" tf:"depend_list,omitempty"`

	// Specifies the description of the function.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the key/value information defined to be encrypted for the
	// function.
	// +kubebuilder:validation:Optional
	EncryptedUserDataSecretRef *v1.SecretKeySelector `json:"encryptedUserDataSecretRef,omitempty" tf:"-"`

	// Specifies the function code.
	// The code value can be encoded using Base64 or just with the text code.
	// Required if the code_type is set to inline, zip, or jar.
	// +kubebuilder:validation:Optional
	FuncCode *string `json:"funcCode,omitempty" tf:"func_code,omitempty"`

	// Specifies the file system list. The func_mounts object structure is documented
	// below.
	// +kubebuilder:validation:Optional
	FuncMounts []FuncMountsParameters `json:"funcMounts,omitempty" tf:"func_mounts,omitempty"`

	// Specifies the FunctionGraph version, default value is v2.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	FunctiongraphVersion *string `json:"functiongraphVersion,omitempty" tf:"functiongraph_version,omitempty"`

	// Specifies the GPU memory size allocated to the function, in MByte (MB).
	// The valid value ranges form 1,024 to 16,384, the value must be a multiple of 1,024.
	// If not specified, the GPU function is disabled.
	// +kubebuilder:validation:Optional
	GpuMemory *float64 `json:"gpuMemory,omitempty" tf:"gpu_memory,omitempty"`

	// Specifies the entry point of the function.
	// +kubebuilder:validation:Optional
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// Specifies the initializer of the function.
	// +kubebuilder:validation:Optional
	InitializerHandler *string `json:"initializerHandler,omitempty" tf:"initializer_handler,omitempty"`

	// Specifies the maximum duration the function can be initialized. Value range:
	// 1s to 300s.
	// +kubebuilder:validation:Optional
	InitializerTimeout *float64 `json:"initializerTimeout,omitempty" tf:"initializer_timeout,omitempty"`

	// Specifies the ID of the LTS log group.
	// +kubebuilder:validation:Optional
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Specifies the name of the LTS log group.
	// +kubebuilder:validation:Optional
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// Specifies the ID of the LTS log stream.
	// +kubebuilder:validation:Optional
	LogTopicID *string `json:"logTopicId,omitempty" tf:"log_topic_id,omitempty"`

	// Specifies the name of the LTS stream.
	// +kubebuilder:validation:Optional
	LogTopicName *string `json:"logTopicName,omitempty" tf:"log_topic_name,omitempty"`

	// Specifies the maximum number of instances of the function.
	// The valid value ranges from -1 to 1,000, defaults to 400.
	// +kubebuilder:validation:Optional
	MaxInstanceNum *string `json:"maxInstanceNum,omitempty" tf:"max_instance_num,omitempty"`

	// Specifies the memory size allocated to the function, in MByte (MB).
	// +kubebuilder:validation:Optional
	MemorySize *float64 `json:"memorySize,omitempty" tf:"memory_size,omitempty"`

	// Specifies the user group ID, a non-0 integer from –1 to 65,534.
	// Defaults to -1.
	// +kubebuilder:validation:Optional
	MountUserGroupID *float64 `json:"mountUserGroupId,omitempty" tf:"mount_user_group_id,omitempty"`

	// Specifies the user ID, a non-0 integer from –1 to 65,534.
	// Defaults to -1.
	// +kubebuilder:validation:Optional
	MountUserID *float64 `json:"mountUserId,omitempty" tf:"mount_user_id,omitempty"`

	// Specifies the name of the function.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the network ID of subnet.
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Specifies the reserved instance policies of the function.
	// The reserved_instances structure is documented below.
	// +kubebuilder:validation:Optional
	ReservedInstances []ReservedInstancesParameters `json:"reservedInstances,omitempty" tf:"reserved_instances,omitempty"`

	// Specifies the environment for executing the function.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// Specifies the key/value pairs to associate with the function.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the timeout interval of the function, in seconds.
	// The value ranges from 3 to 900.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Specifies the Key/Value information defined for the function.
	// +kubebuilder:validation:Optional
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`

	// Specifies the ID of VPC.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the versions management of the function.
	// The versions structure is documented below.
	// +kubebuilder:validation:Optional
	Versions []VersionsParameters `json:"versions,omitempty" tf:"versions,omitempty"`
}

type ReservedInstancesInitParameters struct {

	// Specifies the number of reserved instance.
	// The valid value ranges from 0 to 1,000.
	// If this parameter is set to 0, the reserved instance will not run.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Specifies whether to enable the idle mode. The default value is false.
	// If this parameter is enabled, reserved instances are initialized and the mode change needs some time to take effect.
	// You will still be billed at the price of reserved instances for non-idle mode in this period.
	IdleMode *bool `json:"idleMode,omitempty" tf:"idle_mode,omitempty"`

	// Specifies the version name or alias name.
	QualifierName *string `json:"qualifierName,omitempty" tf:"qualifier_name,omitempty"`

	// Specifies qualifier type of reserved instance. The valid values are as follows:
	QualifierType *string `json:"qualifierType,omitempty" tf:"qualifier_type,omitempty"`

	// Specifies the auto scaling policies for reserved instance.
	// The tactics_config structure is documented below.
	TacticsConfig []TacticsConfigInitParameters `json:"tacticsConfig,omitempty" tf:"tactics_config,omitempty"`
}

type ReservedInstancesObservation struct {

	// Specifies the number of reserved instance.
	// The valid value ranges from 0 to 1,000.
	// If this parameter is set to 0, the reserved instance will not run.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Specifies whether to enable the idle mode. The default value is false.
	// If this parameter is enabled, reserved instances are initialized and the mode change needs some time to take effect.
	// You will still be billed at the price of reserved instances for non-idle mode in this period.
	IdleMode *bool `json:"idleMode,omitempty" tf:"idle_mode,omitempty"`

	// Specifies the version name or alias name.
	QualifierName *string `json:"qualifierName,omitempty" tf:"qualifier_name,omitempty"`

	// Specifies qualifier type of reserved instance. The valid values are as follows:
	QualifierType *string `json:"qualifierType,omitempty" tf:"qualifier_type,omitempty"`

	// Specifies the auto scaling policies for reserved instance.
	// The tactics_config structure is documented below.
	TacticsConfig []TacticsConfigObservation `json:"tacticsConfig,omitempty" tf:"tactics_config,omitempty"`
}

type ReservedInstancesParameters struct {

	// Specifies the number of reserved instance.
	// The valid value ranges from 0 to 1,000.
	// If this parameter is set to 0, the reserved instance will not run.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count" tf:"count,omitempty"`

	// Specifies whether to enable the idle mode. The default value is false.
	// If this parameter is enabled, reserved instances are initialized and the mode change needs some time to take effect.
	// You will still be billed at the price of reserved instances for non-idle mode in this period.
	// +kubebuilder:validation:Optional
	IdleMode *bool `json:"idleMode,omitempty" tf:"idle_mode,omitempty"`

	// Specifies the version name or alias name.
	// +kubebuilder:validation:Optional
	QualifierName *string `json:"qualifierName" tf:"qualifier_name,omitempty"`

	// Specifies qualifier type of reserved instance. The valid values are as follows:
	// +kubebuilder:validation:Optional
	QualifierType *string `json:"qualifierType" tf:"qualifier_type,omitempty"`

	// Specifies the auto scaling policies for reserved instance.
	// The tactics_config structure is documented below.
	// +kubebuilder:validation:Optional
	TacticsConfig []TacticsConfigParameters `json:"tacticsConfig,omitempty" tf:"tactics_config,omitempty"`
}

type TacticsConfigInitParameters struct {

	// Specifies the list of scheduled policy configurations.
	// The cron_configs structure is documented below.
	CronConfigs []CronConfigsInitParameters `json:"cronConfigs,omitempty" tf:"cron_configs,omitempty"`
}

type TacticsConfigObservation struct {

	// Specifies the list of scheduled policy configurations.
	// The cron_configs structure is documented below.
	CronConfigs []CronConfigsObservation `json:"cronConfigs,omitempty" tf:"cron_configs,omitempty"`
}

type TacticsConfigParameters struct {

	// Specifies the list of scheduled policy configurations.
	// The cron_configs structure is documented below.
	// +kubebuilder:validation:Optional
	CronConfigs []CronConfigsParameters `json:"cronConfigs,omitempty" tf:"cron_configs,omitempty"`
}

type VersionsInitParameters struct {

	// Specifies the aliases management for specified version.
	// The aliases structure is documented below.
	Aliases []AliasesInitParameters `json:"aliases,omitempty" tf:"aliases,omitempty"`

	// Specifies the version name.
	// The version name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type VersionsObservation struct {

	// Specifies the aliases management for specified version.
	// The aliases structure is documented below.
	Aliases []AliasesObservation `json:"aliases,omitempty" tf:"aliases,omitempty"`

	// Specifies the version name.
	// The version name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type VersionsParameters struct {

	// Specifies the aliases management for specified version.
	// The aliases structure is documented below.
	// +kubebuilder:validation:Optional
	Aliases []AliasesParameters `json:"aliases,omitempty" tf:"aliases,omitempty"`

	// Specifies the version name.
	// The version name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

// FunctionV2Spec defines the desired state of FunctionV2
type FunctionV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FunctionV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FunctionV2InitParameters `json:"initProvider,omitempty"`
}

// FunctionV2Status defines the observed state of FunctionV2.
type FunctionV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FunctionV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FunctionV2 is the Schema for the FunctionV2s API. Manages an FGS Function resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type FunctionV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.memorySize) || (has(self.initProvider) && has(self.initProvider.memorySize))",message="spec.forProvider.memorySize is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.runtime) || (has(self.initProvider) && has(self.initProvider.runtime))",message="spec.forProvider.runtime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.timeout) || (has(self.initProvider) && has(self.initProvider.timeout))",message="spec.forProvider.timeout is a required parameter"
	Spec   FunctionV2Spec   `json:"spec"`
	Status FunctionV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FunctionV2List contains a list of FunctionV2s
type FunctionV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FunctionV2 `json:"items"`
}

// Repository type metadata.
var (
	FunctionV2_Kind             = "FunctionV2"
	FunctionV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FunctionV2_Kind}.String()
	FunctionV2_KindAPIVersion   = FunctionV2_Kind + "." + CRDGroupVersion.String()
	FunctionV2_GroupVersionKind = CRDGroupVersion.WithKind(FunctionV2_Kind)
)

func init() {
	SchemeBuilder.Register(&FunctionV2{}, &FunctionV2List{})
}
