/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AsyncInvokeConfigV2InitParameters struct {

	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	FunctionUrn *string `json:"functionUrn,omitempty" tf:"function_urn,omitempty"`

	// Specifies the maximum validity period of a message.
	MaxAsyncEventAgeInSeconds *float64 `json:"maxAsyncEventAgeInSeconds,omitempty" tf:"max_async_event_age_in_seconds,omitempty"`

	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	MaxAsyncRetryAttempts *float64 `json:"maxAsyncRetryAttempts,omitempty" tf:"max_async_retry_attempts,omitempty"`

	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	OnFailure []OnFailureInitParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// Specifies the target to be invoked when a function is successfully executed.
	// The object structure is documented below.
	OnSuccess []OnSuccessInitParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type AsyncInvokeConfigV2Observation struct {

	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	FunctionUrn *string `json:"functionUrn,omitempty" tf:"function_urn,omitempty"`

	// Specifies a resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the maximum validity period of a message.
	MaxAsyncEventAgeInSeconds *float64 `json:"maxAsyncEventAgeInSeconds,omitempty" tf:"max_async_event_age_in_seconds,omitempty"`

	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	MaxAsyncRetryAttempts *float64 `json:"maxAsyncRetryAttempts,omitempty" tf:"max_async_retry_attempts,omitempty"`

	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	OnFailure []OnFailureObservation `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// Specifies the target to be invoked when a function is successfully executed.
	// The object structure is documented below.
	OnSuccess []OnSuccessObservation `json:"onSuccess,omitempty" tf:"on_success,omitempty"`

	// Specifies the region in which the asynchronous invocation is configured.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type AsyncInvokeConfigV2Parameters struct {

	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	FunctionUrn *string `json:"functionUrn,omitempty" tf:"function_urn,omitempty"`

	// Specifies the maximum validity period of a message.
	// +kubebuilder:validation:Optional
	MaxAsyncEventAgeInSeconds *float64 `json:"maxAsyncEventAgeInSeconds,omitempty" tf:"max_async_event_age_in_seconds,omitempty"`

	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	// +kubebuilder:validation:Optional
	MaxAsyncRetryAttempts *float64 `json:"maxAsyncRetryAttempts,omitempty" tf:"max_async_retry_attempts,omitempty"`

	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	OnFailure []OnFailureParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// Specifies the target to be invoked when a function is successfully executed.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	OnSuccess []OnSuccessParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type OnFailureInitParameters struct {

	// Specifies the object type.
	// The valid values are as follows:
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the parameters (map object in JSON format) corresponding to the target service.
	Param *string `json:"param,omitempty" tf:"param,omitempty"`
}

type OnFailureObservation struct {

	// Specifies the object type.
	// The valid values are as follows:
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the parameters (map object in JSON format) corresponding to the target service.
	Param *string `json:"param,omitempty" tf:"param,omitempty"`
}

type OnFailureParameters struct {

	// Specifies the object type.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// Specifies the parameters (map object in JSON format) corresponding to the target service.
	// +kubebuilder:validation:Optional
	Param *string `json:"param" tf:"param,omitempty"`
}

type OnSuccessInitParameters struct {

	// Specifies the object type.
	// The valid values are as follows:
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the parameters (map object in JSON format) corresponding to the target service.
	Param *string `json:"param,omitempty" tf:"param,omitempty"`
}

type OnSuccessObservation struct {

	// Specifies the object type.
	// The valid values are as follows:
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the parameters (map object in JSON format) corresponding to the target service.
	Param *string `json:"param,omitempty" tf:"param,omitempty"`
}

type OnSuccessParameters struct {

	// Specifies the object type.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// Specifies the parameters (map object in JSON format) corresponding to the target service.
	// +kubebuilder:validation:Optional
	Param *string `json:"param" tf:"param,omitempty"`
}

// AsyncInvokeConfigV2Spec defines the desired state of AsyncInvokeConfigV2
type AsyncInvokeConfigV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AsyncInvokeConfigV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AsyncInvokeConfigV2InitParameters `json:"initProvider,omitempty"`
}

// AsyncInvokeConfigV2Status defines the observed state of AsyncInvokeConfigV2.
type AsyncInvokeConfigV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AsyncInvokeConfigV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AsyncInvokeConfigV2 is the Schema for the AsyncInvokeConfigV2s API. Manages an FGS Async Invoke Config resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type AsyncInvokeConfigV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.functionUrn) || (has(self.initProvider) && has(self.initProvider.functionUrn))",message="spec.forProvider.functionUrn is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxAsyncEventAgeInSeconds) || (has(self.initProvider) && has(self.initProvider.maxAsyncEventAgeInSeconds))",message="spec.forProvider.maxAsyncEventAgeInSeconds is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxAsyncRetryAttempts) || (has(self.initProvider) && has(self.initProvider.maxAsyncRetryAttempts))",message="spec.forProvider.maxAsyncRetryAttempts is a required parameter"
	Spec   AsyncInvokeConfigV2Spec   `json:"spec"`
	Status AsyncInvokeConfigV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AsyncInvokeConfigV2List contains a list of AsyncInvokeConfigV2s
type AsyncInvokeConfigV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AsyncInvokeConfigV2 `json:"items"`
}

// Repository type metadata.
var (
	AsyncInvokeConfigV2_Kind             = "AsyncInvokeConfigV2"
	AsyncInvokeConfigV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AsyncInvokeConfigV2_Kind}.String()
	AsyncInvokeConfigV2_KindAPIVersion   = AsyncInvokeConfigV2_Kind + "." + CRDGroupVersion.String()
	AsyncInvokeConfigV2_GroupVersionKind = CRDGroupVersion.WithKind(AsyncInvokeConfigV2_Kind)
)

func init() {
	SchemeBuilder.Register(&AsyncInvokeConfigV2{}, &AsyncInvokeConfigV2List{})
}
