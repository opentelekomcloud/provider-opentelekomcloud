// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BucketObjectACLAccountPermissionInitParameters struct {

	// Specifies the access to acl. Valid values are READ_ACP and WRITE_ACP.
	AccessToACL []*string `json:"accessToAcl,omitempty" tf:"access_to_acl,omitempty"`

	// Specifies the access to object. Only READ supported.
	AccessToObject []*string `json:"accessToObject,omitempty" tf:"access_to_object,omitempty"`

	// Specifies the account id to authorize. The account id cannot be the object owner,
	// and must be unique.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`
}

type BucketObjectACLAccountPermissionObservation struct {

	// Specifies the access to acl. Valid values are READ_ACP and WRITE_ACP.
	AccessToACL []*string `json:"accessToAcl,omitempty" tf:"access_to_acl,omitempty"`

	// Specifies the access to object. Only READ supported.
	AccessToObject []*string `json:"accessToObject,omitempty" tf:"access_to_object,omitempty"`

	// Specifies the account id to authorize. The account id cannot be the object owner,
	// and must be unique.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`
}

type BucketObjectACLAccountPermissionParameters struct {

	// Specifies the access to acl. Valid values are READ_ACP and WRITE_ACP.
	// +kubebuilder:validation:Optional
	AccessToACL []*string `json:"accessToAcl,omitempty" tf:"access_to_acl,omitempty"`

	// Specifies the access to object. Only READ supported.
	// +kubebuilder:validation:Optional
	AccessToObject []*string `json:"accessToObject,omitempty" tf:"access_to_object,omitempty"`

	// Specifies the account id to authorize. The account id cannot be the object owner,
	// and must be unique.
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId" tf:"account_id,omitempty"`
}

type BucketObjectACLInitParameters struct {

	// Specifies the object account permissions.
	// The account_permission_struct structure is documented below.
	AccountPermission []BucketObjectACLAccountPermissionInitParameters `json:"accountPermission,omitempty" tf:"account_permission,omitempty"`

	// Specifies the name of the bucket which the object belongs to.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Specifies the name of the object to which to set the acl.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies the object public permission.
	// The permission_struct structure is documented below.
	PublicPermission []BucketObjectACLPublicPermissionInitParameters `json:"publicPermission,omitempty" tf:"public_permission,omitempty"`
}

type BucketObjectACLObservation struct {

	// Specifies the object account permissions.
	// The account_permission_struct structure is documented below.
	AccountPermission []BucketObjectACLAccountPermissionObservation `json:"accountPermission,omitempty" tf:"account_permission,omitempty"`

	// Specifies the name of the bucket which the object belongs to.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// The name of the bucket object key.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the name of the object to which to set the acl.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The object owner permission information.
	// The owner_permission_struct structure is documented below.
	OwnerPermission []BucketObjectACLOwnerPermissionObservation `json:"ownerPermission,omitempty" tf:"owner_permission,omitempty"`

	// Specifies the object public permission.
	// The permission_struct structure is documented below.
	PublicPermission []BucketObjectACLPublicPermissionObservation `json:"publicPermission,omitempty" tf:"public_permission,omitempty"`

	// The region of the bucket.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type BucketObjectACLOwnerPermissionInitParameters struct {
}

type BucketObjectACLOwnerPermissionObservation struct {

	// Specifies the access to acl. Valid values are READ_ACP and WRITE_ACP.
	AccessToACL []*string `json:"accessToAcl,omitempty" tf:"access_to_acl,omitempty"`

	// Specifies the access to object. Only READ supported.
	AccessToObject []*string `json:"accessToObject,omitempty" tf:"access_to_object,omitempty"`
}

type BucketObjectACLOwnerPermissionParameters struct {
}

type BucketObjectACLParameters struct {

	// Specifies the object account permissions.
	// The account_permission_struct structure is documented below.
	// +kubebuilder:validation:Optional
	AccountPermission []BucketObjectACLAccountPermissionParameters `json:"accountPermission,omitempty" tf:"account_permission,omitempty"`

	// Specifies the name of the bucket which the object belongs to.
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Specifies the name of the object to which to set the acl.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies the object public permission.
	// The permission_struct structure is documented below.
	// +kubebuilder:validation:Optional
	PublicPermission []BucketObjectACLPublicPermissionParameters `json:"publicPermission,omitempty" tf:"public_permission,omitempty"`
}

type BucketObjectACLPublicPermissionInitParameters struct {

	// Specifies the access to acl. Valid values are READ_ACP and WRITE_ACP.
	AccessToACL []*string `json:"accessToAcl,omitempty" tf:"access_to_acl,omitempty"`

	// Specifies the access to object. Only READ supported.
	AccessToObject []*string `json:"accessToObject,omitempty" tf:"access_to_object,omitempty"`
}

type BucketObjectACLPublicPermissionObservation struct {

	// Specifies the access to acl. Valid values are READ_ACP and WRITE_ACP.
	AccessToACL []*string `json:"accessToAcl,omitempty" tf:"access_to_acl,omitempty"`

	// Specifies the access to object. Only READ supported.
	AccessToObject []*string `json:"accessToObject,omitempty" tf:"access_to_object,omitempty"`
}

type BucketObjectACLPublicPermissionParameters struct {

	// Specifies the access to acl. Valid values are READ_ACP and WRITE_ACP.
	// +kubebuilder:validation:Optional
	AccessToACL []*string `json:"accessToAcl,omitempty" tf:"access_to_acl,omitempty"`

	// Specifies the access to object. Only READ supported.
	// +kubebuilder:validation:Optional
	AccessToObject []*string `json:"accessToObject,omitempty" tf:"access_to_object,omitempty"`
}

// BucketObjectACLSpec defines the desired state of BucketObjectACL
type BucketObjectACLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BucketObjectACLParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BucketObjectACLInitParameters `json:"initProvider,omitempty"`
}

// BucketObjectACLStatus defines the observed state of BucketObjectACL.
type BucketObjectACLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BucketObjectACLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BucketObjectACL is the Schema for the BucketObjectACLs API. Manages a OBS Bucket Object ACL resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type BucketObjectACL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.bucket) || (has(self.initProvider) && has(self.initProvider.bucket))",message="spec.forProvider.bucket is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.key) || (has(self.initProvider) && has(self.initProvider.key))",message="spec.forProvider.key is a required parameter"
	Spec   BucketObjectACLSpec   `json:"spec"`
	Status BucketObjectACLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BucketObjectACLList contains a list of BucketObjectACLs
type BucketObjectACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BucketObjectACL `json:"items"`
}

// Repository type metadata.
var (
	BucketObjectACL_Kind             = "BucketObjectACL"
	BucketObjectACL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BucketObjectACL_Kind}.String()
	BucketObjectACL_KindAPIVersion   = BucketObjectACL_Kind + "." + CRDGroupVersion.String()
	BucketObjectACL_GroupVersionKind = CRDGroupVersion.WithKind(BucketObjectACL_Kind)
)

func init() {
	SchemeBuilder.Register(&BucketObjectACL{}, &BucketObjectACLList{})
}
