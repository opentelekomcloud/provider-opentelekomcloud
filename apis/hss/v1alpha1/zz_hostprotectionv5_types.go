// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostProtectionV5InitParameters struct {

	// Specifies the charging mode for host protection.
	// The valid values are as follows:
	ChargingMode *string `json:"chargingMode,omitempty" tf:"charging_mode,omitempty"`

	// Specifies the host ID for the host protection.
	// Changing this parameter will create a new resource.
	HostID *string `json:"hostId,omitempty" tf:"host_id,omitempty"`

	// Specifies whether to wait for the host agent status to become online.
	// The value can be true or false. Defaults to false.
	IsWaitHostAvailable *bool `json:"isWaitHostAvailable,omitempty" tf:"is_wait_host_available,omitempty"`

	// Specifies Instance ID for host protection.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Specifies the protection version enabled by the host.
	// The valid values are as follows:
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HostProtectionV5Observation struct {

	// The agent ID installed on the host.
	AgentID *string `json:"agentId,omitempty" tf:"agent_id,omitempty"`

	// The agent status of the host. The value can be installed, not_installed, online,
	// offline, install_failed, or installing.
	AgentStatus *string `json:"agentStatus,omitempty" tf:"agent_status,omitempty"`

	// The asset importance. The value can be important, common, or test.
	AssetValue *string `json:"assetValue,omitempty" tf:"asset_value,omitempty"`

	// Specifies the charging mode for host protection.
	// The valid values are as follows:
	ChargingMode *string `json:"chargingMode,omitempty" tf:"charging_mode,omitempty"`

	// The security detection result of the host. The value can be undetected, clean, risk,
	// or scanning.
	DetectResult *string `json:"detectResult,omitempty" tf:"detect_result,omitempty"`

	// Specifies the host ID for the host protection.
	// Changing this parameter will create a new resource.
	HostID *string `json:"hostId,omitempty" tf:"host_id,omitempty"`

	// The host name.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// The host status. The value can be ACTIVE, SHUTOFF, BUILDING, or ERROR.
	HostStatus *string `json:"hostStatus,omitempty" tf:"host_status,omitempty"`

	// The resource ID same as host_id.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies whether to wait for the host agent status to become online.
	// The value can be true or false. Defaults to false.
	IsWaitHostAvailable *bool `json:"isWaitHostAvailable,omitempty" tf:"is_wait_host_available,omitempty"`

	// The operating system type of the host. The value can be Linux or Windows.
	OsType *string `json:"osType,omitempty" tf:"os_type,omitempty"`

	// The private IP address of the host.
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// The region to which the HSS host protection resource belongs.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies Instance ID for host protection.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// The protection status of the host. The value can be closed or opened.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the protection version enabled by the host.
	// The valid values are as follows:
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HostProtectionV5Parameters struct {

	// Specifies the charging mode for host protection.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	ChargingMode *string `json:"chargingMode,omitempty" tf:"charging_mode,omitempty"`

	// Specifies the host ID for the host protection.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	HostID *string `json:"hostId,omitempty" tf:"host_id,omitempty"`

	// Specifies whether to wait for the host agent status to become online.
	// The value can be true or false. Defaults to false.
	// +kubebuilder:validation:Optional
	IsWaitHostAvailable *bool `json:"isWaitHostAvailable,omitempty" tf:"is_wait_host_available,omitempty"`

	// Specifies Instance ID for host protection.
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Specifies the protection version enabled by the host.
	// The valid values are as follows:
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

// HostProtectionV5Spec defines the desired state of HostProtectionV5
type HostProtectionV5Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostProtectionV5Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HostProtectionV5InitParameters `json:"initProvider,omitempty"`
}

// HostProtectionV5Status defines the observed state of HostProtectionV5.
type HostProtectionV5Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostProtectionV5Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// HostProtectionV5 is the Schema for the HostProtectionV5s API. Manages an HSS host protection Service resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type HostProtectionV5 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.chargingMode) || (has(self.initProvider) && has(self.initProvider.chargingMode))",message="spec.forProvider.chargingMode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hostId) || (has(self.initProvider) && has(self.initProvider.hostId))",message="spec.forProvider.hostId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.version) || (has(self.initProvider) && has(self.initProvider.version))",message="spec.forProvider.version is a required parameter"
	Spec   HostProtectionV5Spec   `json:"spec"`
	Status HostProtectionV5Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostProtectionV5List contains a list of HostProtectionV5s
type HostProtectionV5List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostProtectionV5 `json:"items"`
}

// Repository type metadata.
var (
	HostProtectionV5_Kind             = "HostProtectionV5"
	HostProtectionV5_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostProtectionV5_Kind}.String()
	HostProtectionV5_KindAPIVersion   = HostProtectionV5_Kind + "." + CRDGroupVersion.String()
	HostProtectionV5_GroupVersionKind = CRDGroupVersion.WithKind(HostProtectionV5_Kind)
)

func init() {
	SchemeBuilder.Register(&HostProtectionV5{}, &HostProtectionV5List{})
}
