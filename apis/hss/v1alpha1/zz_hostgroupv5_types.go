// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostGroupV5InitParameters struct {

	// Specifies the list of host IDs.
	// +listType=set
	HostIds []*string `json:"hostIds,omitempty" tf:"host_ids,omitempty"`

	// Specifies the name of the host group.
	// The valid length is limited from 1 to 64, only Chinese characters, English letters, digits, hyphens (-),
	// underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
	// The Chinese characters must be in UTF-8 or Unicode format.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HostGroupV5Observation struct {

	// Specifies the list of host IDs.
	// +listType=set
	HostIds []*string `json:"hostIds,omitempty" tf:"host_ids,omitempty"`

	// The total host number.
	HostNum *float64 `json:"hostNum,omitempty" tf:"host_num,omitempty"`

	// The resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the name of the host group.
	// The valid length is limited from 1 to 64, only Chinese characters, English letters, digits, hyphens (-),
	// underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
	// The Chinese characters must be in UTF-8 or Unicode format.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The region where the host group is located.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The number of hosts at risk.
	RiskHostNum *float64 `json:"riskHostNum,omitempty" tf:"risk_host_num,omitempty"`

	// The ID list of the unprotect hosts.
	UnprotectHostIds []*string `json:"unprotectHostIds,omitempty" tf:"unprotect_host_ids,omitempty"`

	// The number of unprotect hosts.
	UnprotectHostNum *float64 `json:"unprotectHostNum,omitempty" tf:"unprotect_host_num,omitempty"`
}

type HostGroupV5Parameters struct {

	// Specifies the list of host IDs.
	// +kubebuilder:validation:Optional
	// +listType=set
	HostIds []*string `json:"hostIds,omitempty" tf:"host_ids,omitempty"`

	// Specifies the name of the host group.
	// The valid length is limited from 1 to 64, only Chinese characters, English letters, digits, hyphens (-),
	// underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
	// The Chinese characters must be in UTF-8 or Unicode format.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// HostGroupV5Spec defines the desired state of HostGroupV5
type HostGroupV5Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostGroupV5Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HostGroupV5InitParameters `json:"initProvider,omitempty"`
}

// HostGroupV5Status defines the observed state of HostGroupV5.
type HostGroupV5Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostGroupV5Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// HostGroupV5 is the Schema for the HostGroupV5s API. Manages an HSS host group Service resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type HostGroupV5 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   HostGroupV5Spec   `json:"spec"`
	Status HostGroupV5Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostGroupV5List contains a list of HostGroupV5s
type HostGroupV5List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostGroupV5 `json:"items"`
}

// Repository type metadata.
var (
	HostGroupV5_Kind             = "HostGroupV5"
	HostGroupV5_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostGroupV5_Kind}.String()
	HostGroupV5_KindAPIVersion   = HostGroupV5_Kind + "." + CRDGroupVersion.String()
	HostGroupV5_GroupVersionKind = CRDGroupVersion.WithKind(HostGroupV5_Kind)
)

func init() {
	SchemeBuilder.Register(&HostGroupV5{}, &HostGroupV5List{})
}
