/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupPolicyInitParameters struct {

	// Day in a week on which backup starts. Range: 1–7. Where: 1
	// indicates Monday; 7 indicates Sunday.
	BackupAt []*float64 `json:"backupAt,omitempty" tf:"backup_at,omitempty"`

	// Backup type. Valid values are: auto automatic backup,
	// manual manual backup (default).
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Time at which backup starts. 00:00-01:00 indicates that backup
	// starts at 00:00:00.
	BeginAt *string `json:"beginAt,omitempty" tf:"begin_at,omitempty"`

	// Interval at which backup is performed.
	// Currently, only weekly backup is supported.
	PeriodType *string `json:"periodType,omitempty" tf:"period_type,omitempty"`

	// Retention time. Unit: day. Range: 1–7.
	SaveDays *float64 `json:"saveDays,omitempty" tf:"save_days,omitempty"`
}

type BackupPolicyObservation struct {

	// Day in a week on which backup starts. Range: 1–7. Where: 1
	// indicates Monday; 7 indicates Sunday.
	BackupAt []*float64 `json:"backupAt,omitempty" tf:"backup_at,omitempty"`

	// Backup type. Valid values are: auto automatic backup,
	// manual manual backup (default).
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Time at which backup starts. 00:00-01:00 indicates that backup
	// starts at 00:00:00.
	BeginAt *string `json:"beginAt,omitempty" tf:"begin_at,omitempty"`

	// Interval at which backup is performed.
	// Currently, only weekly backup is supported.
	PeriodType *string `json:"periodType,omitempty" tf:"period_type,omitempty"`

	// Retention time. Unit: day. Range: 1–7.
	SaveDays *float64 `json:"saveDays,omitempty" tf:"save_days,omitempty"`
}

type BackupPolicyParameters struct {

	// Day in a week on which backup starts. Range: 1–7. Where: 1
	// indicates Monday; 7 indicates Sunday.
	// +kubebuilder:validation:Optional
	BackupAt []*float64 `json:"backupAt" tf:"backup_at,omitempty"`

	// Backup type. Valid values are: auto automatic backup,
	// manual manual backup (default).
	// +kubebuilder:validation:Optional
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Time at which backup starts. 00:00-01:00 indicates that backup
	// starts at 00:00:00.
	// +kubebuilder:validation:Optional
	BeginAt *string `json:"beginAt" tf:"begin_at,omitempty"`

	// Interval at which backup is performed.
	// Currently, only weekly backup is supported.
	// +kubebuilder:validation:Optional
	PeriodType *string `json:"periodType" tf:"period_type,omitempty"`

	// Retention time. Unit: day. Range: 1–7.
	// +kubebuilder:validation:Optional
	SaveDays *float64 `json:"saveDays,omitempty" tf:"save_days,omitempty"`
}

type ConfigurationInitParameters struct {

	// Configuration item ID.
	ParameterID *string `json:"parameterId,omitempty" tf:"parameter_id,omitempty"`

	// Configuration item name.
	ParameterName *string `json:"parameterName,omitempty" tf:"parameter_name,omitempty"`

	// Value of the configuration item.
	ParameterValue *string `json:"parameterValue,omitempty" tf:"parameter_value,omitempty"`
}

type ConfigurationObservation struct {

	// Configuration item ID.
	ParameterID *string `json:"parameterId,omitempty" tf:"parameter_id,omitempty"`

	// Configuration item name.
	ParameterName *string `json:"parameterName,omitempty" tf:"parameter_name,omitempty"`

	// Value of the configuration item.
	ParameterValue *string `json:"parameterValue,omitempty" tf:"parameter_value,omitempty"`
}

type ConfigurationParameters struct {

	// Configuration item ID.
	// +kubebuilder:validation:Optional
	ParameterID *string `json:"parameterId" tf:"parameter_id,omitempty"`

	// Configuration item name.
	// +kubebuilder:validation:Optional
	ParameterName *string `json:"parameterName" tf:"parameter_name,omitempty"`

	// Value of the configuration item.
	// +kubebuilder:validation:Optional
	ParameterValue *string `json:"parameterValue" tf:"parameter_value,omitempty"`
}

type InstanceV1InitParameters struct {

	// IDs of the AZs where cache nodes reside. For details
	// on how to query AZs, see Querying AZ Information
	// or use opentelekomcloud_dcs_az_v1 data source:
	AvailableZones []*string `json:"availableZones,omitempty" tf:"available_zones,omitempty"`

	// Day in a week on which backup starts. Range: 1–7. Where: 1
	// indicates Monday; 7 indicates Sunday.
	BackupAt []*float64 `json:"backupAt,omitempty" tf:"backup_at,omitempty"`

	// Describes the backup configuration to be used with the instance.
	BackupPolicy []BackupPolicyInitParameters `json:"backupPolicy,omitempty" tf:"backup_policy,omitempty"`

	// Backup type. Valid values are: auto automatic backup,
	// manual manual backup (default).
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Time at which backup starts. 00:00-01:00 indicates that backup
	// starts at 00:00:00.
	BeginAt *string `json:"beginAt,omitempty" tf:"begin_at,omitempty"`

	// Indicates the Cache capacity. Unit: GB.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// Describes the array of configuration items of the DCS instance.
	// Configured values can be found here.
	Configuration []ConfigurationInitParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// Indicates the description of an instance. It is a character
	// string containing not more than 1024 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to enable or disable whitelist. Only available when
	// engine_version is set to 4.0/5.0. Parameter have to be used together with whitelist.
	EnableWhitelist *bool `json:"enableWhitelist,omitempty" tf:"enable_whitelist,omitempty"`

	// Indicates a cache engine. Only Redis is supported. Changing this
	// creates a new instance.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Indicates the version of a cache engine, which can be 3.0/4.0/5.0/6.0.
	// Changing this creates a new instance.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Indicates the time at which a maintenance time window starts.
	// Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
	// a supported maintenance time window. For details, see section
	// Querying Maintenance Time Windows.
	// The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00.
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Indicates the time at which a maintenance time window ends.
	// Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
	// a supported maintenance time window. For details, see section
	// Querying Maintenance Time Windows.
	// The end time is four hours later than the start time. For example, if the start time is 22:00,
	// the end time is 02:00.
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Indicates the name of an instance. An instance name starts with a letter,
	// consists of 4 to 64 characters, and supports only letters, digits, and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the password of an instance. An instance password
	// must meet the following complexity requirements: Must be 8 to 32 characters long.
	// Must contain at least 3 of the following character types: lowercase letters, uppercase
	// letters, digits, and special characters: `~!@#$^&*()-_=+|{}:,<>./?
	// Changing this creates a new instance.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Interval at which backup is performed.
	// Currently, only weekly backup is supported.
	PeriodType *string `json:"periodType,omitempty" tf:"period_type,omitempty"`

	// IP address that is manually specified for a DCS instance.
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// Product ID used to differentiate DCS instance types.
	// Changing this creates a new instance.
	ProductID *string `json:"productId,omitempty" tf:"product_id,omitempty"`

	// Retention time. Unit: day. Range: 1–7.
	SaveDays *float64 `json:"saveDays,omitempty" tf:"save_days,omitempty"`

	// Security group ID. This parameter is mandatory when engine_version is 3.0.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the subnet Network ID. Changing this creates a new instance.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The key/value pairs to associate with the dcs instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the VPC ID. Changing this creates a new instance.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Describes the whitelist groups to be used with the instance. Only available when
	// engine_version is set to 4.0/5.0. Parameter have to be used together with enable_whitelist.
	// Resource fields:
	Whitelist []WhitelistInitParameters `json:"whitelist,omitempty" tf:"whitelist,omitempty"`
}

type InstanceV1Observation struct {

	// IDs of the AZs where cache nodes reside. For details
	// on how to query AZs, see Querying AZ Information
	// or use opentelekomcloud_dcs_az_v1 data source:
	AvailableZones []*string `json:"availableZones,omitempty" tf:"available_zones,omitempty"`

	// Day in a week on which backup starts. Range: 1–7. Where: 1
	// indicates Monday; 7 indicates Sunday.
	BackupAt []*float64 `json:"backupAt,omitempty" tf:"backup_at,omitempty"`

	// Describes the backup configuration to be used with the instance.
	BackupPolicy []BackupPolicyObservation `json:"backupPolicy,omitempty" tf:"backup_policy,omitempty"`

	// Backup type. Valid values are: auto automatic backup,
	// manual manual backup (default).
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Time at which backup starts. 00:00-01:00 indicates that backup
	// starts at 00:00:00.
	BeginAt *string `json:"beginAt,omitempty" tf:"begin_at,omitempty"`

	// Indicates the Cache capacity. Unit: GB.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// Describes the array of configuration items of the DCS instance.
	// Configured values can be found here.
	Configuration []ConfigurationObservation `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// Time at which the DCS instance is created. For example, 2017-03-31T12:24:46.297Z.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Indicates the description of an instance. It is a character
	// string containing not more than 1024 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to enable or disable whitelist. Only available when
	// engine_version is set to 4.0/5.0. Parameter have to be used together with whitelist.
	EnableWhitelist *bool `json:"enableWhitelist,omitempty" tf:"enable_whitelist,omitempty"`

	// Indicates a cache engine. Only Redis is supported. Changing this
	// creates a new instance.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Indicates the version of a cache engine, which can be 3.0/4.0/5.0/6.0.
	// Changing this creates a new instance.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Cache node's IP address in the tenant's VPC.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// Internal DCS version.
	InternalVersion *string `json:"internalVersion,omitempty" tf:"internal_version,omitempty"`

	// Indicates the time at which a maintenance time window starts.
	// Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
	// a supported maintenance time window. For details, see section
	// Querying Maintenance Time Windows.
	// The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00.
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Indicates the time at which a maintenance time window ends.
	// Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
	// a supported maintenance time window. For details, see section
	// Querying Maintenance Time Windows.
	// The end time is four hours later than the start time. For example, if the start time is 22:00,
	// the end time is 02:00.
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Overall memory size. Unit: MB.
	MaxMemory *float64 `json:"maxMemory,omitempty" tf:"max_memory,omitempty"`

	// Indicates the name of an instance. An instance name starts with a letter,
	// consists of 4 to 64 characters, and supports only letters, digits, and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An indicator of whether a DCS instance can be accessed in password-free mode.
	// true when password not set.
	NoPasswordAccess *string `json:"noPasswordAccess,omitempty" tf:"no_password_access,omitempty"`

	// An order ID is generated only in the monthly or yearly billing mode.
	// In other billing modes, no value is returned for this parameter.
	OrderID *string `json:"orderId,omitempty" tf:"order_id,omitempty"`

	// Interval at which backup is performed.
	// Currently, only weekly backup is supported.
	PeriodType *string `json:"periodType,omitempty" tf:"period_type,omitempty"`

	// Port of the cache node.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// IP address that is manually specified for a DCS instance.
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// Product ID used to differentiate DCS instance types.
	// Changing this creates a new instance.
	ProductID *string `json:"productId,omitempty" tf:"product_id,omitempty"`

	// Resource specifications.
	ResourceSpecCode *string `json:"resourceSpecCode,omitempty" tf:"resource_spec_code,omitempty"`

	// Retention time. Unit: day. Range: 1–7.
	SaveDays *float64 `json:"saveDays,omitempty" tf:"save_days,omitempty"`

	// Security group ID. This parameter is mandatory when engine_version is 3.0.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Indicates the name of a security group.
	SecurityGroupName *string `json:"securityGroupName,omitempty" tf:"security_group_name,omitempty"`

	// Cache instance status. One of CREATING, CREATEFAILED, RUNNING, ERROR,
	// RESTARTING, EXTENDING, RESTORING
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the subnet Network ID. Changing this creates a new instance.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Indicates the name of a subnet.
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`

	// The key/value pairs to associate with the dcs instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Size of the used memory. Unit: MB.
	UsedMemory *float64 `json:"usedMemory,omitempty" tf:"used_memory,omitempty"`

	// Indicates a user ID.
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// Username.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`

	// Specifies the VPC ID. Changing this creates a new instance.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Indicates the name of a vpc.
	VPCName *string `json:"vpcName,omitempty" tf:"vpc_name,omitempty"`

	// Describes the whitelist groups to be used with the instance. Only available when
	// engine_version is set to 4.0/5.0. Parameter have to be used together with enable_whitelist.
	// Resource fields:
	Whitelist []WhitelistObservation `json:"whitelist,omitempty" tf:"whitelist,omitempty"`
}

type InstanceV1Parameters struct {

	// IDs of the AZs where cache nodes reside. For details
	// on how to query AZs, see Querying AZ Information
	// or use opentelekomcloud_dcs_az_v1 data source:
	// +kubebuilder:validation:Optional
	AvailableZones []*string `json:"availableZones,omitempty" tf:"available_zones,omitempty"`

	// Day in a week on which backup starts. Range: 1–7. Where: 1
	// indicates Monday; 7 indicates Sunday.
	// +kubebuilder:validation:Optional
	BackupAt []*float64 `json:"backupAt,omitempty" tf:"backup_at,omitempty"`

	// Describes the backup configuration to be used with the instance.
	// +kubebuilder:validation:Optional
	BackupPolicy []BackupPolicyParameters `json:"backupPolicy,omitempty" tf:"backup_policy,omitempty"`

	// Backup type. Valid values are: auto automatic backup,
	// manual manual backup (default).
	// +kubebuilder:validation:Optional
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Time at which backup starts. 00:00-01:00 indicates that backup
	// starts at 00:00:00.
	// +kubebuilder:validation:Optional
	BeginAt *string `json:"beginAt,omitempty" tf:"begin_at,omitempty"`

	// Indicates the Cache capacity. Unit: GB.
	// +kubebuilder:validation:Optional
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// Describes the array of configuration items of the DCS instance.
	// Configured values can be found here.
	// +kubebuilder:validation:Optional
	Configuration []ConfigurationParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// Indicates the description of an instance. It is a character
	// string containing not more than 1024 characters.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to enable or disable whitelist. Only available when
	// engine_version is set to 4.0/5.0. Parameter have to be used together with whitelist.
	// +kubebuilder:validation:Optional
	EnableWhitelist *bool `json:"enableWhitelist,omitempty" tf:"enable_whitelist,omitempty"`

	// Indicates a cache engine. Only Redis is supported. Changing this
	// creates a new instance.
	// +kubebuilder:validation:Optional
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Indicates the version of a cache engine, which can be 3.0/4.0/5.0/6.0.
	// Changing this creates a new instance.
	// +kubebuilder:validation:Optional
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Indicates the time at which a maintenance time window starts.
	// Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
	// a supported maintenance time window. For details, see section
	// Querying Maintenance Time Windows.
	// The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00.
	// +kubebuilder:validation:Optional
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Indicates the time at which a maintenance time window ends.
	// Format: HH:mm:ss. The start time and end time of a maintenance time window must indicate the time segment of
	// a supported maintenance time window. For details, see section
	// Querying Maintenance Time Windows.
	// The end time is four hours later than the start time. For example, if the start time is 22:00,
	// the end time is 02:00.
	// +kubebuilder:validation:Optional
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Indicates the name of an instance. An instance name starts with a letter,
	// consists of 4 to 64 characters, and supports only letters, digits, and hyphens (-).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the password of an instance. An instance password
	// must meet the following complexity requirements: Must be 8 to 32 characters long.
	// Must contain at least 3 of the following character types: lowercase letters, uppercase
	// letters, digits, and special characters: `~!@#$^&*()-_=+|{}:,<>./?
	// Changing this creates a new instance.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Interval at which backup is performed.
	// Currently, only weekly backup is supported.
	// +kubebuilder:validation:Optional
	PeriodType *string `json:"periodType,omitempty" tf:"period_type,omitempty"`

	// IP address that is manually specified for a DCS instance.
	// +kubebuilder:validation:Optional
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// Product ID used to differentiate DCS instance types.
	// Changing this creates a new instance.
	// +kubebuilder:validation:Optional
	ProductID *string `json:"productId,omitempty" tf:"product_id,omitempty"`

	// Retention time. Unit: day. Range: 1–7.
	// +kubebuilder:validation:Optional
	SaveDays *float64 `json:"saveDays,omitempty" tf:"save_days,omitempty"`

	// Security group ID. This parameter is mandatory when engine_version is 3.0.
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the subnet Network ID. Changing this creates a new instance.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The key/value pairs to associate with the dcs instance.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the VPC ID. Changing this creates a new instance.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Describes the whitelist groups to be used with the instance. Only available when
	// engine_version is set to 4.0/5.0. Parameter have to be used together with enable_whitelist.
	// Resource fields:
	// +kubebuilder:validation:Optional
	Whitelist []WhitelistParameters `json:"whitelist,omitempty" tf:"whitelist,omitempty"`
}

type WhitelistInitParameters struct {

	// Whitelist group name. A maximum of four groups can be created for each instance.
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// List of IP addresses in the whitelist group. A maximum of 20 IP addresses or IP address
	// ranges can be added to an instance. Separate multiple IP addresses or IP address ranges with commas (,).
	// IP address 0.0.0.0 and IP address range 0.0.0/0 are not supported.
	IPList []*string `json:"ipList,omitempty" tf:"ip_list,omitempty"`
}

type WhitelistObservation struct {

	// Whitelist group name. A maximum of four groups can be created for each instance.
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// List of IP addresses in the whitelist group. A maximum of 20 IP addresses or IP address
	// ranges can be added to an instance. Separate multiple IP addresses or IP address ranges with commas (,).
	// IP address 0.0.0.0 and IP address range 0.0.0/0 are not supported.
	IPList []*string `json:"ipList,omitempty" tf:"ip_list,omitempty"`
}

type WhitelistParameters struct {

	// Whitelist group name. A maximum of four groups can be created for each instance.
	// +kubebuilder:validation:Optional
	GroupName *string `json:"groupName" tf:"group_name,omitempty"`

	// List of IP addresses in the whitelist group. A maximum of 20 IP addresses or IP address
	// ranges can be added to an instance. Separate multiple IP addresses or IP address ranges with commas (,).
	// IP address 0.0.0.0 and IP address range 0.0.0/0 are not supported.
	// +kubebuilder:validation:Optional
	IPList []*string `json:"ipList" tf:"ip_list,omitempty"`
}

// InstanceV1Spec defines the desired state of InstanceV1
type InstanceV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceV1Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceV1InitParameters `json:"initProvider,omitempty"`
}

// InstanceV1Status defines the observed state of InstanceV1.
type InstanceV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// InstanceV1 is the Schema for the InstanceV1s API. Manages a DCS Instance v1 resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type InstanceV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.availableZones) || (has(self.initProvider) && has(self.initProvider.availableZones))",message="spec.forProvider.availableZones is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.capacity) || (has(self.initProvider) && has(self.initProvider.capacity))",message="spec.forProvider.capacity is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.engine) || (has(self.initProvider) && has(self.initProvider.engine))",message="spec.forProvider.engine is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.engineVersion) || (has(self.initProvider) && has(self.initProvider.engineVersion))",message="spec.forProvider.engineVersion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.productId) || (has(self.initProvider) && has(self.initProvider.productId))",message="spec.forProvider.productId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subnetId) || (has(self.initProvider) && has(self.initProvider.subnetId))",message="spec.forProvider.subnetId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vpcId) || (has(self.initProvider) && has(self.initProvider.vpcId))",message="spec.forProvider.vpcId is a required parameter"
	Spec   InstanceV1Spec   `json:"spec"`
	Status InstanceV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceV1List contains a list of InstanceV1s
type InstanceV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []InstanceV1 `json:"items"`
}

// Repository type metadata.
var (
	InstanceV1_Kind             = "InstanceV1"
	InstanceV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: InstanceV1_Kind}.String()
	InstanceV1_KindAPIVersion   = InstanceV1_Kind + "." + CRDGroupVersion.String()
	InstanceV1_GroupVersionKind = CRDGroupVersion.WithKind(InstanceV1_Kind)
)

func init() {
	SchemeBuilder.Register(&InstanceV1{}, &InstanceV1List{})
}
