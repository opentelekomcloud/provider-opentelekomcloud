// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupStrategyInitParameters struct {

	// Specifies the number of days to retain the generated backup files.
	// The value ranges from 0 to 35. If this parameter is set to 0, the automated backup policy is not set.
	// If this parameter is not transferred, the automated backup policy is enabled by default.
	// Backup files are stored for seven days by default.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type BackupStrategyObservation struct {

	// Specifies the number of days to retain the generated backup files.
	// The value ranges from 0 to 35. If this parameter is set to 0, the automated backup policy is not set.
	// If this parameter is not transferred, the automated backup policy is enabled by default.
	// Backup files are stored for seven days by default.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type BackupStrategyParameters struct {

	// Specifies the number of days to retain the generated backup files.
	// The value ranges from 0 to 35. If this parameter is set to 0, the automated backup policy is not set.
	// If this parameter is not transferred, the automated backup policy is enabled by default.
	// Backup files are stored for seven days by default.
	// +kubebuilder:validation:Optional
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime" tf:"start_time,omitempty"`
}

type MySQLInstanceV3DatastoreInitParameters struct {

	// Specifies the database engine. Only "gaussdb-mysql" is supported now.
	// Changing this parameter will create a new resource.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Specifies the database version. Only "8.0" is supported now.
	// Changing this parameter will create a new resource.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MySQLInstanceV3DatastoreObservation struct {

	// Specifies the database engine. Only "gaussdb-mysql" is supported now.
	// Changing this parameter will create a new resource.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Specifies the database version. Only "8.0" is supported now.
	// Changing this parameter will create a new resource.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MySQLInstanceV3DatastoreParameters struct {

	// Specifies the database engine. Only "gaussdb-mysql" is supported now.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Engine *string `json:"engine" tf:"engine,omitempty"`

	// Specifies the database version. Only "8.0" is supported now.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type MySQLInstanceV3InitParameters struct {

	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	AvailabilityZoneMode *string `json:"availabilityZoneMode,omitempty" tf:"availability_zone_mode,omitempty"`

	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy []BackupStrategyInitParameters `json:"backupStrategy,omitempty" tf:"backup_strategy,omitempty"`

	// Specifies the configuration ID.
	ConfigurationID *string `json:"configurationId,omitempty" tf:"configuration_id,omitempty"`

	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	Datastore []MySQLInstanceV3DatastoreInitParameters `json:"datastore,omitempty" tf:"datastore,omitempty"`

	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	DedicatedResourceID *string `json:"dedicatedResourceId,omitempty" tf:"dedicated_resource_id,omitempty"`

	// Specifies the enterprise project id. Required if EPS enabled.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the instance specifications.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	MasterAvailabilityZone *string `json:"masterAvailabilityZone,omitempty" tf:"master_availability_zone,omitempty"`

	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be 4 to 64 characters in length and start with a letter.
	// It is case-sensitive and can contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the database password. The value must be 8 to 32 characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+?
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Specifies the database port.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Specifies the count of read replicas. Defaults to 1.
	ReadReplicas *float64 `json:"readReplicas,omitempty" tf:"read_replicas,omitempty"`

	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled *bool `json:"secondsLevelMonitoringEnabled,omitempty" tf:"seconds_level_monitoring_enabled,omitempty"`

	// Specifies the seconds level collection period.
	SecondsLevelMonitoringPeriod *float64 `json:"secondsLevelMonitoringPeriod,omitempty" tf:"seconds_level_monitoring_period,omitempty"`

	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Whether the kernel table name is case sensitive. The value can
	// be true (case sensitive) and false (case insensitive). Defaults to false. This parameter only works during
	// creation.
	TableNameCaseSensitivity *bool `json:"tableNameCaseSensitivity,omitempty" tf:"table_name_case_sensitivity,omitempty"`

	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`

	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of 10 GB. Only valid when in prePaid mode.
	VolumeSize *float64 `json:"volumeSize,omitempty" tf:"volume_size,omitempty"`
}

type MySQLInstanceV3Observation struct {

	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	AvailabilityZoneMode *string `json:"availabilityZoneMode,omitempty" tf:"availability_zone_mode,omitempty"`

	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy []BackupStrategyObservation `json:"backupStrategy,omitempty" tf:"backup_strategy,omitempty"`

	// Specifies the configuration ID.
	ConfigurationID *string `json:"configurationId,omitempty" tf:"configuration_id,omitempty"`

	// Indicates the creation time in the yyyy-mm-ddThh:mm:ssZ format.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Indicates the default username.
	DBUserName *string `json:"dbUserName,omitempty" tf:"db_user_name,omitempty"`

	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	Datastore []MySQLInstanceV3DatastoreObservation `json:"datastore,omitempty" tf:"datastore,omitempty"`

	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	DedicatedResourceID *string `json:"dedicatedResourceId,omitempty" tf:"dedicated_resource_id,omitempty"`

	// Specifies the enterprise project id. Required if EPS enabled.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the instance specifications.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Indicates the DB instance ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	MasterAvailabilityZone *string `json:"masterAvailabilityZone,omitempty" tf:"master_availability_zone,omitempty"`

	// Indicates the instance mode.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be 4 to 64 characters in length and start with a letter.
	// It is case-sensitive and can contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the instance nodes information.
	// The nodes structure is documented below.
	Nodes []NodesObservation `json:"nodes,omitempty" tf:"nodes,omitempty"`

	// Specifies the database port.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Indicates the private domain name.
	PrivateDNSName *string `json:"privateDnsName,omitempty" tf:"private_dns_name,omitempty"`

	// Indicates the private IP address of the DB instance.
	PrivateWriteIP *string `json:"privateWriteIp,omitempty" tf:"private_write_ip,omitempty"`

	// Specifies the count of read replicas. Defaults to 1.
	ReadReplicas *float64 `json:"readReplicas,omitempty" tf:"read_replicas,omitempty"`

	// Indicates the DB instance region.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled *bool `json:"secondsLevelMonitoringEnabled,omitempty" tf:"seconds_level_monitoring_enabled,omitempty"`

	// Specifies the seconds level collection period.
	SecondsLevelMonitoringPeriod *float64 `json:"secondsLevelMonitoringPeriod,omitempty" tf:"seconds_level_monitoring_period,omitempty"`

	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Indicates the DB instance status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Whether the kernel table name is case sensitive. The value can
	// be true (case sensitive) and false (case insensitive). Defaults to false. This parameter only works during
	// creation.
	TableNameCaseSensitivity *bool `json:"tableNameCaseSensitivity,omitempty" tf:"table_name_case_sensitivity,omitempty"`

	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`

	// Indicates the Update time in the yyyy-mm-ddThh:mm:ssZ format.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of 10 GB. Only valid when in prePaid mode.
	VolumeSize *float64 `json:"volumeSize,omitempty" tf:"volume_size,omitempty"`
}

type MySQLInstanceV3Parameters struct {

	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AvailabilityZoneMode *string `json:"availabilityZoneMode,omitempty" tf:"availability_zone_mode,omitempty"`

	// Specifies the advanced backup policy. Structure is documented below.
	// +kubebuilder:validation:Optional
	BackupStrategy []BackupStrategyParameters `json:"backupStrategy,omitempty" tf:"backup_strategy,omitempty"`

	// Specifies the configuration ID.
	// +kubebuilder:validation:Optional
	ConfigurationID *string `json:"configurationId,omitempty" tf:"configuration_id,omitempty"`

	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Datastore []MySQLInstanceV3DatastoreParameters `json:"datastore,omitempty" tf:"datastore,omitempty"`

	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	// +kubebuilder:validation:Optional
	DedicatedResourceID *string `json:"dedicatedResourceId,omitempty" tf:"dedicated_resource_id,omitempty"`

	// Specifies the enterprise project id. Required if EPS enabled.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the instance specifications.
	// +kubebuilder:validation:Optional
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	// +kubebuilder:validation:Optional
	MasterAvailabilityZone *string `json:"masterAvailabilityZone,omitempty" tf:"master_availability_zone,omitempty"`

	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be 4 to 64 characters in length and start with a letter.
	// It is case-sensitive and can contain only letters, digits, hyphens (-), and underscores (_).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the database password. The value must be 8 to 32 characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+?
	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Specifies the database port.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Specifies the count of read replicas. Defaults to 1.
	// +kubebuilder:validation:Optional
	ReadReplicas *float64 `json:"readReplicas,omitempty" tf:"read_replicas,omitempty"`

	// Specifies whether to enable seconds level monitoring.
	// +kubebuilder:validation:Optional
	SecondsLevelMonitoringEnabled *bool `json:"secondsLevelMonitoringEnabled,omitempty" tf:"seconds_level_monitoring_enabled,omitempty"`

	// Specifies the seconds level collection period.
	// +kubebuilder:validation:Optional
	SecondsLevelMonitoringPeriod *float64 `json:"secondsLevelMonitoringPeriod,omitempty" tf:"seconds_level_monitoring_period,omitempty"`

	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Whether the kernel table name is case sensitive. The value can
	// be true (case sensitive) and false (case insensitive). Defaults to false. This parameter only works during
	// creation.
	// +kubebuilder:validation:Optional
	TableNameCaseSensitivity *bool `json:"tableNameCaseSensitivity,omitempty" tf:"table_name_case_sensitivity,omitempty"`

	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	// +kubebuilder:validation:Optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`

	// Specifies the VPC ID. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of 10 GB. Only valid when in prePaid mode.
	// +kubebuilder:validation:Optional
	VolumeSize *float64 `json:"volumeSize,omitempty" tf:"volume_size,omitempty"`
}

type NodesInitParameters struct {
}

type NodesObservation struct {

	// Indicates the availability zone where the node resides.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Indicates the node ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the node name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the private IP address of a node.
	PrivateReadIP *string `json:"privateReadIp,omitempty" tf:"private_read_ip,omitempty"`

	// Indicates the node status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Indicates the node type: master or slave.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NodesParameters struct {
}

// MySQLInstanceV3Spec defines the desired state of MySQLInstanceV3
type MySQLInstanceV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MySQLInstanceV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MySQLInstanceV3InitParameters `json:"initProvider,omitempty"`
}

// MySQLInstanceV3Status defines the observed state of MySQLInstanceV3.
type MySQLInstanceV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MySQLInstanceV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MySQLInstanceV3 is the Schema for the MySQLInstanceV3s API. Manages an TaurusDb mysql instance resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type MySQLInstanceV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.flavor) || (has(self.initProvider) && has(self.initProvider.flavor))",message="spec.forProvider.flavor is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.passwordSecretRef)",message="spec.forProvider.passwordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subnetId) || (has(self.initProvider) && has(self.initProvider.subnetId))",message="spec.forProvider.subnetId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vpcId) || (has(self.initProvider) && has(self.initProvider.vpcId))",message="spec.forProvider.vpcId is a required parameter"
	Spec   MySQLInstanceV3Spec   `json:"spec"`
	Status MySQLInstanceV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MySQLInstanceV3List contains a list of MySQLInstanceV3s
type MySQLInstanceV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MySQLInstanceV3 `json:"items"`
}

// Repository type metadata.
var (
	MySQLInstanceV3_Kind             = "MySQLInstanceV3"
	MySQLInstanceV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MySQLInstanceV3_Kind}.String()
	MySQLInstanceV3_KindAPIVersion   = MySQLInstanceV3_Kind + "." + CRDGroupVersion.String()
	MySQLInstanceV3_GroupVersionKind = CRDGroupVersion.WithKind(MySQLInstanceV3_Kind)
)

func init() {
	SchemeBuilder.Register(&MySQLInstanceV3{}, &MySQLInstanceV3List{})
}
