// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MySQLQuotaV3InitParameters struct {

	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Indicates the enterprise project name.
	EnterpriseProjectName *string `json:"enterpriseProjectName,omitempty" tf:"enterprise_project_name,omitempty"`

	// Specifies the instance quantity quota. Value range: -1 to 100000. The value
	// -1 indicates no limit. If there are already instances created, this parameter value must be greater than the number
	// of existing instances. Defaults to -1.
	InstanceQuota *float64 `json:"instanceQuota,omitempty" tf:"instance_quota,omitempty"`

	// Specifies the memory quota in GB. Value range: -1 to 2147483646. The value -1
	// indicates no limit. If there are already instances created, this parameter value must be greater than the used memory
	// size. Defaults to -1.
	RAMQuota *float64 `json:"ramQuota,omitempty" tf:"ram_quota,omitempty"`

	// Specifies the vCPU quota. Value range: -1 to 2147483646. The value -1
	// indicates no limit. If there are already instances created, this parameter value must be greater than the number of
	// used vCPUs. Defaults to -1.
	VcpusQuota *float64 `json:"vcpusQuota,omitempty" tf:"vcpus_quota,omitempty"`
}

type MySQLQuotaV3Observation struct {

	// Indicates the remaining instance quota.
	AvailabilityInstanceQuota *float64 `json:"availabilityInstanceQuota,omitempty" tf:"availability_instance_quota,omitempty"`

	// Indicates the remaining memory quota.
	AvailabilityRAMQuota *float64 `json:"availabilityRamQuota,omitempty" tf:"availability_ram_quota,omitempty"`

	// Indicates the remaining vCPU quota.
	AvailabilityVcpusQuota *float64 `json:"availabilityVcpusQuota,omitempty" tf:"availability_vcpus_quota,omitempty"`

	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Indicates the enterprise project name.
	EnterpriseProjectName *string `json:"enterpriseProjectName,omitempty" tf:"enterprise_project_name,omitempty"`

	// Indicates the resource ID. The value is enterprise_project_id.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the instance quantity quota. Value range: -1 to 100000. The value
	// -1 indicates no limit. If there are already instances created, this parameter value must be greater than the number
	// of existing instances. Defaults to -1.
	InstanceQuota *float64 `json:"instanceQuota,omitempty" tf:"instance_quota,omitempty"`

	// Specifies the memory quota in GB. Value range: -1 to 2147483646. The value -1
	// indicates no limit. If there are already instances created, this parameter value must be greater than the used memory
	// size. Defaults to -1.
	RAMQuota *float64 `json:"ramQuota,omitempty" tf:"ram_quota,omitempty"`

	// Indicates the region in which to create the resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the vCPU quota. Value range: -1 to 2147483646. The value -1
	// indicates no limit. If there are already instances created, this parameter value must be greater than the number of
	// used vCPUs. Defaults to -1.
	VcpusQuota *float64 `json:"vcpusQuota,omitempty" tf:"vcpus_quota,omitempty"`
}

type MySQLQuotaV3Parameters struct {

	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Indicates the enterprise project name.
	// +kubebuilder:validation:Optional
	EnterpriseProjectName *string `json:"enterpriseProjectName,omitempty" tf:"enterprise_project_name,omitempty"`

	// Specifies the instance quantity quota. Value range: -1 to 100000. The value
	// -1 indicates no limit. If there are already instances created, this parameter value must be greater than the number
	// of existing instances. Defaults to -1.
	// +kubebuilder:validation:Optional
	InstanceQuota *float64 `json:"instanceQuota,omitempty" tf:"instance_quota,omitempty"`

	// Specifies the memory quota in GB. Value range: -1 to 2147483646. The value -1
	// indicates no limit. If there are already instances created, this parameter value must be greater than the used memory
	// size. Defaults to -1.
	// +kubebuilder:validation:Optional
	RAMQuota *float64 `json:"ramQuota,omitempty" tf:"ram_quota,omitempty"`

	// Specifies the vCPU quota. Value range: -1 to 2147483646. The value -1
	// indicates no limit. If there are already instances created, this parameter value must be greater than the number of
	// used vCPUs. Defaults to -1.
	// +kubebuilder:validation:Optional
	VcpusQuota *float64 `json:"vcpusQuota,omitempty" tf:"vcpus_quota,omitempty"`
}

// MySQLQuotaV3Spec defines the desired state of MySQLQuotaV3
type MySQLQuotaV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MySQLQuotaV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MySQLQuotaV3InitParameters `json:"initProvider,omitempty"`
}

// MySQLQuotaV3Status defines the observed state of MySQLQuotaV3.
type MySQLQuotaV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MySQLQuotaV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MySQLQuotaV3 is the Schema for the MySQLQuotaV3s API. Manages a TaurusDB MySQL quota resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type MySQLQuotaV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enterpriseProjectId) || (has(self.initProvider) && has(self.initProvider.enterpriseProjectId))",message="spec.forProvider.enterpriseProjectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enterpriseProjectName) || (has(self.initProvider) && has(self.initProvider.enterpriseProjectName))",message="spec.forProvider.enterpriseProjectName is a required parameter"
	Spec   MySQLQuotaV3Spec   `json:"spec"`
	Status MySQLQuotaV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MySQLQuotaV3List contains a list of MySQLQuotaV3s
type MySQLQuotaV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MySQLQuotaV3 `json:"items"`
}

// Repository type metadata.
var (
	MySQLQuotaV3_Kind             = "MySQLQuotaV3"
	MySQLQuotaV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MySQLQuotaV3_Kind}.String()
	MySQLQuotaV3_KindAPIVersion   = MySQLQuotaV3_Kind + "." + CRDGroupVersion.String()
	MySQLQuotaV3_GroupVersionKind = CRDGroupVersion.WithKind(MySQLQuotaV3_Kind)
)

func init() {
	SchemeBuilder.Register(&MySQLQuotaV3{}, &MySQLQuotaV3List{})
}
