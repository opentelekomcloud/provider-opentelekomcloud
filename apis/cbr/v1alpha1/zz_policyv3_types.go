// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OperationDefinitionInitParameters struct {

	// Specifies the number of retained daily backups. The latest
	// backup of each day is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	DayBackups *float64 `json:"dayBackups,omitempty" tf:"day_backups,omitempty"`

	// Maximum number of retained backups. The value can be -1 or ranges
	// from 0 to 99999. If the value is set to -1, the backups will not be cleared even though
	// the configured retained backup quantity is exceeded. If this parameter and retention_duration_days
	// are both left blank, the backups will be retained permanently.
	MaxBackups *float64 `json:"maxBackups,omitempty" tf:"max_backups,omitempty"`

	// Specifies the number of retained monthly backups. The latest
	// backup of each month is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges from
	// 0 to 100. If this parameter is configured, timezone is mandatory.
	MonthBackups *float64 `json:"monthBackups,omitempty" tf:"month_backups,omitempty"`

	// Duration of retaining a backup, in days.
	// The maximum value is 99999. -1 indicates that the backups will not be cleared based on
	// the retention duration. If this parameter and max_backups are left blank at the same time,
	// the backups will be retained permanently.
	RetentionDurationDays *float64 `json:"retentionDurationDays,omitempty" tf:"retention_duration_days,omitempty"`

	// Time zone where the user is located, for example, UTC+00:00.
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`

	// Specifies the number of retained weekly backups. The latest
	// backup of each week is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	WeekBackups *float64 `json:"weekBackups,omitempty" tf:"week_backups,omitempty"`

	// Specifies the number of retained yearly backups. The latest
	// backup of each year is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	YearBackups *float64 `json:"yearBackups,omitempty" tf:"year_backups,omitempty"`
}

type OperationDefinitionObservation struct {

	// Specifies the number of retained daily backups. The latest
	// backup of each day is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	DayBackups *float64 `json:"dayBackups,omitempty" tf:"day_backups,omitempty"`

	// Maximum number of retained backups. The value can be -1 or ranges
	// from 0 to 99999. If the value is set to -1, the backups will not be cleared even though
	// the configured retained backup quantity is exceeded. If this parameter and retention_duration_days
	// are both left blank, the backups will be retained permanently.
	MaxBackups *float64 `json:"maxBackups,omitempty" tf:"max_backups,omitempty"`

	// Specifies the number of retained monthly backups. The latest
	// backup of each month is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges from
	// 0 to 100. If this parameter is configured, timezone is mandatory.
	MonthBackups *float64 `json:"monthBackups,omitempty" tf:"month_backups,omitempty"`

	// Duration of retaining a backup, in days.
	// The maximum value is 99999. -1 indicates that the backups will not be cleared based on
	// the retention duration. If this parameter and max_backups are left blank at the same time,
	// the backups will be retained permanently.
	RetentionDurationDays *float64 `json:"retentionDurationDays,omitempty" tf:"retention_duration_days,omitempty"`

	// Time zone where the user is located, for example, UTC+00:00.
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`

	// Specifies the number of retained weekly backups. The latest
	// backup of each week is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	WeekBackups *float64 `json:"weekBackups,omitempty" tf:"week_backups,omitempty"`

	// Specifies the number of retained yearly backups. The latest
	// backup of each year is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	YearBackups *float64 `json:"yearBackups,omitempty" tf:"year_backups,omitempty"`
}

type OperationDefinitionParameters struct {

	// Specifies the number of retained daily backups. The latest
	// backup of each day is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	// +kubebuilder:validation:Optional
	DayBackups *float64 `json:"dayBackups,omitempty" tf:"day_backups,omitempty"`

	// Maximum number of retained backups. The value can be -1 or ranges
	// from 0 to 99999. If the value is set to -1, the backups will not be cleared even though
	// the configured retained backup quantity is exceeded. If this parameter and retention_duration_days
	// are both left blank, the backups will be retained permanently.
	// +kubebuilder:validation:Optional
	MaxBackups *float64 `json:"maxBackups,omitempty" tf:"max_backups,omitempty"`

	// Specifies the number of retained monthly backups. The latest
	// backup of each month is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges from
	// 0 to 100. If this parameter is configured, timezone is mandatory.
	// +kubebuilder:validation:Optional
	MonthBackups *float64 `json:"monthBackups,omitempty" tf:"month_backups,omitempty"`

	// Duration of retaining a backup, in days.
	// The maximum value is 99999. -1 indicates that the backups will not be cleared based on
	// the retention duration. If this parameter and max_backups are left blank at the same time,
	// the backups will be retained permanently.
	// +kubebuilder:validation:Optional
	RetentionDurationDays *float64 `json:"retentionDurationDays,omitempty" tf:"retention_duration_days,omitempty"`

	// Time zone where the user is located, for example, UTC+00:00.
	// +kubebuilder:validation:Optional
	Timezone *string `json:"timezone" tf:"timezone,omitempty"`

	// Specifies the number of retained weekly backups. The latest
	// backup of each week is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	// +kubebuilder:validation:Optional
	WeekBackups *float64 `json:"weekBackups,omitempty" tf:"week_backups,omitempty"`

	// Specifies the number of retained yearly backups. The latest
	// backup of each year is saved in the long term. This parameter can be effective together
	// with the maximum number of retained backups specified by max_backups. The value ranges
	// from 0 to 100. If this parameter is configured, timezone is mandatory.
	// +kubebuilder:validation:Optional
	YearBackups *float64 `json:"yearBackups,omitempty" tf:"year_backups,omitempty"`
}

type PolicyV3InitParameters struct {

	// Specifies the ID of the replication destination project, which is
	// mandatory for cross-region replication. Required if operation_type is replication.
	DestinationProjectID *string `json:"destinationProjectId,omitempty" tf:"destination_project_id,omitempty"`

	// Specifies the name of the replication destination region, which is mandatory
	// for cross-region replication. Required if operation_type is replication.
	DestinationRegion *string `json:"destinationRegion,omitempty" tf:"destination_region,omitempty"`

	// Whether to enable the policy. Default value is true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the policy name. The value consists of 1 to 64 characters
	// and can contain only letters, digits, underscores (_), and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Scheduling parameter. See reference below.
	OperationDefinition []OperationDefinitionInitParameters `json:"operationDefinition,omitempty" tf:"operation_definition,omitempty"`

	// Policy type. Enumeration values: backup, replication.
	OperationType *string `json:"operationType,omitempty" tf:"operation_type,omitempty"`

	// Scheduling rule. In the replication policy, you are advised
	// to set one time point for one day. A maximum of 24 rules can be configured. The scheduling
	// rule complies with iCalendar RFC 2445, but it supports only parameters FREQ, BYDAY, BYHOUR,
	// BYMINUTE, and INTERVAL. FREQ can be set only to WEEKLY and DAILY.
	TriggerPattern []*string `json:"triggerPattern,omitempty" tf:"trigger_pattern,omitempty"`
}

type PolicyV3Observation struct {

	// Specifies the ID of the replication destination project, which is
	// mandatory for cross-region replication. Required if operation_type is replication.
	DestinationProjectID *string `json:"destinationProjectId,omitempty" tf:"destination_project_id,omitempty"`

	// Specifies the name of the replication destination region, which is mandatory
	// for cross-region replication. Required if operation_type is replication.
	DestinationRegion *string `json:"destinationRegion,omitempty" tf:"destination_region,omitempty"`

	// Whether to enable the policy. Default value is true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the policy name. The value consists of 1 to 64 characters
	// and can contain only letters, digits, underscores (_), and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Scheduling parameter. See reference below.
	OperationDefinition []OperationDefinitionObservation `json:"operationDefinition,omitempty" tf:"operation_definition,omitempty"`

	// Policy type. Enumeration values: backup, replication.
	OperationType *string `json:"operationType,omitempty" tf:"operation_type,omitempty"`

	// Specifies the region of the CBRv3 policy.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Scheduling rule. In the replication policy, you are advised
	// to set one time point for one day. A maximum of 24 rules can be configured. The scheduling
	// rule complies with iCalendar RFC 2445, but it supports only parameters FREQ, BYDAY, BYHOUR,
	// BYMINUTE, and INTERVAL. FREQ can be set only to WEEKLY and DAILY.
	TriggerPattern []*string `json:"triggerPattern,omitempty" tf:"trigger_pattern,omitempty"`
}

type PolicyV3Parameters struct {

	// Specifies the ID of the replication destination project, which is
	// mandatory for cross-region replication. Required if operation_type is replication.
	// +kubebuilder:validation:Optional
	DestinationProjectID *string `json:"destinationProjectId,omitempty" tf:"destination_project_id,omitempty"`

	// Specifies the name of the replication destination region, which is mandatory
	// for cross-region replication. Required if operation_type is replication.
	// +kubebuilder:validation:Optional
	DestinationRegion *string `json:"destinationRegion,omitempty" tf:"destination_region,omitempty"`

	// Whether to enable the policy. Default value is true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the policy name. The value consists of 1 to 64 characters
	// and can contain only letters, digits, underscores (_), and hyphens (-).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Scheduling parameter. See reference below.
	// +kubebuilder:validation:Optional
	OperationDefinition []OperationDefinitionParameters `json:"operationDefinition,omitempty" tf:"operation_definition,omitempty"`

	// Policy type. Enumeration values: backup, replication.
	// +kubebuilder:validation:Optional
	OperationType *string `json:"operationType,omitempty" tf:"operation_type,omitempty"`

	// Scheduling rule. In the replication policy, you are advised
	// to set one time point for one day. A maximum of 24 rules can be configured. The scheduling
	// rule complies with iCalendar RFC 2445, but it supports only parameters FREQ, BYDAY, BYHOUR,
	// BYMINUTE, and INTERVAL. FREQ can be set only to WEEKLY and DAILY.
	// +kubebuilder:validation:Optional
	TriggerPattern []*string `json:"triggerPattern,omitempty" tf:"trigger_pattern,omitempty"`
}

// PolicyV3Spec defines the desired state of PolicyV3
type PolicyV3Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyV3Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PolicyV3InitParameters `json:"initProvider,omitempty"`
}

// PolicyV3Status defines the observed state of PolicyV3.
type PolicyV3Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyV3Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PolicyV3 is the Schema for the PolicyV3s API. Manages a CBR Policy resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type PolicyV3 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.operationType) || (has(self.initProvider) && has(self.initProvider.operationType))",message="spec.forProvider.operationType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.triggerPattern) || (has(self.initProvider) && has(self.initProvider.triggerPattern))",message="spec.forProvider.triggerPattern is a required parameter"
	Spec   PolicyV3Spec   `json:"spec"`
	Status PolicyV3Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyV3List contains a list of PolicyV3s
type PolicyV3List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyV3 `json:"items"`
}

// Repository type metadata.
var (
	PolicyV3_Kind             = "PolicyV3"
	PolicyV3_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyV3_Kind}.String()
	PolicyV3_KindAPIVersion   = PolicyV3_Kind + "." + CRDGroupVersion.String()
	PolicyV3_GroupVersionKind = CRDGroupVersion.WithKind(PolicyV3_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyV3{}, &PolicyV3List{})
}
