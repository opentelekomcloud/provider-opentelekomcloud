//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BillingInitParameters) DeepCopyInto(out *BillingInitParameters) {
	*out = *in
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.CloudType != nil {
		in, out := &in.CloudType, &out.CloudType
		*out = new(string)
		**out = **in
	}
	if in.ConsistentLevel != nil {
		in, out := &in.ConsistentLevel, &out.ConsistentLevel
		*out = new(string)
		**out = **in
	}
	if in.ConsoleURL != nil {
		in, out := &in.ConsoleURL, &out.ConsoleURL
		*out = new(string)
		**out = **in
	}
	if in.ExtraInfo != nil {
		in, out := &in.ExtraInfo, &out.ExtraInfo
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoPay != nil {
		in, out := &in.IsAutoPay, &out.IsAutoPay
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoRenew != nil {
		in, out := &in.IsAutoRenew, &out.IsAutoRenew
		*out = new(bool)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PeriodNum != nil {
		in, out := &in.PeriodNum, &out.PeriodNum
		*out = new(float64)
		**out = **in
	}
	if in.PeriodType != nil {
		in, out := &in.PeriodType, &out.PeriodType
		*out = new(string)
		**out = **in
	}
	if in.ProtectType != nil {
		in, out := &in.ProtectType, &out.ProtectType
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BillingInitParameters.
func (in *BillingInitParameters) DeepCopy() *BillingInitParameters {
	if in == nil {
		return nil
	}
	out := new(BillingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BillingObservation) DeepCopyInto(out *BillingObservation) {
	*out = *in
	if in.Allocated != nil {
		in, out := &in.Allocated, &out.Allocated
		*out = new(float64)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.CloudType != nil {
		in, out := &in.CloudType, &out.CloudType
		*out = new(string)
		**out = **in
	}
	if in.ConsistentLevel != nil {
		in, out := &in.ConsistentLevel, &out.ConsistentLevel
		*out = new(string)
		**out = **in
	}
	if in.ConsoleURL != nil {
		in, out := &in.ConsoleURL, &out.ConsoleURL
		*out = new(string)
		**out = **in
	}
	if in.ExtraInfo != nil {
		in, out := &in.ExtraInfo, &out.ExtraInfo
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FrozenScene != nil {
		in, out := &in.FrozenScene, &out.FrozenScene
		*out = new(string)
		**out = **in
	}
	if in.IsAutoPay != nil {
		in, out := &in.IsAutoPay, &out.IsAutoPay
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoRenew != nil {
		in, out := &in.IsAutoRenew, &out.IsAutoRenew
		*out = new(bool)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.OrderID != nil {
		in, out := &in.OrderID, &out.OrderID
		*out = new(string)
		**out = **in
	}
	if in.PeriodNum != nil {
		in, out := &in.PeriodNum, &out.PeriodNum
		*out = new(float64)
		**out = **in
	}
	if in.PeriodType != nil {
		in, out := &in.PeriodType, &out.PeriodType
		*out = new(string)
		**out = **in
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(string)
		**out = **in
	}
	if in.ProtectType != nil {
		in, out := &in.ProtectType, &out.ProtectType
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.SpecCode != nil {
		in, out := &in.SpecCode, &out.SpecCode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageUnit != nil {
		in, out := &in.StorageUnit, &out.StorageUnit
		*out = new(string)
		**out = **in
	}
	if in.Used != nil {
		in, out := &in.Used, &out.Used
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BillingObservation.
func (in *BillingObservation) DeepCopy() *BillingObservation {
	if in == nil {
		return nil
	}
	out := new(BillingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BillingParameters) DeepCopyInto(out *BillingParameters) {
	*out = *in
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.CloudType != nil {
		in, out := &in.CloudType, &out.CloudType
		*out = new(string)
		**out = **in
	}
	if in.ConsistentLevel != nil {
		in, out := &in.ConsistentLevel, &out.ConsistentLevel
		*out = new(string)
		**out = **in
	}
	if in.ConsoleURL != nil {
		in, out := &in.ConsoleURL, &out.ConsoleURL
		*out = new(string)
		**out = **in
	}
	if in.ExtraInfo != nil {
		in, out := &in.ExtraInfo, &out.ExtraInfo
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoPay != nil {
		in, out := &in.IsAutoPay, &out.IsAutoPay
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoRenew != nil {
		in, out := &in.IsAutoRenew, &out.IsAutoRenew
		*out = new(bool)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PeriodNum != nil {
		in, out := &in.PeriodNum, &out.PeriodNum
		*out = new(float64)
		**out = **in
	}
	if in.PeriodType != nil {
		in, out := &in.PeriodType, &out.PeriodType
		*out = new(string)
		**out = **in
	}
	if in.ProtectType != nil {
		in, out := &in.ProtectType, &out.ProtectType
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BillingParameters.
func (in *BillingParameters) DeepCopy() *BillingParameters {
	if in == nil {
		return nil
	}
	out := new(BillingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindRulesInitParameters) DeepCopyInto(out *BindRulesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindRulesInitParameters.
func (in *BindRulesInitParameters) DeepCopy() *BindRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(BindRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindRulesObservation) DeepCopyInto(out *BindRulesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindRulesObservation.
func (in *BindRulesObservation) DeepCopy() *BindRulesObservation {
	if in == nil {
		return nil
	}
	out := new(BindRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindRulesParameters) DeepCopyInto(out *BindRulesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindRulesParameters.
func (in *BindRulesParameters) DeepCopy() *BindRulesParameters {
	if in == nil {
		return nil
	}
	out := new(BindRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationDefinitionInitParameters) DeepCopyInto(out *OperationDefinitionInitParameters) {
	*out = *in
	if in.DayBackups != nil {
		in, out := &in.DayBackups, &out.DayBackups
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(float64)
		**out = **in
	}
	if in.MonthBackups != nil {
		in, out := &in.MonthBackups, &out.MonthBackups
		*out = new(float64)
		**out = **in
	}
	if in.RetentionDurationDays != nil {
		in, out := &in.RetentionDurationDays, &out.RetentionDurationDays
		*out = new(float64)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekBackups != nil {
		in, out := &in.WeekBackups, &out.WeekBackups
		*out = new(float64)
		**out = **in
	}
	if in.YearBackups != nil {
		in, out := &in.YearBackups, &out.YearBackups
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationDefinitionInitParameters.
func (in *OperationDefinitionInitParameters) DeepCopy() *OperationDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperationDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationDefinitionObservation) DeepCopyInto(out *OperationDefinitionObservation) {
	*out = *in
	if in.DayBackups != nil {
		in, out := &in.DayBackups, &out.DayBackups
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(float64)
		**out = **in
	}
	if in.MonthBackups != nil {
		in, out := &in.MonthBackups, &out.MonthBackups
		*out = new(float64)
		**out = **in
	}
	if in.RetentionDurationDays != nil {
		in, out := &in.RetentionDurationDays, &out.RetentionDurationDays
		*out = new(float64)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekBackups != nil {
		in, out := &in.WeekBackups, &out.WeekBackups
		*out = new(float64)
		**out = **in
	}
	if in.YearBackups != nil {
		in, out := &in.YearBackups, &out.YearBackups
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationDefinitionObservation.
func (in *OperationDefinitionObservation) DeepCopy() *OperationDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(OperationDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationDefinitionParameters) DeepCopyInto(out *OperationDefinitionParameters) {
	*out = *in
	if in.DayBackups != nil {
		in, out := &in.DayBackups, &out.DayBackups
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(float64)
		**out = **in
	}
	if in.MonthBackups != nil {
		in, out := &in.MonthBackups, &out.MonthBackups
		*out = new(float64)
		**out = **in
	}
	if in.RetentionDurationDays != nil {
		in, out := &in.RetentionDurationDays, &out.RetentionDurationDays
		*out = new(float64)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekBackups != nil {
		in, out := &in.WeekBackups, &out.WeekBackups
		*out = new(float64)
		**out = **in
	}
	if in.YearBackups != nil {
		in, out := &in.YearBackups, &out.YearBackups
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationDefinitionParameters.
func (in *OperationDefinitionParameters) DeepCopy() *OperationDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(OperationDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyInitParameters) DeepCopyInto(out *PolicyInitParameters) {
	*out = *in
	if in.DestinationVaultID != nil {
		in, out := &in.DestinationVaultID, &out.DestinationVaultID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyInitParameters.
func (in *PolicyInitParameters) DeepCopy() *PolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.DestinationVaultID != nil {
		in, out := &in.DestinationVaultID, &out.DestinationVaultID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.DestinationVaultID != nil {
		in, out := &in.DestinationVaultID, &out.DestinationVaultID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyV3) DeepCopyInto(out *PolicyV3) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyV3.
func (in *PolicyV3) DeepCopy() *PolicyV3 {
	if in == nil {
		return nil
	}
	out := new(PolicyV3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyV3) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyV3InitParameters) DeepCopyInto(out *PolicyV3InitParameters) {
	*out = *in
	if in.DestinationProjectID != nil {
		in, out := &in.DestinationProjectID, &out.DestinationProjectID
		*out = new(string)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperationDefinition != nil {
		in, out := &in.OperationDefinition, &out.OperationDefinition
		*out = make([]OperationDefinitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperationType != nil {
		in, out := &in.OperationType, &out.OperationType
		*out = new(string)
		**out = **in
	}
	if in.TriggerPattern != nil {
		in, out := &in.TriggerPattern, &out.TriggerPattern
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyV3InitParameters.
func (in *PolicyV3InitParameters) DeepCopy() *PolicyV3InitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyV3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyV3List) DeepCopyInto(out *PolicyV3List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PolicyV3, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyV3List.
func (in *PolicyV3List) DeepCopy() *PolicyV3List {
	if in == nil {
		return nil
	}
	out := new(PolicyV3List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyV3List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyV3Observation) DeepCopyInto(out *PolicyV3Observation) {
	*out = *in
	if in.DestinationProjectID != nil {
		in, out := &in.DestinationProjectID, &out.DestinationProjectID
		*out = new(string)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperationDefinition != nil {
		in, out := &in.OperationDefinition, &out.OperationDefinition
		*out = make([]OperationDefinitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperationType != nil {
		in, out := &in.OperationType, &out.OperationType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TriggerPattern != nil {
		in, out := &in.TriggerPattern, &out.TriggerPattern
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyV3Observation.
func (in *PolicyV3Observation) DeepCopy() *PolicyV3Observation {
	if in == nil {
		return nil
	}
	out := new(PolicyV3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyV3Parameters) DeepCopyInto(out *PolicyV3Parameters) {
	*out = *in
	if in.DestinationProjectID != nil {
		in, out := &in.DestinationProjectID, &out.DestinationProjectID
		*out = new(string)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperationDefinition != nil {
		in, out := &in.OperationDefinition, &out.OperationDefinition
		*out = make([]OperationDefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperationType != nil {
		in, out := &in.OperationType, &out.OperationType
		*out = new(string)
		**out = **in
	}
	if in.TriggerPattern != nil {
		in, out := &in.TriggerPattern, &out.TriggerPattern
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyV3Parameters.
func (in *PolicyV3Parameters) DeepCopy() *PolicyV3Parameters {
	if in == nil {
		return nil
	}
	out := new(PolicyV3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyV3Spec) DeepCopyInto(out *PolicyV3Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyV3Spec.
func (in *PolicyV3Spec) DeepCopy() *PolicyV3Spec {
	if in == nil {
		return nil
	}
	out := new(PolicyV3Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyV3Status) DeepCopyInto(out *PolicyV3Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyV3Status.
func (in *PolicyV3Status) DeepCopy() *PolicyV3Status {
	if in == nil {
		return nil
	}
	out := new(PolicyV3Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceInitParameters) DeepCopyInto(out *ResourceInitParameters) {
	*out = *in
	if in.BackupCount != nil {
		in, out := &in.BackupCount, &out.BackupCount
		*out = new(float64)
		**out = **in
	}
	if in.BackupSize != nil {
		in, out := &in.BackupSize, &out.BackupSize
		*out = new(float64)
		**out = **in
	}
	if in.ExcludeVolumes != nil {
		in, out := &in.ExcludeVolumes, &out.ExcludeVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeVolumes != nil {
		in, out := &in.IncludeVolumes, &out.IncludeVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProtectStatus != nil {
		in, out := &in.ProtectStatus, &out.ProtectStatus
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceInitParameters.
func (in *ResourceInitParameters) DeepCopy() *ResourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceObservation) DeepCopyInto(out *ResourceObservation) {
	*out = *in
	if in.BackupCount != nil {
		in, out := &in.BackupCount, &out.BackupCount
		*out = new(float64)
		**out = **in
	}
	if in.BackupSize != nil {
		in, out := &in.BackupSize, &out.BackupSize
		*out = new(float64)
		**out = **in
	}
	if in.ExcludeVolumes != nil {
		in, out := &in.ExcludeVolumes, &out.ExcludeVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeVolumes != nil {
		in, out := &in.IncludeVolumes, &out.IncludeVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProtectStatus != nil {
		in, out := &in.ProtectStatus, &out.ProtectStatus
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceObservation.
func (in *ResourceObservation) DeepCopy() *ResourceObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceParameters) DeepCopyInto(out *ResourceParameters) {
	*out = *in
	if in.BackupCount != nil {
		in, out := &in.BackupCount, &out.BackupCount
		*out = new(float64)
		**out = **in
	}
	if in.BackupSize != nil {
		in, out := &in.BackupSize, &out.BackupSize
		*out = new(float64)
		**out = **in
	}
	if in.ExcludeVolumes != nil {
		in, out := &in.ExcludeVolumes, &out.ExcludeVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeVolumes != nil {
		in, out := &in.IncludeVolumes, &out.IncludeVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProtectStatus != nil {
		in, out := &in.ProtectStatus, &out.ProtectStatus
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceParameters.
func (in *ResourceParameters) DeepCopy() *ResourceParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultV3) DeepCopyInto(out *VaultV3) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultV3.
func (in *VaultV3) DeepCopy() *VaultV3 {
	if in == nil {
		return nil
	}
	out := new(VaultV3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VaultV3) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultV3InitParameters) DeepCopyInto(out *VaultV3InitParameters) {
	*out = *in
	if in.AutoBind != nil {
		in, out := &in.AutoBind, &out.AutoBind
		*out = new(bool)
		**out = **in
	}
	if in.AutoExpand != nil {
		in, out := &in.AutoExpand, &out.AutoExpand
		*out = new(bool)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Billing != nil {
		in, out := &in.Billing, &out.Billing
		*out = make([]BillingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BindRules != nil {
		in, out := &in.BindRules, &out.BindRules
		*out = make([]BindRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.Locked != nil {
		in, out := &in.Locked, &out.Locked
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = make([]ResourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultV3InitParameters.
func (in *VaultV3InitParameters) DeepCopy() *VaultV3InitParameters {
	if in == nil {
		return nil
	}
	out := new(VaultV3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultV3List) DeepCopyInto(out *VaultV3List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VaultV3, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultV3List.
func (in *VaultV3List) DeepCopy() *VaultV3List {
	if in == nil {
		return nil
	}
	out := new(VaultV3List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VaultV3List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultV3Observation) DeepCopyInto(out *VaultV3Observation) {
	*out = *in
	if in.AutoBind != nil {
		in, out := &in.AutoBind, &out.AutoBind
		*out = new(bool)
		**out = **in
	}
	if in.AutoExpand != nil {
		in, out := &in.AutoExpand, &out.AutoExpand
		*out = new(bool)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Billing != nil {
		in, out := &in.Billing, &out.Billing
		*out = make([]BillingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BindRules != nil {
		in, out := &in.BindRules, &out.BindRules
		*out = make([]BindRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Locked != nil {
		in, out := &in.Locked, &out.Locked
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProviderID != nil {
		in, out := &in.ProviderID, &out.ProviderID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = make([]ResourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultV3Observation.
func (in *VaultV3Observation) DeepCopy() *VaultV3Observation {
	if in == nil {
		return nil
	}
	out := new(VaultV3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultV3Parameters) DeepCopyInto(out *VaultV3Parameters) {
	*out = *in
	if in.AutoBind != nil {
		in, out := &in.AutoBind, &out.AutoBind
		*out = new(bool)
		**out = **in
	}
	if in.AutoExpand != nil {
		in, out := &in.AutoExpand, &out.AutoExpand
		*out = new(bool)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Billing != nil {
		in, out := &in.Billing, &out.Billing
		*out = make([]BillingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BindRules != nil {
		in, out := &in.BindRules, &out.BindRules
		*out = make([]BindRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.Locked != nil {
		in, out := &in.Locked, &out.Locked
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = make([]ResourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultV3Parameters.
func (in *VaultV3Parameters) DeepCopy() *VaultV3Parameters {
	if in == nil {
		return nil
	}
	out := new(VaultV3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultV3Spec) DeepCopyInto(out *VaultV3Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultV3Spec.
func (in *VaultV3Spec) DeepCopy() *VaultV3Spec {
	if in == nil {
		return nil
	}
	out := new(VaultV3Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultV3Status) DeepCopyInto(out *VaultV3Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultV3Status.
func (in *VaultV3Status) DeepCopy() *VaultV3Status {
	if in == nil {
		return nil
	}
	out := new(VaultV3Status)
	in.DeepCopyInto(out)
	return out
}
