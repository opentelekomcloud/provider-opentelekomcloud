// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPNCustomerGatewayV5InitParameters struct {

	// The BGP ASN number of the customer gateway.
	// The value ranges from 1 to 4,294,967,295, the default value is 65,000.
	// Set this parameter to 0 when id_type is set to fqdn.
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// Specifies the identifier type of customer gateway.
	// The value can be ip or fqdn. The default value is ip.
	IDType *string `json:"idType,omitempty" tf:"id_type,omitempty"`

	// Specifies the identifier of a customer gateway.
	// When id_type is set to ip, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When id_type is set to fqdn, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	IDValue *string `json:"idValue,omitempty" tf:"id_value,omitempty"`

	// The customer gateway name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the tags of the customer gateway.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type VPNCustomerGatewayV5Observation struct {

	// The BGP ASN number of the customer gateway.
	// The value ranges from 1 to 4,294,967,295, the default value is 65,000.
	// Set this parameter to 0 when id_type is set to fqdn.
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// The create time.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the identifier type of customer gateway.
	// The value can be ip or fqdn. The default value is ip.
	IDType *string `json:"idType,omitempty" tf:"id_type,omitempty"`

	// Specifies the identifier of a customer gateway.
	// When id_type is set to ip, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When id_type is set to fqdn, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	IDValue *string `json:"idValue,omitempty" tf:"id_value,omitempty"`

	// Specifies the IP address of the customer gateway.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// The customer gateway name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which resource is created.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the routing mode.
	RouteMode *string `json:"routeMode,omitempty" tf:"route_mode,omitempty"`

	// Specifies the tags of the customer gateway.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The update time.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type VPNCustomerGatewayV5Parameters struct {

	// The BGP ASN number of the customer gateway.
	// The value ranges from 1 to 4,294,967,295, the default value is 65,000.
	// Set this parameter to 0 when id_type is set to fqdn.
	// +kubebuilder:validation:Optional
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// Specifies the identifier type of customer gateway.
	// The value can be ip or fqdn. The default value is ip.
	// +kubebuilder:validation:Optional
	IDType *string `json:"idType,omitempty" tf:"id_type,omitempty"`

	// Specifies the identifier of a customer gateway.
	// When id_type is set to ip, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When id_type is set to fqdn, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	// +kubebuilder:validation:Optional
	IDValue *string `json:"idValue,omitempty" tf:"id_value,omitempty"`

	// The customer gateway name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the tags of the customer gateway.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// VPNCustomerGatewayV5Spec defines the desired state of VPNCustomerGatewayV5
type VPNCustomerGatewayV5Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPNCustomerGatewayV5Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VPNCustomerGatewayV5InitParameters `json:"initProvider,omitempty"`
}

// VPNCustomerGatewayV5Status defines the observed state of VPNCustomerGatewayV5.
type VPNCustomerGatewayV5Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPNCustomerGatewayV5Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VPNCustomerGatewayV5 is the Schema for the VPNCustomerGatewayV5s API. Manages a Enterprise VPN Customer Gateway Service resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type VPNCustomerGatewayV5 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   VPNCustomerGatewayV5Spec   `json:"spec"`
	Status VPNCustomerGatewayV5Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPNCustomerGatewayV5List contains a list of VPNCustomerGatewayV5s
type VPNCustomerGatewayV5List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPNCustomerGatewayV5 `json:"items"`
}

// Repository type metadata.
var (
	VPNCustomerGatewayV5_Kind             = "VPNCustomerGatewayV5"
	VPNCustomerGatewayV5_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPNCustomerGatewayV5_Kind}.String()
	VPNCustomerGatewayV5_KindAPIVersion   = VPNCustomerGatewayV5_Kind + "." + CRDGroupVersion.String()
	VPNCustomerGatewayV5_GroupVersionKind = CRDGroupVersion.WithKind(VPNCustomerGatewayV5_Kind)
)

func init() {
	SchemeBuilder.Register(&VPNCustomerGatewayV5{}, &VPNCustomerGatewayV5List{})
}
