// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type Eip1InitParameters struct {

	// The bandwidth name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	BandwidthName *string `json:"bandwidthName,omitempty" tf:"bandwidth_name,omitempty"`

	// Bandwidth size in Mbit/s. When the flavor is Basic, the value
	// cannot be greater than 100. When the flavor is Professional1, the value cannot be greater than 300.
	// When the flavor is Professional2, the value cannot be greater than 1,000.
	// Changing this parameter will create a new resource.
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// The charge mode of the bandwidth. The value can be bandwidth and traffic.
	// Changing this parameter will create a new resource.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The public IP ID.
	// Changing this parameter will create a new resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The EIP type.
	// Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Eip1Observation struct {

	// The bandwidth ID.
	BandwidthID *string `json:"bandwidthId,omitempty" tf:"bandwidth_id,omitempty"`

	// The bandwidth name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	BandwidthName *string `json:"bandwidthName,omitempty" tf:"bandwidth_name,omitempty"`

	// Bandwidth size in Mbit/s. When the flavor is Basic, the value
	// cannot be greater than 100. When the flavor is Professional1, the value cannot be greater than 300.
	// When the flavor is Professional2, the value cannot be greater than 1,000.
	// Changing this parameter will create a new resource.
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// The charge mode of the bandwidth. The value can be bandwidth and traffic.
	// Changing this parameter will create a new resource.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The public IP ID.
	// Changing this parameter will create a new resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The public IP address.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the EIP version.
	IPVersion *float64 `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// The EIP type.
	// Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Eip1Parameters struct {

	// The bandwidth name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	BandwidthName *string `json:"bandwidthName,omitempty" tf:"bandwidth_name,omitempty"`

	// Bandwidth size in Mbit/s. When the flavor is Basic, the value
	// cannot be greater than 100. When the flavor is Professional1, the value cannot be greater than 300.
	// When the flavor is Professional2, the value cannot be greater than 1,000.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// The charge mode of the bandwidth. The value can be bandwidth and traffic.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The public IP ID.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The EIP type.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Eip2InitParameters struct {

	// The bandwidth name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	BandwidthName *string `json:"bandwidthName,omitempty" tf:"bandwidth_name,omitempty"`

	// Bandwidth size in Mbit/s. When the flavor is Basic, the value
	// cannot be greater than 100. When the flavor is Professional1, the value cannot be greater than 300.
	// When the flavor is Professional2, the value cannot be greater than 1,000.
	// Changing this parameter will create a new resource.
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// The charge mode of the bandwidth. The value can be bandwidth and traffic.
	// Changing this parameter will create a new resource.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The ID of the VPN gateway
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The EIP type.
	// Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Eip2Observation struct {

	// The bandwidth ID.
	BandwidthID *string `json:"bandwidthId,omitempty" tf:"bandwidth_id,omitempty"`

	// The bandwidth name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	BandwidthName *string `json:"bandwidthName,omitempty" tf:"bandwidth_name,omitempty"`

	// Bandwidth size in Mbit/s. When the flavor is Basic, the value
	// cannot be greater than 100. When the flavor is Professional1, the value cannot be greater than 300.
	// When the flavor is Professional2, the value cannot be greater than 1,000.
	// Changing this parameter will create a new resource.
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// The charge mode of the bandwidth. The value can be bandwidth and traffic.
	// Changing this parameter will create a new resource.
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The ID of the VPN gateway
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The public IP address.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the EIP version.
	IPVersion *float64 `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// The EIP type.
	// Changing this parameter will create a new resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Eip2Parameters struct {

	// The bandwidth name.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	BandwidthName *string `json:"bandwidthName,omitempty" tf:"bandwidth_name,omitempty"`

	// Bandwidth size in Mbit/s. When the flavor is Basic, the value
	// cannot be greater than 100. When the flavor is Professional1, the value cannot be greater than 300.
	// When the flavor is Professional2, the value cannot be greater than 1,000.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	BandwidthSize *float64 `json:"bandwidthSize,omitempty" tf:"bandwidth_size,omitempty"`

	// The charge mode of the bandwidth. The value can be bandwidth and traffic.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ChargeMode *string `json:"chargeMode,omitempty" tf:"charge_mode,omitempty"`

	// The ID of the VPN gateway
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The EIP type.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VPNGatewayV5InitParameters struct {

	// The private IP 1 in private network type VPN gateway.
	// It is the master IP 1 in active-active HA mode, and the master IP in active-standby HA mode.
	// Must declare the access_private_ip_2 at the same time, and can not use the same IP value.
	// Changing this parameter will create a new resource.
	AccessPrivateIP1 *string `json:"accessPrivateIp1,omitempty" tf:"access_private_ip_1,omitempty"`

	// The private IP 2 in private network type VPN gateway.
	// It is the master IP 2 in active-active HA mode, and the slave IP in active-standby HA mode.
	// Must declare the access_private_ip_1 at the same time, and can not use the same IP value.
	// Changing this parameter will create a new resource.
	AccessPrivateIP2 *string `json:"accessPrivateIp2,omitempty" tf:"access_private_ip_2,omitempty"`

	// The access subnet ID.
	// The default value is the value of connect_subnet.
	// Changing this parameter will create a new resource.
	AccessSubnetID *string `json:"accessSubnetId,omitempty" tf:"access_subnet_id,omitempty"`

	// The access VPC ID.
	// The default value is the value of vpc_id.
	// Changing this parameter will create a new resource.
	AccessVPCID *string `json:"accessVpcId,omitempty" tf:"access_vpc_id,omitempty"`

	// The ASN number of BGP. The value ranges from 1 to 4,294,967,295.
	// Defaults to 64,512.
	// Changing this parameter will create a new resource.
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// The attachment type. The value can be vpc and er.
	// Defaults to vpc.
	// Changing this parameter will create a new resource.
	AttachmentType *string `json:"attachmentType,omitempty" tf:"attachment_type,omitempty"`

	// The list of availability zone IDs.
	// Changing this parameter will create a new resource.
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// The Network ID of the VPC subnet used by the VPN gateway.
	// This parameter is mandatory when attachment_type is vpc.
	// Changing this parameter will create a new resource.
	ConnectSubnet *string `json:"connectSubnet,omitempty" tf:"connect_subnet,omitempty"`

	// Specifies whether to delete eips on resource deletion whennetwork_type is public.
	// Default: false.
	DeleteEIP *bool `json:"deleteEip,omitempty" tf:"delete_eip,omitempty"`

	// The master 1 IP in active-active VPN gateway or the master IP
	// in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
	// The object structure is documented below.
	Eip1 []Eip1InitParameters `json:"eip1,omitempty" tf:"eip1,omitempty"`

	// The master 2 IP in active-active VPN gateway or the slave IP
	// in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
	// The object structure is documented below.
	Eip2 []Eip2InitParameters `json:"eip2,omitempty" tf:"eip2,omitempty"`

	// The enterprise router ID to attach with to VPN gateway.
	// This parameter is mandatory when attachment_type is er.
	// Changing this parameter will create a new resource.
	ErID *string `json:"erId,omitempty" tf:"er_id,omitempty"`

	// The flavor of the VPN gateway.
	// The value can be Basic, Professional1, Professional2. Defaults to Professional1.
	// Changing this parameter will create a new resource.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// The HA mode of VPN gateway. Valid values are active-active and
	// active-standby. The default value is active-active.
	// Changing this parameter will create a new resource.
	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	// The list of local subnets.
	// This parameter is mandatory when attachment_type is vpc.
	LocalSubnets []*string `json:"localSubnets,omitempty" tf:"local_subnets,omitempty"`

	// The name of the VPN gateway.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The network type. The value can be public and private.
	// Defaults to public.
	// Changing this parameter will create a new resource.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the tags of the VPN gateway.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the VPC to which the VPN gateway is connected.
	// This parameter is mandatory when attachment_type is vpc.
	// Changing this parameter will create a new resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type VPNGatewayV5Observation struct {

	// The private IP 1 in private network type VPN gateway.
	// It is the master IP 1 in active-active HA mode, and the master IP in active-standby HA mode.
	// Must declare the access_private_ip_2 at the same time, and can not use the same IP value.
	// Changing this parameter will create a new resource.
	AccessPrivateIP1 *string `json:"accessPrivateIp1,omitempty" tf:"access_private_ip_1,omitempty"`

	// The private IP 2 in private network type VPN gateway.
	// It is the master IP 2 in active-active HA mode, and the slave IP in active-standby HA mode.
	// Must declare the access_private_ip_1 at the same time, and can not use the same IP value.
	// Changing this parameter will create a new resource.
	AccessPrivateIP2 *string `json:"accessPrivateIp2,omitempty" tf:"access_private_ip_2,omitempty"`

	// The access subnet ID.
	// The default value is the value of connect_subnet.
	// Changing this parameter will create a new resource.
	AccessSubnetID *string `json:"accessSubnetId,omitempty" tf:"access_subnet_id,omitempty"`

	// The access VPC ID.
	// The default value is the value of vpc_id.
	// Changing this parameter will create a new resource.
	AccessVPCID *string `json:"accessVpcId,omitempty" tf:"access_vpc_id,omitempty"`

	// The ASN number of BGP. The value ranges from 1 to 4,294,967,295.
	// Defaults to 64,512.
	// Changing this parameter will create a new resource.
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// The attachment type. The value can be vpc and er.
	// Defaults to vpc.
	// Changing this parameter will create a new resource.
	AttachmentType *string `json:"attachmentType,omitempty" tf:"attachment_type,omitempty"`

	// The list of availability zone IDs.
	// Changing this parameter will create a new resource.
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// The Network ID of the VPC subnet used by the VPN gateway.
	// This parameter is mandatory when attachment_type is vpc.
	// Changing this parameter will create a new resource.
	ConnectSubnet *string `json:"connectSubnet,omitempty" tf:"connect_subnet,omitempty"`

	// The create time.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies whether to delete eips on resource deletion whennetwork_type is public.
	// Default: false.
	DeleteEIP *bool `json:"deleteEip,omitempty" tf:"delete_eip,omitempty"`

	// The master 1 IP in active-active VPN gateway or the master IP
	// in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
	// The object structure is documented below.
	Eip1 []Eip1Observation `json:"eip1,omitempty" tf:"eip1,omitempty"`

	// The master 2 IP in active-active VPN gateway or the slave IP
	// in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
	// The object structure is documented below.
	Eip2 []Eip2Observation `json:"eip2,omitempty" tf:"eip2,omitempty"`

	// The ER attachment ID.
	ErAttachmentID *string `json:"erAttachmentId,omitempty" tf:"er_attachment_id,omitempty"`

	// The enterprise router ID to attach with to VPN gateway.
	// This parameter is mandatory when attachment_type is er.
	// Changing this parameter will create a new resource.
	ErID *string `json:"erId,omitempty" tf:"er_id,omitempty"`

	// The flavor of the VPN gateway.
	// The value can be Basic, Professional1, Professional2. Defaults to Professional1.
	// Changing this parameter will create a new resource.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// The HA mode of VPN gateway. Valid values are active-active and
	// active-standby. The default value is active-active.
	// Changing this parameter will create a new resource.
	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	// The ID of the VPN gateway
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The list of local subnets.
	// This parameter is mandatory when attachment_type is vpc.
	LocalSubnets []*string `json:"localSubnets,omitempty" tf:"local_subnets,omitempty"`

	// The name of the VPN gateway.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The network type. The value can be public and private.
	// Defaults to public.
	// Changing this parameter will create a new resource.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the region in which resource is created.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The status of VPN gateway.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the tags of the VPN gateway.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The update time.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// The number of used connection groups.
	UsedConnectionGroup *float64 `json:"usedConnectionGroup,omitempty" tf:"used_connection_group,omitempty"`

	// The number of used connections.
	UsedConnectionNumber *float64 `json:"usedConnectionNumber,omitempty" tf:"used_connection_number,omitempty"`

	// The ID of the VPC to which the VPN gateway is connected.
	// This parameter is mandatory when attachment_type is vpc.
	// Changing this parameter will create a new resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type VPNGatewayV5Parameters struct {

	// The private IP 1 in private network type VPN gateway.
	// It is the master IP 1 in active-active HA mode, and the master IP in active-standby HA mode.
	// Must declare the access_private_ip_2 at the same time, and can not use the same IP value.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AccessPrivateIP1 *string `json:"accessPrivateIp1,omitempty" tf:"access_private_ip_1,omitempty"`

	// The private IP 2 in private network type VPN gateway.
	// It is the master IP 2 in active-active HA mode, and the slave IP in active-standby HA mode.
	// Must declare the access_private_ip_1 at the same time, and can not use the same IP value.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AccessPrivateIP2 *string `json:"accessPrivateIp2,omitempty" tf:"access_private_ip_2,omitempty"`

	// The access subnet ID.
	// The default value is the value of connect_subnet.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AccessSubnetID *string `json:"accessSubnetId,omitempty" tf:"access_subnet_id,omitempty"`

	// The access VPC ID.
	// The default value is the value of vpc_id.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AccessVPCID *string `json:"accessVpcId,omitempty" tf:"access_vpc_id,omitempty"`

	// The ASN number of BGP. The value ranges from 1 to 4,294,967,295.
	// Defaults to 64,512.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// The attachment type. The value can be vpc and er.
	// Defaults to vpc.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AttachmentType *string `json:"attachmentType,omitempty" tf:"attachment_type,omitempty"`

	// The list of availability zone IDs.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AvailabilityZones []*string `json:"availabilityZones,omitempty" tf:"availability_zones,omitempty"`

	// The Network ID of the VPC subnet used by the VPN gateway.
	// This parameter is mandatory when attachment_type is vpc.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ConnectSubnet *string `json:"connectSubnet,omitempty" tf:"connect_subnet,omitempty"`

	// Specifies whether to delete eips on resource deletion whennetwork_type is public.
	// Default: false.
	// +kubebuilder:validation:Optional
	DeleteEIP *bool `json:"deleteEip,omitempty" tf:"delete_eip,omitempty"`

	// The master 1 IP in active-active VPN gateway or the master IP
	// in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	Eip1 []Eip1Parameters `json:"eip1,omitempty" tf:"eip1,omitempty"`

	// The master 2 IP in active-active VPN gateway or the slave IP
	// in active-standby VPN gateway. This parameter is mandatory when network_type is public or left empty.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	Eip2 []Eip2Parameters `json:"eip2,omitempty" tf:"eip2,omitempty"`

	// The enterprise router ID to attach with to VPN gateway.
	// This parameter is mandatory when attachment_type is er.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ErID *string `json:"erId,omitempty" tf:"er_id,omitempty"`

	// The flavor of the VPN gateway.
	// The value can be Basic, Professional1, Professional2. Defaults to Professional1.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// The HA mode of VPN gateway. Valid values are active-active and
	// active-standby. The default value is active-active.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	HaMode *string `json:"haMode,omitempty" tf:"ha_mode,omitempty"`

	// The list of local subnets.
	// This parameter is mandatory when attachment_type is vpc.
	// +kubebuilder:validation:Optional
	LocalSubnets []*string `json:"localSubnets,omitempty" tf:"local_subnets,omitempty"`

	// The name of the VPN gateway.
	// The valid length is limited from 1 to 64, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The network type. The value can be public and private.
	// Defaults to public.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Specifies the tags of the VPN gateway.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the VPC to which the VPN gateway is connected.
	// This parameter is mandatory when attachment_type is vpc.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

// VPNGatewayV5Spec defines the desired state of VPNGatewayV5
type VPNGatewayV5Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPNGatewayV5Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VPNGatewayV5InitParameters `json:"initProvider,omitempty"`
}

// VPNGatewayV5Status defines the observed state of VPNGatewayV5.
type VPNGatewayV5Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPNGatewayV5Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VPNGatewayV5 is the Schema for the VPNGatewayV5s API. Manages a Enterprise VPN Gateway Service resource within OpenTelekomCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opentelekomcloud}
type VPNGatewayV5 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.availabilityZones) || (has(self.initProvider) && has(self.initProvider.availabilityZones))",message="spec.forProvider.availabilityZones is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   VPNGatewayV5Spec   `json:"spec"`
	Status VPNGatewayV5Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPNGatewayV5List contains a list of VPNGatewayV5s
type VPNGatewayV5List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPNGatewayV5 `json:"items"`
}

// Repository type metadata.
var (
	VPNGatewayV5_Kind             = "VPNGatewayV5"
	VPNGatewayV5_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPNGatewayV5_Kind}.String()
	VPNGatewayV5_KindAPIVersion   = VPNGatewayV5_Kind + "." + CRDGroupVersion.String()
	VPNGatewayV5_GroupVersionKind = CRDGroupVersion.WithKind(VPNGatewayV5_Kind)
)

func init() {
	SchemeBuilder.Register(&VPNGatewayV5{}, &VPNGatewayV5List{})
}
