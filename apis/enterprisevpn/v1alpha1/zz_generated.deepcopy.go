//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdInitParameters) DeepCopyInto(out *DpdInitParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Msg != nil {
		in, out := &in.Msg, &out.Msg
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdInitParameters.
func (in *DpdInitParameters) DeepCopy() *DpdInitParameters {
	if in == nil {
		return nil
	}
	out := new(DpdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdObservation) DeepCopyInto(out *DpdObservation) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Msg != nil {
		in, out := &in.Msg, &out.Msg
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdObservation.
func (in *DpdObservation) DeepCopy() *DpdObservation {
	if in == nil {
		return nil
	}
	out := new(DpdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdParameters) DeepCopyInto(out *DpdParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Msg != nil {
		in, out := &in.Msg, &out.Msg
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdParameters.
func (in *DpdParameters) DeepCopy() *DpdParameters {
	if in == nil {
		return nil
	}
	out := new(DpdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Eip1InitParameters) DeepCopyInto(out *Eip1InitParameters) {
	*out = *in
	if in.BandwidthName != nil {
		in, out := &in.BandwidthName, &out.BandwidthName
		*out = new(string)
		**out = **in
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Eip1InitParameters.
func (in *Eip1InitParameters) DeepCopy() *Eip1InitParameters {
	if in == nil {
		return nil
	}
	out := new(Eip1InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Eip1Observation) DeepCopyInto(out *Eip1Observation) {
	*out = *in
	if in.BandwidthID != nil {
		in, out := &in.BandwidthID, &out.BandwidthID
		*out = new(string)
		**out = **in
	}
	if in.BandwidthName != nil {
		in, out := &in.BandwidthName, &out.BandwidthName
		*out = new(string)
		**out = **in
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Eip1Observation.
func (in *Eip1Observation) DeepCopy() *Eip1Observation {
	if in == nil {
		return nil
	}
	out := new(Eip1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Eip1Parameters) DeepCopyInto(out *Eip1Parameters) {
	*out = *in
	if in.BandwidthName != nil {
		in, out := &in.BandwidthName, &out.BandwidthName
		*out = new(string)
		**out = **in
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Eip1Parameters.
func (in *Eip1Parameters) DeepCopy() *Eip1Parameters {
	if in == nil {
		return nil
	}
	out := new(Eip1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Eip2InitParameters) DeepCopyInto(out *Eip2InitParameters) {
	*out = *in
	if in.BandwidthName != nil {
		in, out := &in.BandwidthName, &out.BandwidthName
		*out = new(string)
		**out = **in
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Eip2InitParameters.
func (in *Eip2InitParameters) DeepCopy() *Eip2InitParameters {
	if in == nil {
		return nil
	}
	out := new(Eip2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Eip2Observation) DeepCopyInto(out *Eip2Observation) {
	*out = *in
	if in.BandwidthID != nil {
		in, out := &in.BandwidthID, &out.BandwidthID
		*out = new(string)
		**out = **in
	}
	if in.BandwidthName != nil {
		in, out := &in.BandwidthName, &out.BandwidthName
		*out = new(string)
		**out = **in
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Eip2Observation.
func (in *Eip2Observation) DeepCopy() *Eip2Observation {
	if in == nil {
		return nil
	}
	out := new(Eip2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Eip2Parameters) DeepCopyInto(out *Eip2Parameters) {
	*out = *in
	if in.BandwidthName != nil {
		in, out := &in.BandwidthName, &out.BandwidthName
		*out = new(string)
		**out = **in
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Eip2Parameters.
func (in *Eip2Parameters) DeepCopy() *Eip2Parameters {
	if in == nil {
		return nil
	}
	out := new(Eip2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IkepolicyInitParameters) DeepCopyInto(out *IkepolicyInitParameters) {
	*out = *in
	if in.AuthenticationAlgorithm != nil {
		in, out := &in.AuthenticationAlgorithm, &out.AuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationMethod != nil {
		in, out := &in.AuthenticationMethod, &out.AuthenticationMethod
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.Dpd != nil {
		in, out := &in.Dpd, &out.Dpd
		*out = make([]DpdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LocalID != nil {
		in, out := &in.LocalID, &out.LocalID
		*out = new(string)
		**out = **in
	}
	if in.LocalIDType != nil {
		in, out := &in.LocalIDType, &out.LocalIDType
		*out = new(string)
		**out = **in
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.PeerIDType != nil {
		in, out := &in.PeerIDType, &out.PeerIDType
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneNegotiationMode != nil {
		in, out := &in.PhaseOneNegotiationMode, &out.PhaseOneNegotiationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IkepolicyInitParameters.
func (in *IkepolicyInitParameters) DeepCopy() *IkepolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(IkepolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IkepolicyObservation) DeepCopyInto(out *IkepolicyObservation) {
	*out = *in
	if in.AuthenticationAlgorithm != nil {
		in, out := &in.AuthenticationAlgorithm, &out.AuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationMethod != nil {
		in, out := &in.AuthenticationMethod, &out.AuthenticationMethod
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.Dpd != nil {
		in, out := &in.Dpd, &out.Dpd
		*out = make([]DpdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LocalID != nil {
		in, out := &in.LocalID, &out.LocalID
		*out = new(string)
		**out = **in
	}
	if in.LocalIDType != nil {
		in, out := &in.LocalIDType, &out.LocalIDType
		*out = new(string)
		**out = **in
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.PeerIDType != nil {
		in, out := &in.PeerIDType, &out.PeerIDType
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneNegotiationMode != nil {
		in, out := &in.PhaseOneNegotiationMode, &out.PhaseOneNegotiationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IkepolicyObservation.
func (in *IkepolicyObservation) DeepCopy() *IkepolicyObservation {
	if in == nil {
		return nil
	}
	out := new(IkepolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IkepolicyParameters) DeepCopyInto(out *IkepolicyParameters) {
	*out = *in
	if in.AuthenticationAlgorithm != nil {
		in, out := &in.AuthenticationAlgorithm, &out.AuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationMethod != nil {
		in, out := &in.AuthenticationMethod, &out.AuthenticationMethod
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.Dpd != nil {
		in, out := &in.Dpd, &out.Dpd
		*out = make([]DpdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LocalID != nil {
		in, out := &in.LocalID, &out.LocalID
		*out = new(string)
		**out = **in
	}
	if in.LocalIDType != nil {
		in, out := &in.LocalIDType, &out.LocalIDType
		*out = new(string)
		**out = **in
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.PeerIDType != nil {
		in, out := &in.PeerIDType, &out.PeerIDType
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneNegotiationMode != nil {
		in, out := &in.PhaseOneNegotiationMode, &out.PhaseOneNegotiationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IkepolicyParameters.
func (in *IkepolicyParameters) DeepCopy() *IkepolicyParameters {
	if in == nil {
		return nil
	}
	out := new(IkepolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecpolicyInitParameters) DeepCopyInto(out *IpsecpolicyInitParameters) {
	*out = *in
	if in.AuthenticationAlgorithm != nil {
		in, out := &in.AuthenticationAlgorithm, &out.AuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncapsulationMode != nil {
		in, out := &in.EncapsulationMode, &out.EncapsulationMode
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Pfs != nil {
		in, out := &in.Pfs, &out.Pfs
		*out = new(string)
		**out = **in
	}
	if in.TransformProtocol != nil {
		in, out := &in.TransformProtocol, &out.TransformProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecpolicyInitParameters.
func (in *IpsecpolicyInitParameters) DeepCopy() *IpsecpolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecpolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecpolicyObservation) DeepCopyInto(out *IpsecpolicyObservation) {
	*out = *in
	if in.AuthenticationAlgorithm != nil {
		in, out := &in.AuthenticationAlgorithm, &out.AuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncapsulationMode != nil {
		in, out := &in.EncapsulationMode, &out.EncapsulationMode
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Pfs != nil {
		in, out := &in.Pfs, &out.Pfs
		*out = new(string)
		**out = **in
	}
	if in.TransformProtocol != nil {
		in, out := &in.TransformProtocol, &out.TransformProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecpolicyObservation.
func (in *IpsecpolicyObservation) DeepCopy() *IpsecpolicyObservation {
	if in == nil {
		return nil
	}
	out := new(IpsecpolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecpolicyParameters) DeepCopyInto(out *IpsecpolicyParameters) {
	*out = *in
	if in.AuthenticationAlgorithm != nil {
		in, out := &in.AuthenticationAlgorithm, &out.AuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncapsulationMode != nil {
		in, out := &in.EncapsulationMode, &out.EncapsulationMode
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Pfs != nil {
		in, out := &in.Pfs, &out.Pfs
		*out = new(string)
		**out = **in
	}
	if in.TransformProtocol != nil {
		in, out := &in.TransformProtocol, &out.TransformProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecpolicyParameters.
func (in *IpsecpolicyParameters) DeepCopy() *IpsecpolicyParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecpolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRulesInitParameters) DeepCopyInto(out *PolicyRulesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRulesInitParameters.
func (in *PolicyRulesInitParameters) DeepCopy() *PolicyRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRulesObservation) DeepCopyInto(out *PolicyRulesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRulesObservation.
func (in *PolicyRulesObservation) DeepCopy() *PolicyRulesObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRulesParameters) DeepCopyInto(out *PolicyRulesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRulesParameters.
func (in *PolicyRulesParameters) DeepCopy() *PolicyRulesParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionMonitorV5) DeepCopyInto(out *VPNConnectionMonitorV5) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionMonitorV5.
func (in *VPNConnectionMonitorV5) DeepCopy() *VPNConnectionMonitorV5 {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionMonitorV5)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionMonitorV5) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionMonitorV5InitParameters) DeepCopyInto(out *VPNConnectionMonitorV5InitParameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionMonitorV5InitParameters.
func (in *VPNConnectionMonitorV5InitParameters) DeepCopy() *VPNConnectionMonitorV5InitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionMonitorV5InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionMonitorV5List) DeepCopyInto(out *VPNConnectionMonitorV5List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNConnectionMonitorV5, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionMonitorV5List.
func (in *VPNConnectionMonitorV5List) DeepCopy() *VPNConnectionMonitorV5List {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionMonitorV5List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionMonitorV5List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionMonitorV5Observation) DeepCopyInto(out *VPNConnectionMonitorV5Observation) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.DestinationIP != nil {
		in, out := &in.DestinationIP, &out.DestinationIP
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionMonitorV5Observation.
func (in *VPNConnectionMonitorV5Observation) DeepCopy() *VPNConnectionMonitorV5Observation {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionMonitorV5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionMonitorV5Parameters) DeepCopyInto(out *VPNConnectionMonitorV5Parameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionMonitorV5Parameters.
func (in *VPNConnectionMonitorV5Parameters) DeepCopy() *VPNConnectionMonitorV5Parameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionMonitorV5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionMonitorV5Spec) DeepCopyInto(out *VPNConnectionMonitorV5Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionMonitorV5Spec.
func (in *VPNConnectionMonitorV5Spec) DeepCopy() *VPNConnectionMonitorV5Spec {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionMonitorV5Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionMonitorV5Status) DeepCopyInto(out *VPNConnectionMonitorV5Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionMonitorV5Status.
func (in *VPNConnectionMonitorV5Status) DeepCopy() *VPNConnectionMonitorV5Status {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionMonitorV5Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionV5) DeepCopyInto(out *VPNConnectionV5) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionV5.
func (in *VPNConnectionV5) DeepCopy() *VPNConnectionV5 {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionV5)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionV5) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionV5InitParameters) DeepCopyInto(out *VPNConnectionV5InitParameters) {
	*out = *in
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EnableNqa != nil {
		in, out := &in.EnableNqa, &out.EnableNqa
		*out = new(bool)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIP != nil {
		in, out := &in.GatewayIP, &out.GatewayIP
		*out = new(string)
		**out = **in
	}
	if in.HaRole != nil {
		in, out := &in.HaRole, &out.HaRole
		*out = new(string)
		**out = **in
	}
	if in.Ikepolicy != nil {
		in, out := &in.Ikepolicy, &out.Ikepolicy
		*out = make([]IkepolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ipsecpolicy != nil {
		in, out := &in.Ipsecpolicy, &out.Ipsecpolicy
		*out = make([]IpsecpolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PeerSubnets != nil {
		in, out := &in.PeerSubnets, &out.PeerSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyRules != nil {
		in, out := &in.PolicyRules, &out.PolicyRules
		*out = make([]PolicyRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Psk != nil {
		in, out := &in.Psk, &out.Psk
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TunnelLocalAddress != nil {
		in, out := &in.TunnelLocalAddress, &out.TunnelLocalAddress
		*out = new(string)
		**out = **in
	}
	if in.TunnelPeerAddress != nil {
		in, out := &in.TunnelPeerAddress, &out.TunnelPeerAddress
		*out = new(string)
		**out = **in
	}
	if in.VPNType != nil {
		in, out := &in.VPNType, &out.VPNType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionV5InitParameters.
func (in *VPNConnectionV5InitParameters) DeepCopy() *VPNConnectionV5InitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionV5InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionV5List) DeepCopyInto(out *VPNConnectionV5List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNConnectionV5, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionV5List.
func (in *VPNConnectionV5List) DeepCopy() *VPNConnectionV5List {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionV5List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionV5List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionV5Observation) DeepCopyInto(out *VPNConnectionV5Observation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EnableNqa != nil {
		in, out := &in.EnableNqa, &out.EnableNqa
		*out = new(bool)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIP != nil {
		in, out := &in.GatewayIP, &out.GatewayIP
		*out = new(string)
		**out = **in
	}
	if in.HaRole != nil {
		in, out := &in.HaRole, &out.HaRole
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ikepolicy != nil {
		in, out := &in.Ikepolicy, &out.Ikepolicy
		*out = make([]IkepolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ipsecpolicy != nil {
		in, out := &in.Ipsecpolicy, &out.Ipsecpolicy
		*out = make([]IpsecpolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PeerSubnets != nil {
		in, out := &in.PeerSubnets, &out.PeerSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyRules != nil {
		in, out := &in.PolicyRules, &out.PolicyRules
		*out = make([]PolicyRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Psk != nil {
		in, out := &in.Psk, &out.Psk
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TunnelLocalAddress != nil {
		in, out := &in.TunnelLocalAddress, &out.TunnelLocalAddress
		*out = new(string)
		**out = **in
	}
	if in.TunnelPeerAddress != nil {
		in, out := &in.TunnelPeerAddress, &out.TunnelPeerAddress
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.VPNType != nil {
		in, out := &in.VPNType, &out.VPNType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionV5Observation.
func (in *VPNConnectionV5Observation) DeepCopy() *VPNConnectionV5Observation {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionV5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionV5Parameters) DeepCopyInto(out *VPNConnectionV5Parameters) {
	*out = *in
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EnableNqa != nil {
		in, out := &in.EnableNqa, &out.EnableNqa
		*out = new(bool)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIP != nil {
		in, out := &in.GatewayIP, &out.GatewayIP
		*out = new(string)
		**out = **in
	}
	if in.HaRole != nil {
		in, out := &in.HaRole, &out.HaRole
		*out = new(string)
		**out = **in
	}
	if in.Ikepolicy != nil {
		in, out := &in.Ikepolicy, &out.Ikepolicy
		*out = make([]IkepolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ipsecpolicy != nil {
		in, out := &in.Ipsecpolicy, &out.Ipsecpolicy
		*out = make([]IpsecpolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PeerSubnets != nil {
		in, out := &in.PeerSubnets, &out.PeerSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyRules != nil {
		in, out := &in.PolicyRules, &out.PolicyRules
		*out = make([]PolicyRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Psk != nil {
		in, out := &in.Psk, &out.Psk
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TunnelLocalAddress != nil {
		in, out := &in.TunnelLocalAddress, &out.TunnelLocalAddress
		*out = new(string)
		**out = **in
	}
	if in.TunnelPeerAddress != nil {
		in, out := &in.TunnelPeerAddress, &out.TunnelPeerAddress
		*out = new(string)
		**out = **in
	}
	if in.VPNType != nil {
		in, out := &in.VPNType, &out.VPNType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionV5Parameters.
func (in *VPNConnectionV5Parameters) DeepCopy() *VPNConnectionV5Parameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionV5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionV5Spec) DeepCopyInto(out *VPNConnectionV5Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionV5Spec.
func (in *VPNConnectionV5Spec) DeepCopy() *VPNConnectionV5Spec {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionV5Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionV5Status) DeepCopyInto(out *VPNConnectionV5Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionV5Status.
func (in *VPNConnectionV5Status) DeepCopy() *VPNConnectionV5Status {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionV5Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNCustomerGatewayV5) DeepCopyInto(out *VPNCustomerGatewayV5) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNCustomerGatewayV5.
func (in *VPNCustomerGatewayV5) DeepCopy() *VPNCustomerGatewayV5 {
	if in == nil {
		return nil
	}
	out := new(VPNCustomerGatewayV5)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNCustomerGatewayV5) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNCustomerGatewayV5InitParameters) DeepCopyInto(out *VPNCustomerGatewayV5InitParameters) {
	*out = *in
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.IDType != nil {
		in, out := &in.IDType, &out.IDType
		*out = new(string)
		**out = **in
	}
	if in.IDValue != nil {
		in, out := &in.IDValue, &out.IDValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNCustomerGatewayV5InitParameters.
func (in *VPNCustomerGatewayV5InitParameters) DeepCopy() *VPNCustomerGatewayV5InitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNCustomerGatewayV5InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNCustomerGatewayV5List) DeepCopyInto(out *VPNCustomerGatewayV5List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNCustomerGatewayV5, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNCustomerGatewayV5List.
func (in *VPNCustomerGatewayV5List) DeepCopy() *VPNCustomerGatewayV5List {
	if in == nil {
		return nil
	}
	out := new(VPNCustomerGatewayV5List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNCustomerGatewayV5List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNCustomerGatewayV5Observation) DeepCopyInto(out *VPNCustomerGatewayV5Observation) {
	*out = *in
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDType != nil {
		in, out := &in.IDType, &out.IDType
		*out = new(string)
		**out = **in
	}
	if in.IDValue != nil {
		in, out := &in.IDValue, &out.IDValue
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteMode != nil {
		in, out := &in.RouteMode, &out.RouteMode
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNCustomerGatewayV5Observation.
func (in *VPNCustomerGatewayV5Observation) DeepCopy() *VPNCustomerGatewayV5Observation {
	if in == nil {
		return nil
	}
	out := new(VPNCustomerGatewayV5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNCustomerGatewayV5Parameters) DeepCopyInto(out *VPNCustomerGatewayV5Parameters) {
	*out = *in
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.IDType != nil {
		in, out := &in.IDType, &out.IDType
		*out = new(string)
		**out = **in
	}
	if in.IDValue != nil {
		in, out := &in.IDValue, &out.IDValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNCustomerGatewayV5Parameters.
func (in *VPNCustomerGatewayV5Parameters) DeepCopy() *VPNCustomerGatewayV5Parameters {
	if in == nil {
		return nil
	}
	out := new(VPNCustomerGatewayV5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNCustomerGatewayV5Spec) DeepCopyInto(out *VPNCustomerGatewayV5Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNCustomerGatewayV5Spec.
func (in *VPNCustomerGatewayV5Spec) DeepCopy() *VPNCustomerGatewayV5Spec {
	if in == nil {
		return nil
	}
	out := new(VPNCustomerGatewayV5Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNCustomerGatewayV5Status) DeepCopyInto(out *VPNCustomerGatewayV5Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNCustomerGatewayV5Status.
func (in *VPNCustomerGatewayV5Status) DeepCopy() *VPNCustomerGatewayV5Status {
	if in == nil {
		return nil
	}
	out := new(VPNCustomerGatewayV5Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayV5) DeepCopyInto(out *VPNGatewayV5) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayV5.
func (in *VPNGatewayV5) DeepCopy() *VPNGatewayV5 {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayV5)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayV5) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayV5InitParameters) DeepCopyInto(out *VPNGatewayV5InitParameters) {
	*out = *in
	if in.AccessPrivateIP1 != nil {
		in, out := &in.AccessPrivateIP1, &out.AccessPrivateIP1
		*out = new(string)
		**out = **in
	}
	if in.AccessPrivateIP2 != nil {
		in, out := &in.AccessPrivateIP2, &out.AccessPrivateIP2
		*out = new(string)
		**out = **in
	}
	if in.AccessSubnetID != nil {
		in, out := &in.AccessSubnetID, &out.AccessSubnetID
		*out = new(string)
		**out = **in
	}
	if in.AccessVPCID != nil {
		in, out := &in.AccessVPCID, &out.AccessVPCID
		*out = new(string)
		**out = **in
	}
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectSubnet != nil {
		in, out := &in.ConnectSubnet, &out.ConnectSubnet
		*out = new(string)
		**out = **in
	}
	if in.DeleteEIP != nil {
		in, out := &in.DeleteEIP, &out.DeleteEIP
		*out = new(bool)
		**out = **in
	}
	if in.Eip1 != nil {
		in, out := &in.Eip1, &out.Eip1
		*out = make([]Eip1InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Eip2 != nil {
		in, out := &in.Eip2, &out.Eip2
		*out = make([]Eip2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ErID != nil {
		in, out := &in.ErID, &out.ErID
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.HaMode != nil {
		in, out := &in.HaMode, &out.HaMode
		*out = new(string)
		**out = **in
	}
	if in.LocalSubnets != nil {
		in, out := &in.LocalSubnets, &out.LocalSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayV5InitParameters.
func (in *VPNGatewayV5InitParameters) DeepCopy() *VPNGatewayV5InitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayV5InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayV5List) DeepCopyInto(out *VPNGatewayV5List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNGatewayV5, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayV5List.
func (in *VPNGatewayV5List) DeepCopy() *VPNGatewayV5List {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayV5List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayV5List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayV5Observation) DeepCopyInto(out *VPNGatewayV5Observation) {
	*out = *in
	if in.AccessPrivateIP1 != nil {
		in, out := &in.AccessPrivateIP1, &out.AccessPrivateIP1
		*out = new(string)
		**out = **in
	}
	if in.AccessPrivateIP2 != nil {
		in, out := &in.AccessPrivateIP2, &out.AccessPrivateIP2
		*out = new(string)
		**out = **in
	}
	if in.AccessSubnetID != nil {
		in, out := &in.AccessSubnetID, &out.AccessSubnetID
		*out = new(string)
		**out = **in
	}
	if in.AccessVPCID != nil {
		in, out := &in.AccessVPCID, &out.AccessVPCID
		*out = new(string)
		**out = **in
	}
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectSubnet != nil {
		in, out := &in.ConnectSubnet, &out.ConnectSubnet
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeleteEIP != nil {
		in, out := &in.DeleteEIP, &out.DeleteEIP
		*out = new(bool)
		**out = **in
	}
	if in.Eip1 != nil {
		in, out := &in.Eip1, &out.Eip1
		*out = make([]Eip1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Eip2 != nil {
		in, out := &in.Eip2, &out.Eip2
		*out = make([]Eip2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ErAttachmentID != nil {
		in, out := &in.ErAttachmentID, &out.ErAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.ErID != nil {
		in, out := &in.ErID, &out.ErID
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.HaMode != nil {
		in, out := &in.HaMode, &out.HaMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LocalSubnets != nil {
		in, out := &in.LocalSubnets, &out.LocalSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.UsedConnectionGroup != nil {
		in, out := &in.UsedConnectionGroup, &out.UsedConnectionGroup
		*out = new(float64)
		**out = **in
	}
	if in.UsedConnectionNumber != nil {
		in, out := &in.UsedConnectionNumber, &out.UsedConnectionNumber
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayV5Observation.
func (in *VPNGatewayV5Observation) DeepCopy() *VPNGatewayV5Observation {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayV5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayV5Parameters) DeepCopyInto(out *VPNGatewayV5Parameters) {
	*out = *in
	if in.AccessPrivateIP1 != nil {
		in, out := &in.AccessPrivateIP1, &out.AccessPrivateIP1
		*out = new(string)
		**out = **in
	}
	if in.AccessPrivateIP2 != nil {
		in, out := &in.AccessPrivateIP2, &out.AccessPrivateIP2
		*out = new(string)
		**out = **in
	}
	if in.AccessSubnetID != nil {
		in, out := &in.AccessSubnetID, &out.AccessSubnetID
		*out = new(string)
		**out = **in
	}
	if in.AccessVPCID != nil {
		in, out := &in.AccessVPCID, &out.AccessVPCID
		*out = new(string)
		**out = **in
	}
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectSubnet != nil {
		in, out := &in.ConnectSubnet, &out.ConnectSubnet
		*out = new(string)
		**out = **in
	}
	if in.DeleteEIP != nil {
		in, out := &in.DeleteEIP, &out.DeleteEIP
		*out = new(bool)
		**out = **in
	}
	if in.Eip1 != nil {
		in, out := &in.Eip1, &out.Eip1
		*out = make([]Eip1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Eip2 != nil {
		in, out := &in.Eip2, &out.Eip2
		*out = make([]Eip2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ErID != nil {
		in, out := &in.ErID, &out.ErID
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.HaMode != nil {
		in, out := &in.HaMode, &out.HaMode
		*out = new(string)
		**out = **in
	}
	if in.LocalSubnets != nil {
		in, out := &in.LocalSubnets, &out.LocalSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayV5Parameters.
func (in *VPNGatewayV5Parameters) DeepCopy() *VPNGatewayV5Parameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayV5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayV5Spec) DeepCopyInto(out *VPNGatewayV5Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayV5Spec.
func (in *VPNGatewayV5Spec) DeepCopy() *VPNGatewayV5Spec {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayV5Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayV5Status) DeepCopyInto(out *VPNGatewayV5Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayV5Status.
func (in *VPNGatewayV5Status) DeepCopy() *VPNGatewayV5Status {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayV5Status)
	in.DeepCopyInto(out)
	return out
}
