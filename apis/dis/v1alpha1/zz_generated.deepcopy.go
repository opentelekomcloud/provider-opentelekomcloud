//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppV2) DeepCopyInto(out *AppV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppV2.
func (in *AppV2) DeepCopy() *AppV2 {
	if in == nil {
		return nil
	}
	out := new(AppV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppV2InitParameters) DeepCopyInto(out *AppV2InitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppV2InitParameters.
func (in *AppV2InitParameters) DeepCopy() *AppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppV2List) DeepCopyInto(out *AppV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppV2List.
func (in *AppV2List) DeepCopy() *AppV2List {
	if in == nil {
		return nil
	}
	out := new(AppV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppV2Observation) DeepCopyInto(out *AppV2Observation) {
	*out = *in
	if in.CommitCheckpointStreamNames != nil {
		in, out := &in.CommitCheckpointStreamNames, &out.CommitCheckpointStreamNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionConsumingStates != nil {
		in, out := &in.PartitionConsumingStates, &out.PartitionConsumingStates
		*out = make([]PartitionConsumingStatesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppV2Observation.
func (in *AppV2Observation) DeepCopy() *AppV2Observation {
	if in == nil {
		return nil
	}
	out := new(AppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppV2Parameters) DeepCopyInto(out *AppV2Parameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppV2Parameters.
func (in *AppV2Parameters) DeepCopy() *AppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppV2Spec) DeepCopyInto(out *AppV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppV2Spec.
func (in *AppV2Spec) DeepCopy() *AppV2Spec {
	if in == nil {
		return nil
	}
	out := new(AppV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppV2Status) DeepCopyInto(out *AppV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppV2Status.
func (in *AppV2Status) DeepCopy() *AppV2Status {
	if in == nil {
		return nil
	}
	out := new(AppV2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointV2) DeepCopyInto(out *CheckpointV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointV2.
func (in *CheckpointV2) DeepCopy() *CheckpointV2 {
	if in == nil {
		return nil
	}
	out := new(CheckpointV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CheckpointV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointV2InitParameters) DeepCopyInto(out *CheckpointV2InitParameters) {
	*out = *in
	if in.AppName != nil {
		in, out := &in.AppName, &out.AppName
		*out = new(string)
		**out = **in
	}
	if in.AppNameRef != nil {
		in, out := &in.AppNameRef, &out.AppNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppNameSelector != nil {
		in, out := &in.AppNameSelector, &out.AppNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckpointType != nil {
		in, out := &in.CheckpointType, &out.CheckpointType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.PartitionID != nil {
		in, out := &in.PartitionID, &out.PartitionID
		*out = new(string)
		**out = **in
	}
	if in.SequenceNumber != nil {
		in, out := &in.SequenceNumber, &out.SequenceNumber
		*out = new(string)
		**out = **in
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointV2InitParameters.
func (in *CheckpointV2InitParameters) DeepCopy() *CheckpointV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(CheckpointV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointV2List) DeepCopyInto(out *CheckpointV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CheckpointV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointV2List.
func (in *CheckpointV2List) DeepCopy() *CheckpointV2List {
	if in == nil {
		return nil
	}
	out := new(CheckpointV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CheckpointV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointV2Observation) DeepCopyInto(out *CheckpointV2Observation) {
	*out = *in
	if in.AppName != nil {
		in, out := &in.AppName, &out.AppName
		*out = new(string)
		**out = **in
	}
	if in.CheckpointType != nil {
		in, out := &in.CheckpointType, &out.CheckpointType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.PartitionID != nil {
		in, out := &in.PartitionID, &out.PartitionID
		*out = new(string)
		**out = **in
	}
	if in.SequenceNumber != nil {
		in, out := &in.SequenceNumber, &out.SequenceNumber
		*out = new(string)
		**out = **in
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointV2Observation.
func (in *CheckpointV2Observation) DeepCopy() *CheckpointV2Observation {
	if in == nil {
		return nil
	}
	out := new(CheckpointV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointV2Parameters) DeepCopyInto(out *CheckpointV2Parameters) {
	*out = *in
	if in.AppName != nil {
		in, out := &in.AppName, &out.AppName
		*out = new(string)
		**out = **in
	}
	if in.AppNameRef != nil {
		in, out := &in.AppNameRef, &out.AppNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppNameSelector != nil {
		in, out := &in.AppNameSelector, &out.AppNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckpointType != nil {
		in, out := &in.CheckpointType, &out.CheckpointType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.PartitionID != nil {
		in, out := &in.PartitionID, &out.PartitionID
		*out = new(string)
		**out = **in
	}
	if in.SequenceNumber != nil {
		in, out := &in.SequenceNumber, &out.SequenceNumber
		*out = new(string)
		**out = **in
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointV2Parameters.
func (in *CheckpointV2Parameters) DeepCopy() *CheckpointV2Parameters {
	if in == nil {
		return nil
	}
	out := new(CheckpointV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointV2Spec) DeepCopyInto(out *CheckpointV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointV2Spec.
func (in *CheckpointV2Spec) DeepCopy() *CheckpointV2Spec {
	if in == nil {
		return nil
	}
	out := new(CheckpointV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointV2Status) DeepCopyInto(out *CheckpointV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointV2Status.
func (in *CheckpointV2Status) DeepCopy() *CheckpointV2Status {
	if in == nil {
		return nil
	}
	out := new(CheckpointV2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumpTaskV2) DeepCopyInto(out *DumpTaskV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumpTaskV2.
func (in *DumpTaskV2) DeepCopy() *DumpTaskV2 {
	if in == nil {
		return nil
	}
	out := new(DumpTaskV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DumpTaskV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumpTaskV2InitParameters) DeepCopyInto(out *DumpTaskV2InitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.ObsDestinationDescriptor != nil {
		in, out := &in.ObsDestinationDescriptor, &out.ObsDestinationDescriptor
		*out = make([]ObsDestinationDescriptorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObsProcessingSchema != nil {
		in, out := &in.ObsProcessingSchema, &out.ObsProcessingSchema
		*out = make([]ObsProcessingSchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumpTaskV2InitParameters.
func (in *DumpTaskV2InitParameters) DeepCopy() *DumpTaskV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(DumpTaskV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumpTaskV2List) DeepCopyInto(out *DumpTaskV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DumpTaskV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumpTaskV2List.
func (in *DumpTaskV2List) DeepCopy() *DumpTaskV2List {
	if in == nil {
		return nil
	}
	out := new(DumpTaskV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DumpTaskV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumpTaskV2Observation) DeepCopyInto(out *DumpTaskV2Observation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastTransferTimestamp != nil {
		in, out := &in.LastTransferTimestamp, &out.LastTransferTimestamp
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObsDestinationDescriptor != nil {
		in, out := &in.ObsDestinationDescriptor, &out.ObsDestinationDescriptor
		*out = make([]ObsDestinationDescriptorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObsProcessingSchema != nil {
		in, out := &in.ObsProcessingSchema, &out.ObsProcessingSchema
		*out = make([]ObsProcessingSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]PartitionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumpTaskV2Observation.
func (in *DumpTaskV2Observation) DeepCopy() *DumpTaskV2Observation {
	if in == nil {
		return nil
	}
	out := new(DumpTaskV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumpTaskV2Parameters) DeepCopyInto(out *DumpTaskV2Parameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.ObsDestinationDescriptor != nil {
		in, out := &in.ObsDestinationDescriptor, &out.ObsDestinationDescriptor
		*out = make([]ObsDestinationDescriptorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObsProcessingSchema != nil {
		in, out := &in.ObsProcessingSchema, &out.ObsProcessingSchema
		*out = make([]ObsProcessingSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumpTaskV2Parameters.
func (in *DumpTaskV2Parameters) DeepCopy() *DumpTaskV2Parameters {
	if in == nil {
		return nil
	}
	out := new(DumpTaskV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumpTaskV2Spec) DeepCopyInto(out *DumpTaskV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumpTaskV2Spec.
func (in *DumpTaskV2Spec) DeepCopy() *DumpTaskV2Spec {
	if in == nil {
		return nil
	}
	out := new(DumpTaskV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumpTaskV2Status) DeepCopyInto(out *DumpTaskV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumpTaskV2Status.
func (in *DumpTaskV2Status) DeepCopy() *DumpTaskV2Status {
	if in == nil {
		return nil
	}
	out := new(DumpTaskV2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObsDestinationDescriptorInitParameters) DeepCopyInto(out *ObsDestinationDescriptorInitParameters) {
	*out = *in
	if in.AgencyName != nil {
		in, out := &in.AgencyName, &out.AgencyName
		*out = new(string)
		**out = **in
	}
	if in.ConsumerStrategy != nil {
		in, out := &in.ConsumerStrategy, &out.ConsumerStrategy
		*out = new(string)
		**out = **in
	}
	if in.DeliverTimeInterval != nil {
		in, out := &in.DeliverTimeInterval, &out.DeliverTimeInterval
		*out = new(float64)
		**out = **in
	}
	if in.DestinationFileType != nil {
		in, out := &in.DestinationFileType, &out.DestinationFileType
		*out = new(string)
		**out = **in
	}
	if in.FilePrefix != nil {
		in, out := &in.FilePrefix, &out.FilePrefix
		*out = new(string)
		**out = **in
	}
	if in.ObsBucketPath != nil {
		in, out := &in.ObsBucketPath, &out.ObsBucketPath
		*out = new(string)
		**out = **in
	}
	if in.ObsBucketPathRef != nil {
		in, out := &in.ObsBucketPathRef, &out.ObsBucketPathRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ObsBucketPathSelector != nil {
		in, out := &in.ObsBucketPathSelector, &out.ObsBucketPathSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PartitionFormat != nil {
		in, out := &in.PartitionFormat, &out.PartitionFormat
		*out = new(string)
		**out = **in
	}
	if in.RecordDelimiter != nil {
		in, out := &in.RecordDelimiter, &out.RecordDelimiter
		*out = new(string)
		**out = **in
	}
	if in.TaskName != nil {
		in, out := &in.TaskName, &out.TaskName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObsDestinationDescriptorInitParameters.
func (in *ObsDestinationDescriptorInitParameters) DeepCopy() *ObsDestinationDescriptorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObsDestinationDescriptorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObsDestinationDescriptorObservation) DeepCopyInto(out *ObsDestinationDescriptorObservation) {
	*out = *in
	if in.AgencyName != nil {
		in, out := &in.AgencyName, &out.AgencyName
		*out = new(string)
		**out = **in
	}
	if in.ConsumerStrategy != nil {
		in, out := &in.ConsumerStrategy, &out.ConsumerStrategy
		*out = new(string)
		**out = **in
	}
	if in.DeliverTimeInterval != nil {
		in, out := &in.DeliverTimeInterval, &out.DeliverTimeInterval
		*out = new(float64)
		**out = **in
	}
	if in.DestinationFileType != nil {
		in, out := &in.DestinationFileType, &out.DestinationFileType
		*out = new(string)
		**out = **in
	}
	if in.FilePrefix != nil {
		in, out := &in.FilePrefix, &out.FilePrefix
		*out = new(string)
		**out = **in
	}
	if in.ObsBucketPath != nil {
		in, out := &in.ObsBucketPath, &out.ObsBucketPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionFormat != nil {
		in, out := &in.PartitionFormat, &out.PartitionFormat
		*out = new(string)
		**out = **in
	}
	if in.RecordDelimiter != nil {
		in, out := &in.RecordDelimiter, &out.RecordDelimiter
		*out = new(string)
		**out = **in
	}
	if in.TaskName != nil {
		in, out := &in.TaskName, &out.TaskName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObsDestinationDescriptorObservation.
func (in *ObsDestinationDescriptorObservation) DeepCopy() *ObsDestinationDescriptorObservation {
	if in == nil {
		return nil
	}
	out := new(ObsDestinationDescriptorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObsDestinationDescriptorParameters) DeepCopyInto(out *ObsDestinationDescriptorParameters) {
	*out = *in
	if in.AgencyName != nil {
		in, out := &in.AgencyName, &out.AgencyName
		*out = new(string)
		**out = **in
	}
	if in.ConsumerStrategy != nil {
		in, out := &in.ConsumerStrategy, &out.ConsumerStrategy
		*out = new(string)
		**out = **in
	}
	if in.DeliverTimeInterval != nil {
		in, out := &in.DeliverTimeInterval, &out.DeliverTimeInterval
		*out = new(float64)
		**out = **in
	}
	if in.DestinationFileType != nil {
		in, out := &in.DestinationFileType, &out.DestinationFileType
		*out = new(string)
		**out = **in
	}
	if in.FilePrefix != nil {
		in, out := &in.FilePrefix, &out.FilePrefix
		*out = new(string)
		**out = **in
	}
	if in.ObsBucketPath != nil {
		in, out := &in.ObsBucketPath, &out.ObsBucketPath
		*out = new(string)
		**out = **in
	}
	if in.ObsBucketPathRef != nil {
		in, out := &in.ObsBucketPathRef, &out.ObsBucketPathRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ObsBucketPathSelector != nil {
		in, out := &in.ObsBucketPathSelector, &out.ObsBucketPathSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PartitionFormat != nil {
		in, out := &in.PartitionFormat, &out.PartitionFormat
		*out = new(string)
		**out = **in
	}
	if in.RecordDelimiter != nil {
		in, out := &in.RecordDelimiter, &out.RecordDelimiter
		*out = new(string)
		**out = **in
	}
	if in.TaskName != nil {
		in, out := &in.TaskName, &out.TaskName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObsDestinationDescriptorParameters.
func (in *ObsDestinationDescriptorParameters) DeepCopy() *ObsDestinationDescriptorParameters {
	if in == nil {
		return nil
	}
	out := new(ObsDestinationDescriptorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObsProcessingSchemaInitParameters) DeepCopyInto(out *ObsProcessingSchemaInitParameters) {
	*out = *in
	if in.TimestampFormat != nil {
		in, out := &in.TimestampFormat, &out.TimestampFormat
		*out = new(string)
		**out = **in
	}
	if in.TimestampName != nil {
		in, out := &in.TimestampName, &out.TimestampName
		*out = new(string)
		**out = **in
	}
	if in.TimestampType != nil {
		in, out := &in.TimestampType, &out.TimestampType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObsProcessingSchemaInitParameters.
func (in *ObsProcessingSchemaInitParameters) DeepCopy() *ObsProcessingSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObsProcessingSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObsProcessingSchemaObservation) DeepCopyInto(out *ObsProcessingSchemaObservation) {
	*out = *in
	if in.TimestampFormat != nil {
		in, out := &in.TimestampFormat, &out.TimestampFormat
		*out = new(string)
		**out = **in
	}
	if in.TimestampName != nil {
		in, out := &in.TimestampName, &out.TimestampName
		*out = new(string)
		**out = **in
	}
	if in.TimestampType != nil {
		in, out := &in.TimestampType, &out.TimestampType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObsProcessingSchemaObservation.
func (in *ObsProcessingSchemaObservation) DeepCopy() *ObsProcessingSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(ObsProcessingSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObsProcessingSchemaParameters) DeepCopyInto(out *ObsProcessingSchemaParameters) {
	*out = *in
	if in.TimestampFormat != nil {
		in, out := &in.TimestampFormat, &out.TimestampFormat
		*out = new(string)
		**out = **in
	}
	if in.TimestampName != nil {
		in, out := &in.TimestampName, &out.TimestampName
		*out = new(string)
		**out = **in
	}
	if in.TimestampType != nil {
		in, out := &in.TimestampType, &out.TimestampType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObsProcessingSchemaParameters.
func (in *ObsProcessingSchemaParameters) DeepCopy() *ObsProcessingSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(ObsProcessingSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionConsumingStatesInitParameters) DeepCopyInto(out *PartitionConsumingStatesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionConsumingStatesInitParameters.
func (in *PartitionConsumingStatesInitParameters) DeepCopy() *PartitionConsumingStatesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionConsumingStatesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionConsumingStatesObservation) DeepCopyInto(out *PartitionConsumingStatesObservation) {
	*out = *in
	if in.CheckpointType != nil {
		in, out := &in.CheckpointType, &out.CheckpointType
		*out = new(string)
		**out = **in
	}
	if in.EarliestOffset != nil {
		in, out := &in.EarliestOffset, &out.EarliestOffset
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LatestOffset != nil {
		in, out := &in.LatestOffset, &out.LatestOffset
		*out = new(float64)
		**out = **in
	}
	if in.SequenceNumber != nil {
		in, out := &in.SequenceNumber, &out.SequenceNumber
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionConsumingStatesObservation.
func (in *PartitionConsumingStatesObservation) DeepCopy() *PartitionConsumingStatesObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionConsumingStatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionConsumingStatesParameters) DeepCopyInto(out *PartitionConsumingStatesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionConsumingStatesParameters.
func (in *PartitionConsumingStatesParameters) DeepCopy() *PartitionConsumingStatesParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionConsumingStatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionsInitParameters) DeepCopyInto(out *PartitionsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionsInitParameters.
func (in *PartitionsInitParameters) DeepCopy() *PartitionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionsObservation) DeepCopyInto(out *PartitionsObservation) {
	*out = *in
	if in.HashRange != nil {
		in, out := &in.HashRange, &out.HashRange
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ParentPartitions != nil {
		in, out := &in.ParentPartitions, &out.ParentPartitions
		*out = new(string)
		**out = **in
	}
	if in.SequenceNumberRange != nil {
		in, out := &in.SequenceNumberRange, &out.SequenceNumberRange
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionsObservation.
func (in *PartitionsObservation) DeepCopy() *PartitionsObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionsParameters) DeepCopyInto(out *PartitionsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionsParameters.
func (in *PartitionsParameters) DeepCopy() *PartitionsParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2) DeepCopyInto(out *StreamV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2.
func (in *StreamV2) DeepCopy() *StreamV2 {
	if in == nil {
		return nil
	}
	out := new(StreamV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StreamV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2InitParameters) DeepCopyInto(out *StreamV2InitParameters) {
	*out = *in
	if in.AutoScaleMaxPartitionCount != nil {
		in, out := &in.AutoScaleMaxPartitionCount, &out.AutoScaleMaxPartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.AutoScaleMinPartitionCount != nil {
		in, out := &in.AutoScaleMinPartitionCount, &out.AutoScaleMinPartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
	if in.StreamType != nil {
		in, out := &in.StreamType, &out.StreamType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2InitParameters.
func (in *StreamV2InitParameters) DeepCopy() *StreamV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(StreamV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2List) DeepCopyInto(out *StreamV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StreamV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2List.
func (in *StreamV2List) DeepCopy() *StreamV2List {
	if in == nil {
		return nil
	}
	out := new(StreamV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StreamV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2Observation) DeepCopyInto(out *StreamV2Observation) {
	*out = *in
	if in.AutoScaleMaxPartitionCount != nil {
		in, out := &in.AutoScaleMaxPartitionCount, &out.AutoScaleMaxPartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.AutoScaleMinPartitionCount != nil {
		in, out := &in.AutoScaleMinPartitionCount, &out.AutoScaleMinPartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(float64)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]StreamV2PartitionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadablePartitionCount != nil {
		in, out := &in.ReadablePartitionCount, &out.ReadablePartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
	if in.StreamType != nil {
		in, out := &in.StreamType, &out.StreamType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WritablePartitionCount != nil {
		in, out := &in.WritablePartitionCount, &out.WritablePartitionCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2Observation.
func (in *StreamV2Observation) DeepCopy() *StreamV2Observation {
	if in == nil {
		return nil
	}
	out := new(StreamV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2Parameters) DeepCopyInto(out *StreamV2Parameters) {
	*out = *in
	if in.AutoScaleMaxPartitionCount != nil {
		in, out := &in.AutoScaleMaxPartitionCount, &out.AutoScaleMaxPartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.AutoScaleMinPartitionCount != nil {
		in, out := &in.AutoScaleMinPartitionCount, &out.AutoScaleMinPartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
	if in.StreamType != nil {
		in, out := &in.StreamType, &out.StreamType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2Parameters.
func (in *StreamV2Parameters) DeepCopy() *StreamV2Parameters {
	if in == nil {
		return nil
	}
	out := new(StreamV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2PartitionsInitParameters) DeepCopyInto(out *StreamV2PartitionsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2PartitionsInitParameters.
func (in *StreamV2PartitionsInitParameters) DeepCopy() *StreamV2PartitionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StreamV2PartitionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2PartitionsObservation) DeepCopyInto(out *StreamV2PartitionsObservation) {
	*out = *in
	if in.HashRange != nil {
		in, out := &in.HashRange, &out.HashRange
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ParentPartitions != nil {
		in, out := &in.ParentPartitions, &out.ParentPartitions
		*out = new(string)
		**out = **in
	}
	if in.SequenceNumberRange != nil {
		in, out := &in.SequenceNumberRange, &out.SequenceNumberRange
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2PartitionsObservation.
func (in *StreamV2PartitionsObservation) DeepCopy() *StreamV2PartitionsObservation {
	if in == nil {
		return nil
	}
	out := new(StreamV2PartitionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2PartitionsParameters) DeepCopyInto(out *StreamV2PartitionsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2PartitionsParameters.
func (in *StreamV2PartitionsParameters) DeepCopy() *StreamV2PartitionsParameters {
	if in == nil {
		return nil
	}
	out := new(StreamV2PartitionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2Spec) DeepCopyInto(out *StreamV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2Spec.
func (in *StreamV2Spec) DeepCopy() *StreamV2Spec {
	if in == nil {
		return nil
	}
	out := new(StreamV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamV2Status) DeepCopyInto(out *StreamV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamV2Status.
func (in *StreamV2Status) DeepCopy() *StreamV2Status {
	if in == nil {
		return nil
	}
	out := new(StreamV2Status)
	in.DeepCopyInto(out)
	return out
}
